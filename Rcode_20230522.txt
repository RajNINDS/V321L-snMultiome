#------------------------------------------------------------------------------
# Code Call Organization By: Kory R Johnson
# Affiliation: NINDS/NIH Bioinformatics Section
# Contact information: johnsonko@mail.nih.gov
#------------------------------------------------------------------------------

cd /data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/h5_files

# LL_F_NAC
scp -vr johnsonko@nindsdirbis7.ninds.nih.gov:/shares/BIS/PI/Kory_Johnson_and_Amar_Yavatkar/Lorna_Role/David_Talmage/Rajebhosale_Prithviraj/GEX_ATAC_Seq_20230522/1_Data_Generation/LL_F_NAC_outs_051523/LL_F_NAC_filtered_feature_bc_matrix.h5 .

# LL_M_NAC
scp -vr johnsonko@nindsdirbis7.ninds.nih.gov:/shares/BIS/PI/Kory_Johnson_and_Amar_Yavatkar/Lorna_Role/David_Talmage/Rajebhosale_Prithviraj/GEX_ATAC_Seq_20230522/1_Data_Generation/LL_M_NAC_outs_051523/LL_M_NAC_filtered_feature_bc_matrix.h5 .

# LL_F_VHIPP
scp -vr johnsonko@nindsdirbis7.ninds.nih.gov:/shares/BIS/PI/Kory_Johnson_and_Amar_Yavatkar/Lorna_Role/David_Talmage/Rajebhosale_Prithviraj/GEX_ATAC_Seq_20230522/1_Data_Generation/LL_F_VHIPP_outs_051623/LL_F_VHIPP_filtered_feature_bc_matrix.h5 .

# LL_M_VHIPP
scp -vr johnsonko@nindsdirbis7.ninds.nih.gov:/shares/BIS/PI/Kory_Johnson_and_Amar_Yavatkar/Lorna_Role/David_Talmage/Rajebhosale_Prithviraj/GEX_ATAC_Seq_20230522/1_Data_Generation/LL_M_VHIPP_outs_051523/LL_M_VHIPP_filtered_feature_bc_matrix.h5 .

# LL_F1_DG
scp -vr johnsonko@nindsdirbis7.ninds.nih.gov:/shares/BIS/PI/Kory_Johnson_and_Amar_Yavatkar/Lorna_Role/David_Talmage/Rajebhosale_Prithviraj/GEX_ATAC_Seq_20230522/1_Data_Generation/LL_F1_DG_outs_051523/LL_F1_DG_filtered_feature_bc_matrix.h5 .

# LL_F2_DG
scp -vr johnsonko@nindsdirbis7.ninds.nih.gov:/shares/BIS/PI/Kory_Johnson_and_Amar_Yavatkar/Lorna_Role/David_Talmage/Rajebhosale_Prithviraj/GEX_ATAC_Seq_20230522/1_Data_Generation/LL_F2_DG_outs_051523/LL_F2_DG_filtered_feature_bc_matrix.h5 .

# LL_M1_DG
scp -vr johnsonko@nindsdirbis7.ninds.nih.gov:/shares/BIS/PI/Kory_Johnson_and_Amar_Yavatkar/Lorna_Role/David_Talmage/Rajebhosale_Prithviraj/GEX_ATAC_Seq_20230522/1_Data_Generation/LL_M1_DG_outs_051523/LL_M1_DG_filtered_feature_bc_matrix.h5 .

# LL_M2_DG
scp -vr johnsonko@nindsdirbis7.ninds.nih.gov:/shares/BIS/PI/Kory_Johnson_and_Amar_Yavatkar/Lorna_Role/David_Talmage/Rajebhosale_Prithviraj/GEX_ATAC_Seq_20230522/1_Data_Generation/LL_M2_DG_outs_051523/LL_M2_DG_filtered_feature_bc_matrix.h5 .

#------------------------------------------------------------------------------
# References
#------------------------------------------------------------------------------

# https://satijalab.org/seurat/articles/weighted_nearest_neighbor_analysis.html#wnn-analysis-of-10x-multiome-rna-atac-1
# https://github.com/stuart-lab/signac/blob/master/vignettes/merging.Rmd
# https://satijalab.org/seurat/articles/atacseq_integration_vignette.html#identifying-anchors-between-scrna-seq-and-scatac-seq-datasets-1

#------------------------------------------------------------------------------
# Launch
#------------------------------------------------------------------------------

cd /data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/h5_files

sinteractive --mem=200g --cpus-per-task=4 --time 36:00:00 --gres=lscratch:200 # augur

#------------------------------------------------------------------------------
# Set-up
#------------------------------------------------------------------------------

module load R Rstudio
rstudio &

#------------------------------------------------------------------------------
# Initialize
#------------------------------------------------------------------------------

rm(list=ls())
options(object.size=Inf)
setwd("/data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/h5_files")

#------------------------------------------------------------------------------
# Install
#------------------------------------------------------------------------------

# install.packages("devtools")
library(devtools)

# install.packages("harmony")
library(harmony)

# BiocManager::install("DropletUtils")
library(DropletUtils)

# BiocManager::install("scDblFinder")
library(scDblFinder)

# remotes::install_version("Seurat", version = "4.2.0")
library(Seurat)
library(SeuratData)
library(cowplot)

# remotes::install_github('satijalab/azimuth', version = "0.4.6")
library(Azimuth)

# BiocManager::install("SingleCellExperiment")
library(SingleCellExperiment)

# BiocManager::install("ggplot2")
library(ggplot2)

# BiocManager::install("scales")
library(scales)

# BiocManager::install("dplyr")
library("dplyr")

# BiocManager::install("clustree")
library("clustree")

# BiocManager::install("scater")
library("scater")

# BiocManager::install("Signac")
library(Signac)

# BiocManager::install("EnsDb.Mmusculus.v79")
library(EnsDb.Mmusculus.v79)

# BiocManager::install("GenomicRanges")
library(GenomicRanges)

# BiocManager::install("future")
library(future)

# BiocManager::install("stringr")
library(stringr)

# BiocManager::install("openxlsx")
library(openxlsx)

# BiocManager::install("pheatmap")
library(pheatmap)

'%!in%' <- Negate('%in%')

# BiocManager::install("BSgenome.Mmusculus.UCSC.mm10")
library(BSgenome.Mmusculus.UCSC.mm10)

# BiocManager::install("chromVAR")
library(chromVAR)

# BiocManager::install("JASPAR2020")
library(JASPAR2020)

# BiocManager::install("TFBSTools")
library(TFBSTools)

# BiocManager::install("motifmatchr")
library(motifmatchr)

# devtools::install_github("neurorestore/Augur")
library(Augur)
library(BiocParallel)

# BiocManager::install("openxlsx")
library(openxlsx)

# BiocManager::install("patchwork")
library(patchwork)

#------------------------------------------------------------------------------
# Import & Split
#------------------------------------------------------------------------------

DG_F1_VV <- Read10X_h5("/data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/h5_files/DG_F1_VV.h5")

DG_F2_VV <- Read10X_h5("/data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/h5_files/DG_F2_VV.h5")

DG_M1_VV <- Read10X_h5("/data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/h5_files/DG_M1_VV.h5")

DG_M2_VV <- Read10X_h5("/data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/h5_files/DG_M2_VV.h5")

LL_F1_DG <- Read10X_h5("/data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/h5_files/LL_F1_DG.h5")

LL_F2_DG <- Read10X_h5("/data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/h5_files/LL_F2_DG.h5")

LL_M1_DG <- Read10X_h5("/data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/h5_files/LL_M1_DG.h5")

LL_M2_DG <- 
Read10X_h5("/data/johnsonko/Analysis_Projects/Lorna_Role/Rajebhosale_Prithviraj/scRNA_Seq_Project_20230522/h5_files/LL_M2_DG.h5")

DG_F1_VV.gex <- DG_F1_VV[[1]]
DG_F2_VV.gex <- DG_F2_VV[[1]]
DG_M1_VV.gex <- DG_M1_VV[[1]]
DG_M2_VV.gex <- DG_M2_VV[[1]]

LL_F1_DG.gex <- LL_F1_DG[[1]]
LL_F2_DG.gex <- LL_F2_DG[[1]]
LL_M1_DG.gex <- LL_M1_DG[[1]]
LL_M2_DG.gex <- LL_M2_DG[[1]]

#------------------------------------------------------------------------------
# GEX Base Analysis
#------------------------------------------------------------------------------

DG_F1_VV.gex.seurat <- CreateSeuratObject(counts = DG_F1_VV.gex)
DG_F2_VV.gex.seurat <- CreateSeuratObject(counts = DG_F2_VV.gex)
DG_M1_VV.gex.seurat <- CreateSeuratObject(counts = DG_M1_VV.gex)
DG_M2_VV.gex.seurat <- CreateSeuratObject(counts = DG_M2_VV.gex)

LL_F1_DG.gex.seurat <- CreateSeuratObject(counts = LL_F1_DG.gex)
LL_F2_DG.gex.seurat <- CreateSeuratObject(counts = LL_F2_DG.gex)
LL_M1_DG.gex.seurat <- CreateSeuratObject(counts = LL_M1_DG.gex)
LL_M2_DG.gex.seurat <- CreateSeuratObject(counts = LL_M2_DG.gex)

Idents(DG_F1_VV.gex.seurat) <- "DG_F1_VV"
Idents(DG_F2_VV.gex.seurat) <- "DG_F2_VV"
Idents(DG_M1_VV.gex.seurat) <- "DG_M1_VV"
Idents(DG_M2_VV.gex.seurat) <- "DG_M2_VV"

Idents(LL_F1_DG.gex.seurat) <- "LL_F1_DG"
Idents(LL_F2_DG.gex.seurat) <- "LL_F2_DG"
Idents(LL_M1_DG.gex.seurat) <- "LL_M1_DG"
Idents(LL_M2_DG.gex.seurat) <- "LL_M2_DG"

DG_F1_VV.gex.seurat$dataset <- "DG_F1_VV"
DG_F2_VV.gex.seurat$dataset <- "DG_F2_VV"
DG_M1_VV.gex.seurat$dataset <- "DG_M1_VV"
DG_M2_VV.gex.seurat$dataset <- "DG_M2_VV"

LL_F1_DG.gex.seurat$dataset <- "LL_F1_DG"
LL_F2_DG.gex.seurat$dataset <- "LL_F2_DG"
LL_M1_DG.gex.seurat$dataset <- "LL_M1_DG"
LL_M2_DG.gex.seurat$dataset <- "LL_M2_DG"

# Calculate MT stats

DG_F1_VV.gex.seurat <- PercentageFeatureSet(DG_F1_VV.gex.seurat, pattern = "^mt-", col.name = "percent.mt")
DG_F2_VV.gex.seurat <- PercentageFeatureSet(DG_F2_VV.gex.seurat, pattern = "^mt-", col.name = "percent.mt")
DG_M1_VV.gex.seurat <- PercentageFeatureSet(DG_M1_VV.gex.seurat, pattern = "^mt-", col.name = "percent.mt")
DG_M2_VV.gex.seurat <- PercentageFeatureSet(DG_M2_VV.gex.seurat, pattern = "^mt-", col.name = "percent.mt")

LL_F1_DG.gex.seurat <- PercentageFeatureSet(LL_F1_DG.gex.seurat, pattern = "^mt-", col.name = "percent.mt")
LL_F2_DG.gex.seurat <- PercentageFeatureSet(LL_F2_DG.gex.seurat, pattern = "^mt-", col.name = "percent.mt")
LL_M1_DG.gex.seurat <- PercentageFeatureSet(LL_M1_DG.gex.seurat, pattern = "^mt-", col.name = "percent.mt")
LL_M2_DG.gex.seurat <- PercentageFeatureSet(LL_M2_DG.gex.seurat, pattern = "^mt-", col.name = "percent.mt")

# Merge

all.normalized <- merge(DG_F1_VV.gex.seurat, y = c(DG_F2_VV.gex.seurat,DG_M1_VV.gex.seurat,DG_M2_VV.gex.seurat,LL_F1_DG.gex.seurat,LL_F2_DG.gex.seurat,LL_M1_DG.gex.seurat,LL_M2_DG.gex.seurat), add.cell.ids=c("DG_F1_VV","DG_F2_VV","DG_M1_VV","DG_M2_VV","LL_F1_DG","LL_F2_DG","LL_M1_DG","LL_M2_DG"), project="Raj_DG_20230522", merge.data=TRUE)

temp <- colnames(all.normalized)

temp1 <- grep("DG_F1_VV",temp)
names(temp1) <- rep("DG_F1_VV",length(temp1))

temp2 <- grep("DG_F2_VV",temp)
names(temp2) <- rep("DG_F2_VV",length(temp2))

temp3 <- grep("DG_M1_VV",temp)
names(temp3) <- rep("DG_M1_VV",length(temp3))

temp4 <- grep("DG_M2_VV",temp)
names(temp4) <- rep("DG_M2_VV",length(temp4))

temp5 <- grep("LL_F1_DG",temp)
names(temp5) <- rep("LL_F1_DG",length(temp5))

temp6 <- grep("LL_F2_DG",temp)
names(temp6) <- rep("LL_F2_DG",length(temp6))

temp7 <- grep("LL_M1_DG",temp)
names(temp7) <- rep("LL_M1_DG",length(temp7))

temp8 <- grep("LL_M2_DG",temp)
names(temp8) <- rep("LL_M2_DG",length(temp8))

temp <- names(sort(c(temp1,temp2,temp3,temp4,temp5,temp6,temp7,temp8)))
all.normalized@meta.data$orig.ident <- temp

# Inspect

svg("1_gex_primary_inspection_barplot_number_cells_per_sample.svg")
temp1 <- table(all.normalized@meta.data$orig.ident)
ccc <- hue_pal()(8)
par(mar=c(11,4,4,2))
barplot(as.numeric(temp1),ylab="nCells",names.arg = names(temp1),las = 2,col=ccc) + theme(axis.text.x = element_text(angle = 90))
abline(h=0)
dev.off()
ccc <- hue_pal()(8)
par(mar=c(11,4,4,2))
barplot(as.numeric(temp1),ylab="nCells",names.arg = names(temp1),las = 2,col=ccc) + theme(axis.text.x = element_text(angle = 90))
abline(h=0)

svg("2_gex_primary_inspection_violin_plot.svg")
VlnPlot(all.normalized, features = c("percent.mt","nCount_RNA","nFeature_RNA"), ncol = 3,pt.size=0)
dev.off()
VlnPlot(all.normalized, features = c("percent.mt","nCount_RNA","nFeature_RNA"), ncol = 3,pt.size=0)

plot1 <- FeatureScatter(all.normalized, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(all.normalized, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")

svg("3_gex_primary_inspection_scatter_plots.svg")
plot1 + NoLegend() + plot2
dev.off()
plot1 + NoLegend() + plot2

svg("4_gex_primary_inspection_MT_density_plot.svg")
plot(density(as.numeric(all.normalized@meta.data$percent.mt)),main="percent.mt")
abline(v=(mean(as.numeric(all.normalized@meta.data$percent.mt))+(1*sd(as.numeric(all.normalized@meta.data$percent.mt)))),lty=2)
(mean(as.numeric(all.normalized@meta.data$percent.mt))+(1*sd(as.numeric(all.normalized@meta.data$percent.mt))))
abline(v=(mean(as.numeric(all.normalized@meta.data$percent.mt))+(2*sd(as.numeric(all.normalized@meta.data$percent.mt)))),lty=3)
(mean(as.numeric(all.normalized@meta.data$percent.mt))+(2*sd(as.numeric(all.normalized@meta.data$percent.mt))))
abline(v=(mean(as.numeric(all.normalized@meta.data$percent.mt))+(3*sd(as.numeric(all.normalized@meta.data$percent.mt)))),lty=4)
(mean(as.numeric(all.normalized@meta.data$percent.mt))+(3*sd(as.numeric(all.normalized@meta.data$percent.mt))))
abline(v=(mean(as.numeric(all.normalized@meta.data$percent.mt))+(4*sd(as.numeric(all.normalized@meta.data$percent.mt)))),lty=5)
(mean(as.numeric(all.normalized@meta.data$percent.mt))+(4*sd(as.numeric(all.normalized@meta.data$percent.mt))))
abline(v=5,lty=6)
legend("topright",c("1SD","2SD","3SD","4SD","5%"),lwd=2,lty=c(2,3,4,5,6))
dev.off()
plot(density(as.numeric(all.normalized@meta.data$percent.mt)),main="percent.mt")
abline(v=(mean(as.numeric(all.normalized@meta.data$percent.mt))+(1*sd(as.numeric(all.normalized@meta.data$percent.mt)))),lty=2)
(mean(as.numeric(all.normalized@meta.data$percent.mt))+(1*sd(as.numeric(all.normalized@meta.data$percent.mt))))
abline(v=(mean(as.numeric(all.normalized@meta.data$percent.mt))+(2*sd(as.numeric(all.normalized@meta.data$percent.mt)))),lty=3)
(mean(as.numeric(all.normalized@meta.data$percent.mt))+(2*sd(as.numeric(all.normalized@meta.data$percent.mt))))
abline(v=(mean(as.numeric(all.normalized@meta.data$percent.mt))+(3*sd(as.numeric(all.normalized@meta.data$percent.mt)))),lty=4)
(mean(as.numeric(all.normalized@meta.data$percent.mt))+(3*sd(as.numeric(all.normalized@meta.data$percent.mt))))
abline(v=(mean(as.numeric(all.normalized@meta.data$percent.mt))+(4*sd(as.numeric(all.normalized@meta.data$percent.mt)))),lty=5)
(mean(as.numeric(all.normalized@meta.data$percent.mt))+(4*sd(as.numeric(all.normalized@meta.data$percent.mt))))
abline(v=5,lty=6)
legend("topright",c("1SD","2SD","3SD","4SD","5%"),lwd=2,lty=c(2,3,4,5,6))

svg("5_gex_primary_inspection_MT_violin_plot_with_selected_cutoffs.svg")
VlnPlot(all.normalized, features = c("percent.mt"),pt.size = 0) + NoLegend() + geom_hline(yintercept=(mean(as.numeric(all.normalized@meta.data$percent.mt))+(1*sd(as.numeric(all.normalized@meta.data$percent.mt)))),color="black",linetype=c(2)) + theme(axis.text.x = element_text(angle = 90))
dev.off()
VlnPlot(all.normalized, features = c("percent.mt"),pt.size = 0) + NoLegend() + geom_hline(yintercept=(mean(as.numeric(all.normalized@meta.data$percent.mt))+(1*sd(as.numeric(all.normalized@meta.data$percent.mt)))),color="black",linetype=c(2)) + theme(axis.text.x = element_text(angle = 90))

svg("6_gex_primary_inspection_ncount_density_plot.svg")
plot(density(as.numeric(all.normalized@meta.data$nCount_RNA)),main="nCount_RNA")
abline(v=(mean(as.numeric(all.normalized@meta.data$nCount_RNA))+(1*sd(as.numeric(all.normalized@meta.data$nCount_RNA)))),lty=2)
(mean(as.numeric(all.normalized@meta.data$nCount_RNA))+(1*sd(as.numeric(all.normalized@meta.data$nCount_RNA))))
abline(v=(mean(as.numeric(all.normalized@meta.data$nCount_RNA))+(2*sd(as.numeric(all.normalized@meta.data$nCount_RNA)))),lty=3)
(mean(as.numeric(all.normalized@meta.data$nCount_RNA))+(2*sd(as.numeric(all.normalized@meta.data$nCount_RNA))))
abline(v=(mean(as.numeric(all.normalized@meta.data$nCount_RNA))+(3*sd(as.numeric(all.normalized@meta.data$nCount_RNA)))),lty=4)
(mean(as.numeric(all.normalized@meta.data$nCount_RNA))+(3*sd(as.numeric(all.normalized@meta.data$nCount_RNA))))
abline(v=(mean(as.numeric(all.normalized@meta.data$nCount_RNA))+(4*sd(as.numeric(all.normalized@meta.data$nCount_RNA)))),lty=5)
(mean(as.numeric(all.normalized@meta.data$nCount_RNA))+(4*sd(as.numeric(all.normalized@meta.data$nCount_RNA))))
abline(v=500,lty=1)
legend("topright",c("250","1SD","2SD","3SD","4SD"),lwd=2,lty=c(1,2,3,4,5))
dev.off()
plot(density(as.numeric(all.normalized@meta.data$nCount_RNA)),main="nCount_RNA")
abline(v=(mean(as.numeric(all.normalized@meta.data$nCount_RNA))+(1*sd(as.numeric(all.normalized@meta.data$nCount_RNA)))),lty=2)
(mean(as.numeric(all.normalized@meta.data$nCount_RNA))+(1*sd(as.numeric(all.normalized@meta.data$nCount_RNA))))
abline(v=(mean(as.numeric(all.normalized@meta.data$nCount_RNA))+(2*sd(as.numeric(all.normalized@meta.data$nCount_RNA)))),lty=3)
(mean(as.numeric(all.normalized@meta.data$nCount_RNA))+(2*sd(as.numeric(all.normalized@meta.data$nCount_RNA))))
abline(v=(mean(as.numeric(all.normalized@meta.data$nCount_RNA))+(3*sd(as.numeric(all.normalized@meta.data$nCount_RNA)))),lty=4)
(mean(as.numeric(all.normalized@meta.data$nCount_RNA))+(3*sd(as.numeric(all.normalized@meta.data$nCount_RNA))))
abline(v=(mean(as.numeric(all.normalized@meta.data$nCount_RNA))+(4*sd(as.numeric(all.normalized@meta.data$nCount_RNA)))),lty=5)
(mean(as.numeric(all.normalized@meta.data$nCount_RNA))+(4*sd(as.numeric(all.normalized@meta.data$nCount_RNA))))
abline(v=500,lty=1)
legend("topright",c("250","1SD","2SD","3SD","4SD"),lwd=2,lty=c(1,2,3,4,5))

svg("7_gex_primary_inspection_ncount_violin_plot_with_selected_cutoffs.svg")
VlnPlot(all.normalized, features = "nCount_RNA",pt.size = 0) + NoLegend() + geom_hline(yintercept=c(500,(mean(as.numeric(all.normalized@meta.data$nCount_RNA))+(2*sd(as.numeric(all.normalized@meta.data$nCount_RNA))))),color="black",linetype=c(1,3)) + theme(axis.text.x = element_text(angle = 90))
dev.off()
VlnPlot(all.normalized, features = "nCount_RNA",pt.size = 0) + NoLegend() + geom_hline(yintercept=c(500,(mean(as.numeric(all.normalized@meta.data$nCount_RNA))+(2*sd(as.numeric(all.normalized@meta.data$nCount_RNA))))),color="black",linetype=c(1,3)) + theme(axis.text.x = element_text(angle = 90))

svg("8_gex_primary_inspection_nfeatures_density_plot.svg")
plot(density(as.numeric(all.normalized@meta.data$nFeature_RNA)),main="nFeature_RNA")
abline(v=(mean(as.numeric(all.normalized@meta.data$nFeature_RNA))+(1*sd(as.numeric(all.normalized@meta.data$nFeature_RNA)))),lty=2)
(mean(as.numeric(all.normalized@meta.data$nFeature_RNA))+(1*sd(as.numeric(all.normalized@meta.data$nFeature_RNA))))
abline(v=(mean(as.numeric(all.normalized@meta.data$nFeature_RNA))+(2*sd(as.numeric(all.normalized@meta.data$nFeature_RNA)))),lty=3)
(mean(as.numeric(all.normalized@meta.data$nFeature_RNA))+(2*sd(as.numeric(all.normalized@meta.data$nFeature_RNA))))
abline(v=(mean(as.numeric(all.normalized@meta.data$nFeature_RNA))+(3*sd(as.numeric(all.normalized@meta.data$nFeature_RNA)))),lty=4)
(mean(as.numeric(all.normalized@meta.data$nFeature_RNA))+(3*sd(as.numeric(all.normalized@meta.data$nFeature_RNA))))
abline(v=(mean(as.numeric(all.normalized@meta.data$nFeature_RNA))+(4*sd(as.numeric(all.normalized@meta.data$nFeature_RNA)))),lty=5)
(mean(as.numeric(all.normalized@meta.data$nFeature_RNA))+(4*sd(as.numeric(all.normalized@meta.data$nFeature_RNA))))
abline(v=250,lty=1)
legend("topright",c("250","1SD","2SD","3SD","4SD"),lwd=2,lty=c(1,2,3,4,5))
dev.off()
plot(density(as.numeric(all.normalized@meta.data$nFeature_RNA)),main="nFeature_RNA")
abline(v=(mean(as.numeric(all.normalized@meta.data$nFeature_RNA))+(1*sd(as.numeric(all.normalized@meta.data$nFeature_RNA)))),lty=2)
(mean(as.numeric(all.normalized@meta.data$nFeature_RNA))+(1*sd(as.numeric(all.normalized@meta.data$nFeature_RNA))))
abline(v=(mean(as.numeric(all.normalized@meta.data$nFeature_RNA))+(2*sd(as.numeric(all.normalized@meta.data$nFeature_RNA)))),lty=3)
(mean(as.numeric(all.normalized@meta.data$nFeature_RNA))+(2*sd(as.numeric(all.normalized@meta.data$nFeature_RNA))))
abline(v=(mean(as.numeric(all.normalized@meta.data$nFeature_RNA))+(3*sd(as.numeric(all.normalized@meta.data$nFeature_RNA)))),lty=4)
(mean(as.numeric(all.normalized@meta.data$nFeature_RNA))+(3*sd(as.numeric(all.normalized@meta.data$nFeature_RNA))))
abline(v=(mean(as.numeric(all.normalized@meta.data$nFeature_RNA))+(4*sd(as.numeric(all.normalized@meta.data$nFeature_RNA)))),lty=5)
(mean(as.numeric(all.normalized@meta.data$nFeature_RNA))+(4*sd(as.numeric(all.normalized@meta.data$nFeature_RNA))))
abline(v=250,lty=1)
legend("topright",c("250","1SD","2SD","3SD","4SD"),lwd=2,lty=c(1,2,3,4,5))

svg("9_gex_primary_inspection_nfeatures_violin_plot_with_selected_cutoffs.svg")
VlnPlot(all.normalized, features = "nFeature_RNA",pt.size = 0) + NoLegend() + geom_hline(yintercept=c(250,mean(as.numeric(all.normalized@meta.data$nFeature_RNA))+(2*sd(as.numeric(all.normalized@meta.data$nFeature_RNA)))),color="black",linetype=c(1,3)) + theme(axis.text.x = element_text(angle = 90))
dev.off()
VlnPlot(all.normalized, features = "nFeature_RNA",pt.size = 0) + NoLegend() + geom_hline(yintercept=c(250,mean(as.numeric(all.normalized@meta.data$nFeature_RNA))+(2*sd(as.numeric(all.normalized@meta.data$nFeature_RNA)))),color="black",linetype=c(1,3)) + theme(axis.text.x = element_text(angle = 90))

# Filter

svg("10_gex_pre_hard_filtering_scatterplot_with_selected_cutoffs.svg")
plot1 + geom_hline(yintercept=(mean(as.numeric(all.normalized@meta.data$percent.mt))+(1*sd(as.numeric(all.normalized@meta.data$percent.mt)))),color="black",linetype=2) + NoLegend() + plot2 + geom_hline(yintercept=c(250,(mean(as.numeric(all.normalized@meta.data$nFeature_RNA))+(2*sd(as.numeric(all.normalized@meta.data$nFeature_RNA))))),color="black",linetype=2) + geom_vline(xintercept=c(500,(mean(as.numeric(all.normalized@meta.data$nCount_RNA))+(2*sd(as.numeric(all.normalized@meta.data$nCount_RNA))))),color="black",linetype=2)
dev.off()
plot1 + geom_hline(yintercept=(mean(as.numeric(all.normalized@meta.data$percent.mt))+(1*sd(as.numeric(all.normalized@meta.data$percent.mt)))),color="black",linetype=2) + NoLegend() + plot2 + geom_hline(yintercept=c(250,(mean(as.numeric(all.normalized@meta.data$nFeature_RNA))+(2*sd(as.numeric(all.normalized@meta.data$nFeature_RNA))))),color="black",linetype=2) + geom_vline(xintercept=c(500,(mean(as.numeric(all.normalized@meta.data$nCount_RNA))+(2*sd(as.numeric(all.normalized@meta.data$nCount_RNA))))),color="black",linetype=2)

# MT Filter = 2.787142
(mean(as.numeric(all.normalized@meta.data$percent.mt))+(1*sd(as.numeric(all.normalized@meta.data$percent.mt))))

# nFeature Filter = 3307.526
mean(as.numeric(all.normalized@meta.data$nFeature_RNA))+(2*sd(as.numeric(all.normalized@meta.data$nFeature_RNA)))

# nCount Filter = 8916.1
mean(as.numeric(all.normalized@meta.data$nCount_RNA))+(2*sd(as.numeric(all.normalized@meta.data$nCount_RNA)))

all.filtered <- subset(all.normalized, subset = nCount_RNA > 500 & nFeature_RNA > 250 & nFeature_RNA < 3307.526 & nCount_RNA < 8916.1 & percent.mt < 2.787142)

temp <- rownames(all.filtered)
temp <- grep("^mt-",temp)
all.filtered <- all.filtered[-c(temp),]

plot1 <- FeatureScatter(all.filtered, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(all.filtered, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")

svg("11_gex_post_hard_filtering_scatterplot_with_selected_cutoffs.svg")
plot2
dev.off()
plot2

svg("12_gex_post_hard_filtering_barplot_number_cells_per_sample.svg")
temp1 <- table(all.filtered@meta.data$orig.ident)
ccc <- hue_pal()(8)
par(mar=c(11,4,4,2))
barplot(as.numeric(temp1),ylab="nCells",names.arg = names(temp1),las = 2,col=ccc) + theme(axis.text.x = element_text(angle = 90))
abline(h=0)
dev.off()
ccc <- hue_pal()(8)
par(mar=c(11,4,4,2))
barplot(as.numeric(temp1),ylab="nCells",names.arg = names(temp1),las = 2,col=ccc) + theme(axis.text.x = element_text(angle = 90))
abline(h=0)

# identify and remove doublet cells by sample

all.list <- SplitObject(all.filtered, split.by = "orig.ident")
running.keep <- NULL
for(i in 1:length(all.list)) {
	print(i)
	temp.grab <- all.list[[i]]
	genes.to.use <- rownames(temp.grab)
	DefaultAssay(temp.grab) <- "RNA"
	temp.grab.sce <- as.SingleCellExperiment(temp.grab)
	temp.grab.sce <- temp.grab.sce[genes.to.use,]
	set.seed(123)
	dbl.dens <- computeDoubletDensity(temp.grab.sce, d=100)
	temp.grab$DoubletScore <- log10(dbl.dens+1)
	temp1 <- temp.grab$DoubletScore
	names(temp1) <- colnames(temp.grab.sce)
	temp2 <- as.numeric(temp1)>(mean(as.numeric(temp1))+(2*sd(as.numeric(temp1))))
	names(temp2) <- names(temp1)
	temp3 <- temp2[temp2=="FALSE"]
	running.keep <- c(running.keep,names(temp3))
}

all.curated <- all.filtered[,running.keep]

svg("13_gex_post_doublet_cell_filtering_barplot_number_cells_per_sample.svg")
temp1 <- table(all.curated@meta.data$orig.ident)
ccc <- hue_pal()(8)
par(mar=c(11,4,4,2))
barplot(as.numeric(temp1),ylab="nCells",names.arg = names(temp1),las = 2,col=ccc) + theme(axis.text.x = element_text(angle = 90))
abline(h=0)
dev.off()
temp1 <- table(all.curated@meta.data$orig.ident)
ccc <- hue_pal()(8)
par(mar=c(11,4,4,2))
barplot(as.numeric(temp1),ylab="nCells",names.arg = names(temp1),las = 2,col=ccc) + theme(axis.text.x = element_text(angle = 90))
abline(h=0)

# integrate via harmony

harmony.go <- Seurat::NormalizeData(all.curated,verbose = FALSE) %>%
    FindVariableFeatures(selection.method = "vst", nfeatures = 3000) %>% 
    ScaleData(vars.to.regress="percent.mt",verbose = FALSE) %>% 
    RunPCA(pc.genes = harmony.go@var.genes, npcs = 200, verbose = FALSE)
p <- ElbowPlot(harmony.go,ndims=200)
svg("14_pre_harmony_integration_scree_plot.svg")
p
dev.off()
p

harmony.go <- RunPCA(harmony.go, pc.genes = harmony.go@var.genes, npcs = 75, verbose = FALSE) %>% 
	      RunHarmony("orig.ident", plot_convergence = TRUE) %>% 
	      RunUMAP(reduction = "harmony", dims = 1:75)

svg("15_post_harmony_integration_umap_plot_with_sample_overlaid.svg")
DimPlot(harmony.go, label=FALSE, group.by="orig.ident")
dev.off()
DimPlot(harmony.go, label=FALSE, group.by="orig.ident")

svg("16_post_harmony_integration_umap_plot_split_out_by_sample.svg",width=20)
DimPlot(harmony.go, reduction = "umap", split.by = "orig.ident", group.by = "orig.ident",ncol=4)
dev.off()
DimPlot(harmony.go, reduction = "umap", split.by = "orig.ident", group.by = "orig.ident",ncol=4)

# perform initial clustering and inspect by clustree

harmony.go <- harmony.go %>% FindNeighbors(harmony.go, reduction = "harmony", dims = 1:75, verbose = FALSE) %>% 
	FindClusters(resolution=c(0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2.0,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3.0,3.1,3.2,3.3,3.4,3.5),save.SNN=TRUE)

svg("17_initial_clustering_clustree_results.svg",width=10,height=25)
clustree(harmony.go,prefix="RNA_snn_res.")
dev.off()
clustree(harmony.go,prefix="RNA_snn_res.")

pdf("18_initial_clustering_umap_plots_per_resolution.pdf")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.0.04)))))
harmony.go@meta.data$RNA_snn_res.0.04 <- factor(x=harmony.go@meta.data$RNA_snn_res.0.04, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.0.04")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.0.05)))))
harmony.go@meta.data$RNA_snn_res.0.05 <- factor(x=harmony.go@meta.data$RNA_snn_res.0.05, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.0.05")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.0.06)))))
harmony.go@meta.data$RNA_snn_res.0.06 <- factor(x=harmony.go@meta.data$RNA_snn_res.0.06, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.0.06")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.0.07)))))
harmony.go@meta.data$RNA_snn_res.0.07 <- factor(x=harmony.go@meta.data$RNA_snn_res.0.07, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.0.07")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.0.08)))))
harmony.go@meta.data$RNA_snn_res.0.08 <- factor(x=harmony.go@meta.data$RNA_snn_res.0.08, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.0.08")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.0.09)))))
harmony.go@meta.data$RNA_snn_res.0.09 <- factor(x=harmony.go@meta.data$RNA_snn_res.0.09, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.0.09")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.0.1)))))
harmony.go@meta.data$RNA_snn_res.0.1 <- factor(x=harmony.go@meta.data$RNA_snn_res.0.1, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.0.1")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.0.2)))))
harmony.go@meta.data$RNA_snn_res.0.2 <- factor(x=harmony.go@meta.data$RNA_snn_res.0.2, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.0.2")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.0.3)))))
harmony.go@meta.data$RNA_snn_res.0.3 <- factor(x=harmony.go@meta.data$RNA_snn_res.0.3, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.0.3")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.0.4)))))
harmony.go@meta.data$RNA_snn_res.0.4 <- factor(x=harmony.go@meta.data$RNA_snn_res.0.4, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.0.4")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.0.5)))))
harmony.go@meta.data$RNA_snn_res.0.5 <- factor(x=harmony.go@meta.data$RNA_snn_res.0.5, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.0.5")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.0.6)))))
harmony.go@meta.data$RNA_snn_res.0.6 <- factor(x=harmony.go@meta.data$RNA_snn_res.0.6, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.0.6")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.0.7)))))
harmony.go@meta.data$RNA_snn_res.0.7 <- factor(x=harmony.go@meta.data$RNA_snn_res.0.7, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.0.7")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.0.8)))))
harmony.go@meta.data$RNA_snn_res.0.8 <- factor(x=harmony.go@meta.data$RNA_snn_res.0.8, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.0.8")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.0.9)))))
harmony.go@meta.data$RNA_snn_res.0.9 <- factor(x=harmony.go@meta.data$RNA_snn_res.0.9, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.0.9")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.1)))))
harmony.go@meta.data$RNA_snn_res.1 <- factor(x=harmony.go@meta.data$RNA_snn_res.1, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.1")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.1.1)))))
harmony.go@meta.data$RNA_snn_res.1.1 <- factor(x=harmony.go@meta.data$RNA_snn_res.1.1, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.1.1")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.1.2)))))
harmony.go@meta.data$RNA_snn_res.1.2 <- factor(x=harmony.go@meta.data$RNA_snn_res.1.2, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.1.2")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.1.3)))))
harmony.go@meta.data$RNA_snn_res.1.3 <- factor(x=harmony.go@meta.data$RNA_snn_res.1.3, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.1.3")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.1.4)))))
harmony.go@meta.data$RNA_snn_res.1.4 <- factor(x=harmony.go@meta.data$RNA_snn_res.1.4, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.1.4")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.1.5)))))
harmony.go@meta.data$RNA_snn_res.1.5 <- factor(x=harmony.go@meta.data$RNA_snn_res.1.5, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.1.5")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.1.6)))))
harmony.go@meta.data$RNA_snn_res.1.6 <- factor(x=harmony.go@meta.data$RNA_snn_res.1.6, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.1.6")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.1.7)))))
harmony.go@meta.data$RNA_snn_res.1.7 <- factor(x=harmony.go@meta.data$RNA_snn_res.1.7, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.1.7")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.1.8)))))
harmony.go@meta.data$RNA_snn_res.1.8 <- factor(x=harmony.go@meta.data$RNA_snn_res.1.8, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.1.8")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.1.9)))))
harmony.go@meta.data$RNA_snn_res.1.9 <- factor(x=harmony.go@meta.data$RNA_snn_res.1.9, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.1.9")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.2)))))
harmony.go@meta.data$RNA_snn_res.2 <- factor(x=harmony.go@meta.data$RNA_snn_res.2, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.2")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.2.1)))))
harmony.go@meta.data$RNA_snn_res.2.1 <- factor(x=harmony.go@meta.data$RNA_snn_res.2.1, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.2.1")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.2.2)))))
harmony.go@meta.data$RNA_snn_res.2.2 <- factor(x=harmony.go@meta.data$RNA_snn_res.2.2, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.2.2")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.2.3)))))
harmony.go@meta.data$RNA_snn_res.2.3 <- factor(x=harmony.go@meta.data$RNA_snn_res.2.3, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.2.3")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.2.4)))))
harmony.go@meta.data$RNA_snn_res.2.4 <- factor(x=harmony.go@meta.data$RNA_snn_res.2.4, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.2.4")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.2.5)))))
harmony.go@meta.data$RNA_snn_res.2.5 <- factor(x=harmony.go@meta.data$RNA_snn_res.2.5, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.2.5")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.2.6)))))
harmony.go@meta.data$RNA_snn_res.2.6 <- factor(x=harmony.go@meta.data$RNA_snn_res.2.6, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.2.6")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.2.7)))))
harmony.go@meta.data$RNA_snn_res.2.7 <- factor(x=harmony.go@meta.data$RNA_snn_res.2.7, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.2.7")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.2.8)))))
harmony.go@meta.data$RNA_snn_res.2.8 <- factor(x=harmony.go@meta.data$RNA_snn_res.2.8, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.2.8")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.2.9)))))
harmony.go@meta.data$RNA_snn_res.2.9 <- factor(x=harmony.go@meta.data$RNA_snn_res.2.9, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.2.9")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.3)))))
harmony.go@meta.data$RNA_snn_res.3 <- factor(x=harmony.go@meta.data$RNA_snn_res.3, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.3")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.3.1)))))
harmony.go@meta.data$RNA_snn_res.3.1 <- factor(x=harmony.go@meta.data$RNA_snn_res.3.1, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.3.1")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.3.2)))))
harmony.go@meta.data$RNA_snn_res.3.2 <- factor(x=harmony.go@meta.data$RNA_snn_res.3.2, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.3.2")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.3.3)))))
harmony.go@meta.data$RNA_snn_res.3.3 <- factor(x=harmony.go@meta.data$RNA_snn_res.3.3, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.3.3")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.3.4)))))
harmony.go@meta.data$RNA_snn_res.3.4 <- factor(x=harmony.go@meta.data$RNA_snn_res.3.4, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.3.4")

my_levels <- as.character(c(0:length(table(as.character(harmony.go@meta.data$RNA_snn_res.3.5)))))
harmony.go@meta.data$RNA_snn_res.3.5 <- factor(x=harmony.go@meta.data$RNA_snn_res.3.5, levels=my_levels)
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.3.5")

dev.off()

svg("19_gex_post_initial_clustering_barplot_number_cells_per_cluster_for_res_1.8.svg")
temp3 <- table(as.character(harmony.go@meta.data$RNA_snn_res.1.8))
temp4 <- as.data.frame(cbind(names(temp3),as.numeric(temp3)))
temp5 <- temp4[,2]
names(temp5) <- temp4[,1]
temp5 <- temp5[as.character(c(0:29))]
ccc <- hue_pal()(length(temp5))
barplot(as.numeric(temp5),col=ccc,xlab="Cluster",ylab="nCells",names.arg = names(temp5),las = 2)
abline(h=0)
dev.off()
temp3 <- table(as.character(harmony.go@meta.data$RNA_snn_res.1.8))
temp4 <- as.data.frame(cbind(names(temp3),as.numeric(temp3)))
temp5 <- temp4[,2]
names(temp5) <- temp4[,1]
temp5 <- temp5[as.character(c(0:29))]
ccc <- hue_pal()(length(temp5))
barplot(as.numeric(temp5),col=ccc,xlab="Cluster",ylab="nCells",names.arg = names(temp5),las = 2)
abline(h=0)

svg("20_gex_post_initial_clustering_umap_for_res_1.8.svg")
harmony.go@meta.data$RNA_snn_res.1.8 <- factor(x=harmony.go@meta.data$RNA_snn_res.1.8, levels=as.character(c(0:29)))
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.1.8")
dev.off()
DimPlot(harmony.go, label=TRUE,group.by="RNA_snn_res.1.8",repel=T)

# recode

temp <- as.character(unlist(harmony.go@meta.data$RNA_snn_res.1.8))
temp <- ifelse(temp=="1","0",temp)
temp <- ifelse(temp=="2","1",temp)
temp <- ifelse(temp=="3","1",temp)
temp <- ifelse(temp=="4","1",temp)
temp <- ifelse(temp=="5","1",temp)
temp <- ifelse(temp=="11","1",temp)
temp <- ifelse(temp=="6","2",temp)
temp <- ifelse(temp=="7","2",temp)
temp <- ifelse(temp=="16","10",temp)
harmony.go@meta.data$initial.clusters <- factor(temp,levels=as.character(c("0","1","2","8","9","10","12","13","14","15","17","18","19","20","21","22","23","24","25","26","27","28","29")))
Idents(harmony.go) <- temp

svg("21_gex_post_initial_clustering_umap_for_res_1.8_recoded.svg")
DimPlot(harmony.go, label=TRUE,group.by="initial.clusters")
dev.off()
DimPlot(harmony.go, label=TRUE,group.by="initial.clusters")

# identify and remove doublet clusters
# https://github.com/plger/scDblFinder
# https://bioconductor.org/packages/release/bioc/vignettes/scDblFinder/inst/doc/findDoubletClusters.html

DefaultAssay(harmony.go) <- "RNA"
harmony.go.sce <- as.SingleCellExperiment(harmony.go)
set.seed(123)
dbl.out <- findDoubletClusters(x=harmony.go.sce, clusters=colData(harmony.go.sce)$initial.clusters,assay.type="counts")
chosen.doublet <- rownames(dbl.out)[isOutlier(as.numeric(dbl.out$num.de), type="lower", log=TRUE)]
chosen.doublet

# doublet clusters = none

svg("22_gex_post_doublet_cluster_filtering_barplot_for_res_1.8_recoded.svg")
temp <- dbl.out$num.de
names(temp) <- rownames(dbl.out)
m <- mean(temp)
s <- sd(temp)
temp <- temp-m
temp <- temp/s
temp1 <- min(c(-3,temp))
temp2 <- max(c(3,temp))
barplot(rev(sort(temp)),xlab="Cluster",ylab="Z-score (Number Differential Genes)",las = 2, cex.names = 0.7,space=0, ylim = c(temp1,temp2),col=c(rep(hue_pal()(2)[1],length(rownames(dbl.out))-length(chosen.doublet)),rep(hue_pal()(2)[2],length(chosen.doublet))),main="Doublet Cluster")
abline(h=0)
box()
legend("topright", legend = c("False","True"), fill = c(hue_pal()(2)[1],hue_pal()(2)[2]))
abline(h=(-2),lty=2)
dev.off()
temp <- dbl.out$num.de
names(temp) <- rownames(dbl.out)
m <- mean(temp)
s <- sd(temp)
temp <- temp-m
temp <- temp/s
temp1 <- min(c(-3,temp))
temp2 <- max(c(3,temp))
barplot(rev(sort(temp)),xlab="Cluster",ylab="Z-score (Number Differential Genes)",las = 2, cex.names = 0.7,space=0, ylim = c(temp1,temp2),col=c(rep(hue_pal()(2)[1],length(rownames(dbl.out))-length(chosen.doublet)),rep(hue_pal()(2)[2],length(chosen.doublet))),main="Doublet Cluster")
abline(h=0)
box()
legend("topright", legend = c("False","True"), fill = c(hue_pal()(2)[1],hue_pal()(2)[2]))
abline(h=(-2),lty=2)

curated.harmony.go <- harmony.go
rm(harmony.go)
curated.harmony.go@meta.data$doubletcluster <- ifelse(curated.harmony.go@meta.data$initial.clusters%in%chosen.doublet,"True","False")

svg("23_gex_post_doublet_cluster_filtering_umap_for_res_1.8_recoded.svg")
my_levels <- as.character(c(0:length(table(as.character(curated.harmony.go@meta.data$initial.clusters)))))
DimPlot(curated.harmony.go,group.by="doubletcluster")
dev.off()
DimPlot(curated.harmony.go,group.by="doubletcluster")

if(length(chosen.doublet)>0) {
	temp1 <- chosen.doublet
	for (i in 1:length(temp1)) {
		temp2 <- curated.harmony.go@meta.data$initial.clusters!=temp1[i]
		curated.harmony.go <- curated.harmony.go[,temp2]
	}
}

# identify doublet cells
# https://github.com/plger/scDblFinder
# https://bioconductor.org/packages/release/bioc/vignettes/scDblFinder/inst/doc/computeDoubletDensity.html

DefaultAssay(curated.harmony.go) <- "RNA"
curated.harmony.go.sce <- as.SingleCellExperiment(curated.harmony.go)
set.seed(123)
dbl.dens <- computeDoubletDensity(curated.harmony.go.sce, d=50)
curated.harmony.go.sce$DoubletScore <- log10(dbl.dens+1)
temp1 <- curated.harmony.go.sce$DoubletScore
names(temp1) <- colnames(curated.harmony.go.sce)
temp1 <- temp1[colnames(curated.harmony.go)]
curated.harmony.go@meta.data$DoubletScore <- as.numeric(temp1)
curated.harmony.go@meta.data$DoubletScoreCoded <- curated.harmony.go@meta.data$DoubletScore>(mean(as.numeric(curated.harmony.go@meta.data$DoubletScore))+(2*sd(as.numeric(curated.harmony.go@meta.data$DoubletScore))))

svg("24_gex_post_doublet_cell_filtering_density_plot_for_res_1.8_recoded.svg")
plot(density(as.numeric(temp1)),main="DoubletScore")
abline(v=(mean(as.numeric(curated.harmony.go@meta.data$DoubletScore))+(2*sd(as.numeric(curated.harmony.go@meta.data$DoubletScore)))),lty=2)
legend("topright", legend = c("2SD"),lty=2)
dev.off()
plot(density(as.numeric(temp1)),main="DoubletScore")
abline(v=(mean(as.numeric(curated.harmony.go@meta.data$DoubletScore))+(2*sd(as.numeric(curated.harmony.go@meta.data$DoubletScore)))),lty=2)
legend("topright", legend = c("2SD"),lty=2)

svg("25_gex_post_doublet_cell_filtering_umap_for_res_1.8_recoded.svg")
DimPlot(curated.harmony.go, group.by="DoubletScoreCoded",label=FALSE,cols=c(hue_pal()(2)))
dev.off()
DimPlot(curated.harmony.go, group.by="DoubletScoreCoded",label=FALSE,cols=c(hue_pal()(2)))

svg("26_gex_post_doublet_cell_filtering_umap_for_res_1.8_recoded_split_by_True_False.svg")
DimPlot(curated.harmony.go, split.by="DoubletScoreCoded", group.by="DoubletScoreCoded",label=FALSE,cols=c(hue_pal()(2)))
dev.off()
DimPlot(curated.harmony.go, split.by="DoubletScoreCoded", group.by="DoubletScoreCoded",label=FALSE,cols=c(hue_pal()(2)))

final.curated.harmony.go <- curated.harmony.go[,curated.harmony.go@meta.data$DoubletScoreCoded==FALSE]
rm(curated.harmony.go)

# perform final clustering and inspect by clustree

final.curated.harmony.go <- final.curated.harmony.go %>% FindNeighbors(final.curated.harmony.go, reduction = "harmony", dims = 1:75, verbose = FALSE) %>% FindClusters(resolution=c(0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2.0,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3.0,3.1,3.2,3.3,3.4,3.5),save.SNN=TRUE)

svg("27_final_clustering_clustree_results.svg",width=10,height=25)
clustree(final.curated.harmony.go,prefix="RNA_snn_res.")
dev.off()
clustree(final.curated.harmony.go,prefix="RNA_snn_res.")

pdf("28_final_clustering_umap_plots_per_resolution.pdf")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.0.04)))))
final.curated.harmony.go@meta.data$RNA_snn_res.0.04 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.0.04, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.0.04")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.0.05)))))
final.curated.harmony.go@meta.data$RNA_snn_res.0.05 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.0.05, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.0.05")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.0.06)))))
final.curated.harmony.go@meta.data$RNA_snn_res.0.06 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.0.06, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.0.06")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.0.07)))))
final.curated.harmony.go@meta.data$RNA_snn_res.0.07 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.0.07, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.0.07")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.0.08)))))
final.curated.harmony.go@meta.data$RNA_snn_res.0.08 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.0.08, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.0.08")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.0.09)))))
final.curated.harmony.go@meta.data$RNA_snn_res.0.09 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.0.09, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.0.09")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.0.1)))))
final.curated.harmony.go@meta.data$RNA_snn_res.0.1 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.0.1, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.0.1")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.0.2)))))
final.curated.harmony.go@meta.data$RNA_snn_res.0.2 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.0.2, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.0.2")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.0.3)))))
final.curated.harmony.go@meta.data$RNA_snn_res.0.3 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.0.3, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.0.3")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.0.4)))))
final.curated.harmony.go@meta.data$RNA_snn_res.0.4 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.0.4, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.0.4")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.0.5)))))
final.curated.harmony.go@meta.data$RNA_snn_res.0.5 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.0.5, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.0.5")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.0.6)))))
final.curated.harmony.go@meta.data$RNA_snn_res.0.6 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.0.6, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.0.6")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.0.7)))))
final.curated.harmony.go@meta.data$RNA_snn_res.0.7 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.0.7, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.0.7")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.0.8)))))
final.curated.harmony.go@meta.data$RNA_snn_res.0.8 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.0.8, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.0.8")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.0.9)))))
final.curated.harmony.go@meta.data$RNA_snn_res.0.9 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.0.9, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.0.9")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.1)))))
final.curated.harmony.go@meta.data$RNA_snn_res.1 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.1, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.1")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.1.1)))))
final.curated.harmony.go@meta.data$RNA_snn_res.1.1 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.1.1, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.1.1")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.1.2)))))
final.curated.harmony.go@meta.data$RNA_snn_res.1.2 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.1.2, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.1.2")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.1.3)))))
final.curated.harmony.go@meta.data$RNA_snn_res.1.3 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.1.3, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.1.3")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.1.4)))))
final.curated.harmony.go@meta.data$RNA_snn_res.1.4 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.1.4, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.1.4")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.1.5)))))
final.curated.harmony.go@meta.data$RNA_snn_res.1.5 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.1.5, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.1.5")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.1.6)))))
final.curated.harmony.go@meta.data$RNA_snn_res.1.6 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.1.6, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.1.6")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.1.7)))))
final.curated.harmony.go@meta.data$RNA_snn_res.1.7 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.1.7, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.1.7")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.1.8)))))
final.curated.harmony.go@meta.data$RNA_snn_res.1.8 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.1.8, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.1.8")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.1.9)))))
final.curated.harmony.go@meta.data$RNA_snn_res.1.9 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.1.9, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.1.9")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.2)))))
final.curated.harmony.go@meta.data$RNA_snn_res.2 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.2, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.2")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.2.1)))))
final.curated.harmony.go@meta.data$RNA_snn_res.2.1 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.2.1, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.2.1")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.2.2)))))
final.curated.harmony.go@meta.data$RNA_snn_res.2.2 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.2.2, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.2.2")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.2.3)))))
final.curated.harmony.go@meta.data$RNA_snn_res.2.3 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.2.3, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.2.3")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.2.4)))))
final.curated.harmony.go@meta.data$RNA_snn_res.2.4 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.2.4, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.2.4")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.2.5)))))
final.curated.harmony.go@meta.data$RNA_snn_res.2.5 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.2.5, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.2.5")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.2.6)))))
final.curated.harmony.go@meta.data$RNA_snn_res.2.6 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.2.6, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.2.6")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.2.7)))))
final.curated.harmony.go@meta.data$RNA_snn_res.2.7 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.2.7, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.2.7")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.2.8)))))
final.curated.harmony.go@meta.data$RNA_snn_res.2.8 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.2.8, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.2.8")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.2.9)))))
final.curated.harmony.go@meta.data$RNA_snn_res.2.9 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.2.9, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.2.9")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.3)))))
final.curated.harmony.go@meta.data$RNA_snn_res.3 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.3, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.3")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.3.1)))))
final.curated.harmony.go@meta.data$RNA_snn_res.3.1 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.3.1, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.3.1")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.3.2)))))
final.curated.harmony.go@meta.data$RNA_snn_res.3.2 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.3.2, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.3.2")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.3.3)))))
final.curated.harmony.go@meta.data$RNA_snn_res.3.3 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.3.3, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.3.3")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.3.4)))))
final.curated.harmony.go@meta.data$RNA_snn_res.3.4 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.3.4, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.3.4")

my_levels <- as.character(c(0:length(table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.3.5)))))
final.curated.harmony.go@meta.data$RNA_snn_res.3.5 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.3.5, levels=my_levels)
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.3.5")

dev.off()

svg("29_gex_post_final_clustering_barplot_number_cells_per_cluster_for_res_2.1.svg")
temp3 <- table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.2.1))
temp4 <- as.data.frame(cbind(names(temp3),as.numeric(temp3)))
temp5 <- temp4[,2]
names(temp5) <- temp4[,1]
temp5 <- temp5[as.character(c(0:29))]
ccc <- hue_pal()(length(temp5))
barplot(as.numeric(temp5),col=ccc,xlab="Cluster",ylab="nCells",names.arg = names(temp5),las = 2)
abline(h=0)
dev.off()
temp3 <- table(as.character(final.curated.harmony.go@meta.data$RNA_snn_res.2.1))
temp4 <- as.data.frame(cbind(names(temp3),as.numeric(temp3)))
temp5 <- temp4[,2]
names(temp5) <- temp4[,1]
temp5 <- temp5[as.character(c(0:29))]
ccc <- hue_pal()(length(temp5))
barplot(as.numeric(temp5),col=ccc,xlab="Cluster",ylab="nCells",names.arg = names(temp5),las = 2)
abline(h=0)

svg("30_gex_post_final_clustering_umap_for_res_2.1.svg")
final.curated.harmony.go@meta.data$RNA_snn_res.2.1 <- factor(x=final.curated.harmony.go@meta.data$RNA_snn_res.2.1, levels=as.character(c(0:29)))
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.2.1")
dev.off()
DimPlot(final.curated.harmony.go, label=TRUE,group.by="RNA_snn_res.2.1",repel=TRUE)

# recode

temp <- as.character(unlist(final.curated.harmony.go@meta.data$RNA_snn_res.2.1))
temp <- ifelse(temp=="16","10",temp)
temp <- ifelse(temp=="6","5",temp)
temp <- ifelse(temp=="1","0",temp)
temp <- ifelse(temp=="2","1",temp)
temp <- ifelse(temp=="3","1",temp)
temp <- ifelse(temp=="4","1",temp)
temp <- ifelse(temp=="7","1",temp)
temp <- ifelse(temp=="11","1",temp)
final.curated.harmony.go@meta.data$final.clusters <- factor(temp,levels=as.character( c("0","1","5","8","9","10","12","13","14","15","17","18","19","20","21","22","23","24","25","26","27","28","29")))

Idents(final.curated.harmony.go) <- factor(temp,levels=as.character(c("0","1","5","8","9","10","12","13","14","15","17","18","19","20","21","22","23","24","25","26","27","28","29")))

rm(list=ls()[-c(1,7)])

svg("31_gex_post_final_clustering_umap_for_res_2.1_recoded.svg")
DimPlot(final.curated.harmony.go, label=TRUE,group.by="final.clusters")
dev.off()
DimPlot(final.curated.harmony.go, label=TRUE,group.by="final.clusters")

# perform cluster by cluster pruning, total clusters = 23

to.do <- names((table(Idents(final.curated.harmony.go))))
length(to.do)

to.remove <- NULL

i <- 1
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(2.25),linetype='dashed') + geom_hline(yintercept=c(2.25),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>2.25
temp10[,2] <- temp10[,2]>2.25
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 2
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(2.25),linetype='dashed') + geom_hline(yintercept=c(2.25),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>2.25
temp10[,2] <- temp10[,2]>2.25
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 3
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(2),linetype='dashed') + geom_hline(yintercept=c(1.75),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>2
temp10[,2] <- temp10[,2]>1.75
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 4
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(2.25),linetype='dashed') + geom_hline(yintercept=c(2.25),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>2.25
temp10[,2] <- temp10[,2]>2.25
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 5
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(2.25),linetype='dashed') + geom_hline(yintercept=c(1.5),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>2.25
temp10[,2] <- temp10[,2]>1.5
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 6
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(1.25),linetype='dashed') + geom_hline(yintercept=c(1.25),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>1.25
temp10[,2] <- temp10[,2]>1.25
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 7
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(1.15),linetype='dashed') + geom_hline(yintercept=c(1.25),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>1.15
temp10[,2] <- temp10[,2]>1.25
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 8
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(2),linetype='dashed') + geom_hline(yintercept=c(2),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>2
temp10[,2] <- temp10[,2]>2
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 9
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(1.5),linetype='dashed') + geom_hline(yintercept=c(1.5),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>1.5
temp10[,2] <- temp10[,2]>1.5
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 10
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(0.5),linetype='dashed') + geom_hline(yintercept=c(1.5),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>0.5
temp10[,2] <- temp10[,2]>1.5
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 11
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(1.75),linetype='dashed') + geom_hline(yintercept=c(1.75),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>1.75
temp10[,2] <- temp10[,2]>1.75
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 12
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(2),linetype='dashed') + geom_hline(yintercept=c(2),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>2
temp10[,2] <- temp10[,2]>2
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 13
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(2),linetype='dashed') + geom_hline(yintercept=c(2),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>2
temp10[,2] <- temp10[,2]>2
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 14
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(0.5),linetype='dashed') + geom_hline(yintercept=c(0.5),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>0.5
temp10[,2] <- temp10[,2]>0.5
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],"_first_pass.svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 14
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
X <- as.matrix(cbind(temp4,temp5))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(-1.5),linetype='dashed') + geom_vline(xintercept=c(-0.5),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Supervised Revisit"),sep="",collapse=""))
p1
temp10 <- X
temp10a <- temp10[,1]<(-0.5)
temp10b <- temp10[,1]>(-1.5)
temp11 <- temp10a+temp10b
temp11 <- dimnames(temp10)[[1]][temp11<2]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],"_second_pass.svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 15
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(1.5),linetype='dashed') + geom_hline(yintercept=c(1.5),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>1.5
temp10[,2] <- temp10[,2]>1.5
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 16
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(1.5),linetype='dashed') + geom_hline(yintercept=c(1.5),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>1.5
temp10[,2] <- temp10[,2]>1.5
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 17
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(1),linetype='dashed') + geom_hline(yintercept=c(1),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>1
temp10[,2] <- temp10[,2]>1
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 18
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(0.5),linetype='dashed') + geom_hline(yintercept=c(0.5),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>0.5
temp10[,2] <- temp10[,2]>0.5
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 19
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(0.75),linetype='dashed') + geom_hline(yintercept=c(0.75),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>0.75
temp10[,2] <- temp10[,2]>0.75
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 20
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(0.5),linetype='dashed') + geom_hline(yintercept=c(0.5),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>0.5
temp10[,2] <- temp10[,2]>0.5
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 21
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(1.25),linetype='dashed') + geom_hline(yintercept=c(1.25),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>1.25
temp10[,2] <- temp10[,2]>1.25
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 22
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(1),linetype='dashed') + geom_hline(yintercept=c(1),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>1
temp10[,2] <- temp10[,2]>1
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

i <- 23
temp2 <- final.curated.harmony.go[,(final.curated.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(1.25),linetype='dashed') + geom_hline(yintercept=c(1.25),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Zscore-based Outlier Threshold Selection"),sep="",collapse=""))
p1
temp10 <- X
temp10[,1] <- temp10[,1]>1.25
temp10[,2] <- temp10[,2]>1.25
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
p2 <- DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",to.do[i],": Outlier Cells To Remove"),sep="",collapse=""))
plot_lst <- vector("list", length = 2)
plot_lst[[1]] <- p1
plot_lst[[2]] <- p2
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
svg(paste(c("32_outlier_cell_curation_for_cluster_",to.do[i],".svg"),sep="",collapse=""),width = 14)
cowplot::plot_grid(plotlist = plot_lst, nrow = 1)
dev.off()
to.remove <- c(to.remove,temp11)

final.pruned.harmony.go <- final.curated.harmony.go
final.pruned.harmony.go@meta.data$pruned <- colnames(final.curated.harmony.go)%in%to.remove

svg("33_final_umap_post_cell_curation_for_res_2.1_recoded.svg")
DimPlot(final.pruned.harmony.go, label=FALSE,group.by="pruned")
dev.off()
DimPlot(final.pruned.harmony.go, label=FALSE,group.by="pruned")

final.pruned.harmony.go <- final.pruned.harmony.go[,final.pruned.harmony.go@meta.data$pruned=="FALSE"]

# Characterize

svg("34_final_umap_by_cluster_v1_pre_cluster_27_split.svg")
DimPlot(final.pruned.harmony.go, label=FALSE,group.by="final.clusters")
dev.off()
DimPlot(final.pruned.harmony.go, label=FALSE,group.by="final.clusters")

svg("34_final_umap_by_cluster_v2_pre_cluster_27_split.svg")
DimPlot(final.pruned.harmony.go, label=TRUE,group.by="final.clusters",repel=TRUE)
dev.off()
DimPlot(final.pruned.harmony.go, label=TRUE,group.by="final.clusters",repel=TRUE)

svg("34_final_umap_by_cluster_v3_pre_cluster_27_split.svg")
DimPlot(final.pruned.harmony.go, label=TRUE,group.by="final.clusters",repel=TRUE) + NoLegend()
dev.off()
DimPlot(final.pruned.harmony.go, label=TRUE,group.by="final.clusters",repel=TRUE) + NoLegend()

# split 27 -> 27 & 30

i <- 21
temp2 <- final.pruned.harmony.go[,(final.pruned.harmony.go@meta.data$final.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
X <- as.matrix(cbind(temp4,temp5))
dimnames(X)[[1]] <- colnames(temp2)
dimnames(X)[[2]] <- c("UMAP_1","UMAP_2")
p1 <- ggplot(data = as.data.frame(X), aes(x = UMAP_1, y = UMAP_2)) + geom_point() + geom_vline(xintercept=c(4.5),linetype='dashed') + geom_hline(yintercept=c(4.5),linetype='dashed') + ggtitle(paste(c("Cluster ",to.do[i],": Supervised Revisit"),sep="",collapse=""))
p1
temp10 <- X
temp10a <- temp10[,1]>(4.5)
temp10b <- temp10[,2]<(4.5)
temp11 <- temp10a+temp10b
temp12 <- names(temp11[temp11>0])
temp13 <- as.character(final.pruned.harmony.go@meta.data$final.clusters)
temp13[dimnames(final.pruned.harmony.go@meta.data)[[1]]%in%temp12] <- c(rep("30",length(temp12)))
final.pruned.harmony.go@meta.data$final.clusters <- factor(temp13,levels=as.character(c("0","1","5","8","9","10","12","13","14","15","17","18","19","20","21","22","23","24","25","26","27","28","29","30")))

svg("34_final_umap_by_cluster_v1_post_cluster_27_split.svg")
DimPlot(final.pruned.harmony.go, label=FALSE,group.by="final.clusters")
dev.off()
DimPlot(final.pruned.harmony.go, label=FALSE,group.by="final.clusters")

svg("34_final_umap_by_cluster_v2_post_cluster_27_split.svg")
DimPlot(final.pruned.harmony.go, label=TRUE,group.by="final.clusters",repel=TRUE)
dev.off()
DimPlot(final.pruned.harmony.go, label=TRUE,group.by="final.clusters",repel=TRUE)

svg("34_final_umap_by_cluster_v3_post_cluster_27_split.svg")
DimPlot(final.pruned.harmony.go, label=TRUE,group.by="final.clusters",repel=TRUE) + NoLegend()
dev.off()
DimPlot(final.pruned.harmony.go, label=TRUE,group.by="final.clusters",repel=TRUE) + NoLegend()

svg("35_final_umap_by_sample.svg")
DimPlot(final.pruned.harmony.go, label=FALSE, group.by="orig.ident")
dev.off()
DimPlot(final.pruned.harmony.go, label=FALSE, group.by="orig.ident")

svg("36_final_umap_split_by_sample.svg",width=20)
DimPlot(final.pruned.harmony.go, reduction = "umap", split.by = "orig.ident",ncol=4)
dev.off()
DimPlot(final.pruned.harmony.go, reduction = "umap", split.by = "orig.ident",ncol=4)

level.order <- as.character(names(rev(sort(table(final.pruned.harmony.go@meta.data$final.clusters)))))
temp <- table(final.pruned.harmony.go@meta.data$final.clusters)
temp <- as.data.frame(cbind(names(temp),as.numeric(as.character(temp))))
dimnames(temp)[[2]] <- c("Cluster","nCells")
temp$Cluster <- factor(temp$Cluster,levels=level.order)
temp$nCells <- as.numeric(as.character(temp$nCells))
svg("37_final_barplot_cluster_nCells.svg",width=20)
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Cluster)) +  geom_bar(stat = "identity") + xlab("Cluster")) + theme(axis.text.x = element_text(angle = 45, hjust=1))
dev.off()
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Cluster)) +  geom_bar(stat = "identity") + xlab("Cluster")) + theme(axis.text.x = element_text(angle = 45, hjust=1))

level.order <- as.character(names(rev(sort(table(final.pruned.harmony.go@meta.data$final.clusters)))))
temp <- final.pruned.harmony.go@meta.data
temp <- as.data.frame(temp[,c(1,52)])
temptemp <- apply(temp,1,paste,collapse="_",sep="_")
temptemptemp <- table(temptemp)
temp <- cbind(names(temptemptemp),as.numeric(temptemptemp))
temptemp <- str_split(as.character(temp[,1]),"_")
temptemp <- as.data.frame(temptemp)
temptemp <- t(temptemp)
temp <- cbind(temp,temptemp)
temptemp <- temp[,c(3:5)]
temptemp <- apply(temptemp,1,paste,collapse="_",sep="_")
temp <- cbind(temp,temptemp)
rownames(temp) <- temp[,1]
temp[,1] <- temp[,7]
temp <- temp[,-c(7)]
temp <- temp[,c(1,6,2)]
dimnames(temp)[[2]] <- c("Sample","Cluster","nCells")
temp <- as.data.frame(temp)
temp$Cluster <- factor(as.character(temp$Cluster),levels=level.order)
temp$nCells <- as.numeric(as.character(temp$nCells))
svg("38_final_barplot_by_cluster_vs_sample_breakdown.svg",width=10)
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
dev.off()
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))

svg("39_final_barplot_by_cluster_vs_sample_proportion.svg",width=10)
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('Proportion') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
dev.off()
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('Proportion') + theme(axis.text.x = element_text(angle = 45, hjust=1)))

# perform automated annotation
# https://satijalab.github.io/azimuth/articles/run_azimuth_tutorial.html
# https://seurat.nygenome.org/

available_data <- AvailableData()
available_data[grep("Azimuth", available_data[, 3]), 1:3]

InstallData("mousecortexref.SeuratData")
library("mousecortexref.SeuratData")

final.annotated.harmony.go <- final.pruned.harmony.go
final.annotated.harmony.go <- RunAzimuth(final.annotated.harmony.go, reference = "mousecortexref")

temp.cluster <- as.character(final.annotated.harmony.go@meta.data$final.clusters)
temp.cohort <- final.annotated.harmony.go@meta.data$orig.ident
temp.class <- final.annotated.harmony.go@meta.data$predicted.class
temp.subclass <- final.annotated.harmony.go@meta.data$predicted.subclass
final.preds.out.1 <- cbind(colnames(final.annotated.harmony.go),temp.cohort,temp.cluster,temp.class,temp.subclass)
final.preds.out.1 <- as.data.frame(final.preds.out.1)
wb <- createWorkbook("automated_annotations")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", final.preds.out.1, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "40_post_automated_annotations_using_mousecortexref.xlsx", overwrite = TRUE)

p1 <- DimPlot(final.annotated.harmony.go, group.by = "predicted.class", label = FALSE, repel = TRUE)
svg("41_post_annotation_umap_with_mousecortexref_class_overlaid.svg")
print(p1)
dev.off()
p1

p2 <- DimPlot(final.annotated.harmony.go, group.by = "predicted.subclass", label = TRUE, repel = TRUE)
svg("42_post_annotation_umap_with_mousecortexref_subclass_overlaid.svg")
print(p2)
dev.off()
p2

# cluster plots

temp.cx <- cbind(temp.class,temp.subclass)
temp.cx <- apply(temp.cx,1,paste,sep="_",collapse="_")
temp.cx <- str_replace_all(temp.cx," ","_")
final.preds.out.1 <- cbind(final.preds.out.1,temp.cx)

max.pred <- NULL
temp <- sort(unique(final.preds.out.1$temp.cluster))
for (i in 1:length(temp)) {
	svg(paste(c("43_post_annotation_barplot_summary_for_Cluster_",temp[i],".svg"),collapse="",sep=""))
	par(mfrow=c(1,1),mar=c(10, 4, 5, 2))
	barplot(table(final.preds.out.1[final.preds.out.1$temp.cluster==temp[i],6])/sum(table(final.preds.out.1[final.preds.out.1$temp.cluster==temp[i],6])),ylab="Membership Proportion",las = 2,space=0,cex.names = 0.7,main="Azimuth::Cortex") / abline(h=0)
	dev.off()
	temptemp <- table(final.preds.out.1[final.preds.out.1$temp.cluster==temp[i],6])/sum(table(final.preds.out.1[final.preds.out.1$temp.cluster==temp[i],6]))
	temptemp <- names(rev(sort(temptemp))[1])
	max.pred <- c(max.pred,temptemp)
}
names(max.pred) <- temp
write.table(max.pred,"final.annotation.per.cluster.azimuth.cortex.txt",sep="\t")

# cross cluster plot

temp7 <- names(table(as.character(final.preds.out.1$temp.cx)))
sumarize.cluster.types <- NULL
for (i in 1:length(temp)) {
	print(temp[i])
	temp1 <- final.preds.out.1[final.preds.out.1$temp.cluster==temp[i],]
	temp2 <- table(temp1$temp.cx)/sum(table(temp1$temp.cx))
	print(length(temp2))
	if(length(temp2)<length(temp7)) {
		temp3 <- setdiff(as.character(temp7),as.character(names(temp2)))
		temp4 <- rep(0,length(temp3))
		names(temp4) <- temp3
		temp4 <- c(temp2,temp4)
		temp4 <- temp4[temp7]
	} else {
		temp4 <- temp2[temp7]
	}
	sumarize.cluster.types <- rbind(sumarize.cluster.types,as.numeric(temp4))
}
dimnames(sumarize.cluster.types)[[1]] <- temp
dimnames(sumarize.cluster.types)[[2]] <- temp7
ppp <- t(as.matrix(sumarize.cluster.types))
ppp <- ifelse(ppp<0.01,0,ppp)
svg("45_post_annotation_final_heatmap.svg",width=20)
print(pheatmap::pheatmap(ppp,scale="none",fontsize_row=8,display_numbers=TRUE,number_color="white"))
dev.off()
print(pheatmap::pheatmap(ppp,scale="none",fontsize_row=8,display_numbers=TRUE,number_color="white"))

temp1 <- as.character(final.annotated.harmony.go@meta.data$final.clusters)
temp1 <- ifelse(temp1=="0","Glutamatergic_L2/3_IT",temp1)
temp1 <- ifelse(temp1=="1","Glutamatergic_L2/3_IT",temp1)
temp1 <- ifelse(temp1=="5","Glutamatergic_L2/3_IT",temp1)
temp1 <- ifelse(temp1=="8","Non-Neuronal_Astro",temp1)
temp1 <- ifelse(temp1=="9","Non-Neuronal_Oligo",temp1)
temp1 <- ifelse(temp1=="10","Glutamatergic_L5_IT",temp1)
temp1 <- ifelse(temp1=="12","Glutamatergic_L5_IT",temp1)
temp1 <- ifelse(temp1=="13","Non-Neuronal_Micro-PVM",temp1)
temp1 <- ifelse(temp1=="14","Glutamatergic_L5_ET",temp1)
temp1 <- ifelse(temp1=="15","Non-Neuronal_OPC",temp1)
temp1 <- ifelse(temp1=="17","GABAergic_Meis2",temp1)
temp1 <- ifelse(temp1=="18","Glutamatergic_L2/3_IT",temp1)
temp1 <- ifelse(temp1=="19","GABAergic_Sst",temp1)
temp1 <- ifelse(temp1=="20","Non-Neuronal_Astro",temp1)
temp1 <- ifelse(temp1=="21","GABAergic_Lamp5",temp1)
temp1 <- ifelse(temp1=="22","GABAergic_Vip",temp1)
temp1 <- ifelse(temp1=="23","Glutamatergic_L6b",temp1)
temp1 <- ifelse(temp1=="24","GABAergic_Lamp5",temp1)
temp1 <- ifelse(temp1=="25","Glutamatergic_L2/3_IT",temp1)
temp1 <- ifelse(temp1=="26","Glutamatergic_L5/6_NP",temp1)
temp1 <- ifelse(temp1=="27","Non-Neuronal_VLMC",temp1)
temp1 <- ifelse(temp1=="28","Non-Neuronal_Peri",temp1)
temp1 <- ifelse(temp1=="29","Non-Neuronal_Oligo",temp1)
temp1 <- ifelse(temp1=="30","Non-Neuronal_Endo",temp1)
final.annotated.harmony.go@meta.data$final.annotations <- as.factor(temp1)

saveRDS(object = final.curated.harmony.go, file = "final.curated.harmony.go.rds")
saveRDS(object = final.pruned.harmony.go, file = "final.pruned.harmony.go.rds")
saveRDS(object = final.annotated.harmony.go, file = "final.annotated.harmony.go.rds")

# Conserved testing 

final.clusters <- table(final.annotated.harmony.go@meta.data$final.clusters)
final.clusters <- names(final.clusters)
DefaultAssay(final.annotated.harmony.go) <- "RNA"
Idents(final.annotated.harmony.go) <- factor(final.annotated.harmony.go@meta.data$final.clusters,levels=as.character(sort(as.numeric(final.clusters))))
conserved.markers.0 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "0", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.1 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "1", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.5 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "5", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.8 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "8", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.9 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "9", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.10 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "10", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.12 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "12", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.13 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "13", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.14 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "14", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.15 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "15", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.17 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "17", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.18 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "18", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.19 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "19", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.20 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "20", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.21 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "21", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.22 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "22", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.23 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "23", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.24 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "24", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.25 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "25", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.26 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "26", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.27 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "27", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.28 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "28", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.29 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "29", grouping.var="orig.ident", only.pos = TRUE)
conserved.markers.30 <- FindConservedMarkers(final.annotated.harmony.go, ident.1 = "30", grouping.var="orig.ident", only.pos = TRUE)

wb <- createWorkbook("conserved.markers.0")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.0, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_0.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.1")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.1, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_1.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.5")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.5, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_5.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.8")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.8, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_8.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.9")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.9, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_9.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.10")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.10, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_10.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.12")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.12, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_12.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.13")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.13, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_13.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.14")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.14, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_14.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.15")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.15, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_15.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.17")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.17, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_17.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.18")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.18, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_18.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.19")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.19, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_19.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.20")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.20, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_20.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.21")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.21, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_21.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.22")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.22, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_22.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.23")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.23, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_23.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.24")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.24, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_24.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.25")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.25, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_25.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.26")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.26, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_26.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.27")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.27, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_27.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.28")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.28, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_28.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.29")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.29, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_29.xlsx", overwrite = TRUE)

wb <- createWorkbook("conserved.markers.30")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", conserved.markers.30, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "46_conserved_marker_testing_results_Cluster_30.xlsx", overwrite = TRUE)

markers.to.plot <- c(rownames(conserved.markers.0)[1],
			rownames(conserved.markers.1)[1],
			rownames(conserved.markers.5)[1],
			rownames(conserved.markers.8)[1],
			rownames(conserved.markers.9)[1],
			rownames(conserved.markers.10)[1],
			rownames(conserved.markers.12)[1],
			rownames(conserved.markers.13)[1],
			rownames(conserved.markers.14)[1],
			rownames(conserved.markers.15)[1],
			rownames(conserved.markers.17)[1],
			rownames(conserved.markers.18)[1],
			rownames(conserved.markers.19)[1],
			rownames(conserved.markers.20)[1],
			rownames(conserved.markers.21)[1],
			rownames(conserved.markers.22)[1],
			rownames(conserved.markers.23)[1],
			rownames(conserved.markers.24)[1],
			rownames(conserved.markers.25)[1],
			rownames(conserved.markers.26)[1],
			rownames(conserved.markers.27)[1],
			rownames(conserved.markers.28)[1],
			rownames(conserved.markers.29)[1],
			rownames(conserved.markers.30)[1])
markers.to.plot <- unique(markers.to.plot)

svg("47_post_conserved_marker_testing_dot_plot.svg",width=12)
DotPlot(final.annotated.harmony.go, features = unique(markers.to.plot), dot.scale = 8) + RotatedAxis()
dev.off()
DotPlot(final.annotated.harmony.go, features = unique(markers.to.plot), dot.scale = 8) + RotatedAxis()

p <- VlnPlot(final.annotated.harmony.go,markers.to.plot,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("48_post_conserved_marker_testing_violin_plot.svg",width=20)
print(p)
dev.off()
print(p)

# Non-Conserved testing 

non.conserved.markers.0 <- FindMarkers(final.annotated.harmony.go, ident.1 = "0", only.pos = TRUE)
non.conserved.markers.1 <- FindMarkers(final.annotated.harmony.go, ident.1 = "1", only.pos = TRUE)
non.conserved.markers.5 <- FindMarkers(final.annotated.harmony.go, ident.1 = "5", only.pos = TRUE)
non.conserved.markers.8 <- FindMarkers(final.annotated.harmony.go, ident.1 = "8", only.pos = TRUE)
non.conserved.markers.9 <- FindMarkers(final.annotated.harmony.go, ident.1 = "9", only.pos = TRUE)
non.conserved.markers.10 <- FindMarkers(final.annotated.harmony.go, ident.1 = "10", only.pos = TRUE)
non.conserved.markers.12 <- FindMarkers(final.annotated.harmony.go, ident.1 = "12", only.pos = TRUE)
non.conserved.markers.13 <- FindMarkers(final.annotated.harmony.go, ident.1 = "13", only.pos = TRUE)
non.conserved.markers.14 <- FindMarkers(final.annotated.harmony.go, ident.1 = "14", only.pos = TRUE)
non.conserved.markers.15 <- FindMarkers(final.annotated.harmony.go, ident.1 = "15", only.pos = TRUE)
non.conserved.markers.17 <- FindMarkers(final.annotated.harmony.go, ident.1 = "17", only.pos = TRUE)
non.conserved.markers.18 <- FindMarkers(final.annotated.harmony.go, ident.1 = "18", only.pos = TRUE)
non.conserved.markers.19 <- FindMarkers(final.annotated.harmony.go, ident.1 = "19", only.pos = TRUE)
non.conserved.markers.20 <- FindMarkers(final.annotated.harmony.go, ident.1 = "20", only.pos = TRUE)
non.conserved.markers.21 <- FindMarkers(final.annotated.harmony.go, ident.1 = "21", only.pos = TRUE)
non.conserved.markers.22 <- FindMarkers(final.annotated.harmony.go, ident.1 = "22", only.pos = TRUE)
non.conserved.markers.23 <- FindMarkers(final.annotated.harmony.go, ident.1 = "23", only.pos = TRUE)
non.conserved.markers.24 <- FindMarkers(final.annotated.harmony.go, ident.1 = "24", only.pos = TRUE)
non.conserved.markers.25 <- FindMarkers(final.annotated.harmony.go, ident.1 = "25", only.pos = TRUE)
non.conserved.markers.26 <- FindMarkers(final.annotated.harmony.go, ident.1 = "26", only.pos = TRUE)
non.conserved.markers.27 <- FindMarkers(final.annotated.harmony.go, ident.1 = "27", only.pos = TRUE)
non.conserved.markers.28 <- FindMarkers(final.annotated.harmony.go, ident.1 = "28", only.pos = TRUE)
non.conserved.markers.29 <- FindMarkers(final.annotated.harmony.go, ident.1 = "29", only.pos = TRUE)
non.conserved.markers.30 <- FindMarkers(final.annotated.harmony.go, ident.1 = "30", only.pos = TRUE)

wb <- createWorkbook("non.conserved.markers.0")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.0, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_0.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.1")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.1, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_1.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.5")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.5, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_5.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.8")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.8, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_8.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.9")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.9, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_9.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.10")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.10, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_10.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.12")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.12, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_12.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.13")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.13, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_13.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.14")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.14, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_14.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.15")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.15, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_15.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.17")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.17, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_17.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.18")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.18, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_18.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.19")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.19, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_19.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.20")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.20, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_20.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.21")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.21, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_21.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.22")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.22, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_22.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.23")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.23, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_23.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.24")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.24, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_24.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.25")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.25, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_25.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.26")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.26, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_26.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.27")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.27, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_27.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.28")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.28, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_28.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.29")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.29, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_29.xlsx", overwrite = TRUE)

wb <- createWorkbook("non.conserved.markers.30")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", non.conserved.markers.30, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "49_non_conserved_marker_testing_results_Cluster_30.xlsx", overwrite = TRUE)

markers.to.plot <- c(rownames(non.conserved.markers.0)[1],
			rownames(non.conserved.markers.1)[1],
			rownames(non.conserved.markers.5)[1],
			rownames(non.conserved.markers.8)[1],
			rownames(non.conserved.markers.9)[1],
			rownames(non.conserved.markers.10)[1],
			rownames(non.conserved.markers.12)[1],
			rownames(non.conserved.markers.13)[1],
			rownames(non.conserved.markers.14)[1],
			rownames(non.conserved.markers.15)[1],
			rownames(non.conserved.markers.17)[1],
			rownames(non.conserved.markers.18)[1],
			rownames(non.conserved.markers.19)[1],
			rownames(non.conserved.markers.20)[1],
			rownames(non.conserved.markers.21)[1],
			rownames(non.conserved.markers.22)[1],
			rownames(non.conserved.markers.23)[1],
			rownames(non.conserved.markers.24)[1],
			rownames(non.conserved.markers.25)[1],
			rownames(non.conserved.markers.26)[1],
			rownames(non.conserved.markers.27)[1],
			rownames(non.conserved.markers.28)[1],
			rownames(non.conserved.markers.29)[1],
			rownames(non.conserved.markers.30)[1])
markers.to.plot <- unique(markers.to.plot)

svg("50_post_non_conserved_marker_testing_dot_plot.svg",width=12)
DotPlot(final.annotated.harmony.go, features = unique(markers.to.plot), dot.scale = 8) + RotatedAxis()
dev.off()
DotPlot(final.annotated.harmony.go, features = unique(markers.to.plot), dot.scale = 8) + RotatedAxis()

p <- VlnPlot(final.annotated.harmony.go,markers.to.plot,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("51_post_non_conserved_marker_testing_violin_plot.svg",width=20)
print(p)
dev.off()
print(p)

# Prox1 and Penk Enquiry

final.annotated.harmony.go <- readRDS("final.annotated.harmony.go.rds")

Idents(final.annotated.harmony.go) <- final.annotated.harmony.go@meta.data$final.clusters
svg("52_umap_look-at_Prox1_Penk.svg",width=14)
FeaturePlot(final.annotated.harmony.go, features = c("rna_Prox1","rna_Penk"),pt.size=1,cols=c("lightgrey","black"))
dev.off()
FeaturePlot(final.annotated.harmony.go, features = c("rna_Prox1","rna_Penk"),pt.size=1,cols=c("lightgrey","black"))

svg("53_violin_plot_for_Prox1_Penk.svg",width=14)
VlnPlot(final.annotated.harmony.go, features = c("rna_Prox1","rna_Penk"))
dev.off()
VlnPlot(final.annotated.harmony.go, features = c("rna_Prox1","rna_Penk"))

temp0 <- GetAssayData(final.annotated.harmony.go[c("Prox1","Penk"),], slot = "counts")
temp0 <- as.matrix(temp0)
temp1 <- temp0>0
temp2 <- temp1[1,]
temp2 <- ifelse(temp2=="TRUE","+","-")
final.annotated.harmony.go@meta.data$Prox1 <- as.factor(temp2)
temp3 <- temp1[2,]
temp3 <- ifelse(temp3=="TRUE","+","-")
final.annotated.harmony.go@meta.data$Penk <- as.factor(temp3)
temp4 <- cbind(temp2,temp3)
temp5 <- apply(temp4,1,paste,collapse="",sep="")
final.annotated.harmony.go@meta.data$Prox1PenkCoded <- as.factor(temp5)
temp7 <- temp5=="+-"
final.annotated.harmony.go@meta.data$posneg <- as.factor(temp7)

svg("54_umap_for_Prox1_pos_Penk_pos.svg")
DimPlot(final.annotated.harmony.go, label=FALSE,group.by="posneg",cols=c("lightgrey","black"),pt.size=1)
dev.off()
DimPlot(final.annotated.harmony.go, label=FALSE,group.by="posneg",cols=c("lightgrey","black"),pt.size=1)

svg("55_split_umap_for_Prox1_pos_Penk_pos.svg",width=14)
DimPlot(final.annotated.harmony.go, label=FALSE,group.by="posneg",split.by="posneg",cols=c("lightgrey","black"),pt.size=1)
dev.off()
DimPlot(final.annotated.harmony.go, label=FALSE,group.by="posneg",split.by="posneg",cols=c("lightgrey","black"),pt.size=1)

temp6 <- temp5=="++"
final.annotated.harmony.go@meta.data$pospos <- as.factor(temp6)

svg("56_umap_for_Prox1_pos_Penk_pos.svg")
DimPlot(final.annotated.harmony.go, label=FALSE,group.by="pospos",cols=c("lightgrey","black"),pt.size=1)
dev.off()
DimPlot(final.annotated.harmony.go, label=FALSE,group.by="pospos",cols=c("lightgrey","black"),pt.size=1)

svg("57_split_umap_for_Prox1_pos_Penk_pos.svg",width=14)
DimPlot(final.annotated.harmony.go, label=FALSE,group.by="pospos",split.by="pospos",cols=c("lightgrey","black"),pt.size=1)
dev.off()
DimPlot(final.annotated.harmony.go, label=FALSE,group.by="pospos",split.by="pospos",cols=c("lightgrey","black"),pt.size=1)

table(final.annotated.harmony.go@meta.data$orig.ident[final.annotated.harmony.go@meta.data$posneg=="TRUE"])

DG_F1_VV	509
DG_F2_VV	1002
DG_M1_VV	338
DG_M2_VV	623
LL_F1_DG	527
LL_F2_DG	678
LL_M1_DG	531
LL_M2_DG	416

table(final.annotated.harmony.go@meta.data$orig.ident[final.annotated.harmony.go@meta.data$pospos=="TRUE"])

DG_F1_VV	11
DG_F2_VV	6
DG_M1_VV	1
DG_M2_VV	6
LL_F1_DG	36
LL_F2_DG	53
LL_M1_DG	19
LL_M2_DG	24

Idents(final.annotated.harmony.go) <- final.annotated.harmony.go@meta.data$Prox1PenkCoded
test1.results <- FindMarkers(final.annotated.harmony.go, ident.1 = "++", ident.2 = "+-")

wb <- createWorkbook("Prox1posPenkpos_vs_Prox1posPenkneg_AcrossAllClusters")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", test1.results, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "58_Prox1posPenkpos_vs_Prox1posPenkneg_AcrossAllCluster.xlsx", overwrite = TRUE)

# 0 1 5 17 18

# 0
cluster.sub <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="0"]

table(cluster.sub@meta.data$Prox1PenkCoded)

  --   -+   +-   ++ 
1426    3 1646    4 

table(cluster.sub@meta.data$orig.ident[cluster.sub@meta.data$posneg=="TRUE"])

DG_F1_VV	216
DG_F2_VV	462
DG_M1_VV	140
DG_M2_VV	248
LL_F1_DG	136
LL_F2_DG	219
LL_M1_DG	131
LL_M2_DG	94

table(cluster.sub@meta.data$orig.ident[cluster.sub@meta.data$pospos=="TRUE"])

DG_M2_VV	1
LL_F1_DG	1
LL_M2_DG	2

Idents(cluster.sub) <- cluster.sub@meta.data$Prox1PenkCoded
test2.results <- FindMarkers(cluster.sub, ident.1 = "++", ident.2 = "+-")

wb <- createWorkbook("Prox1posPenkpos_vs_Prox1posPenkneg_InCluster0")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", test2.results, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "59_Prox1posPenkpos_vs_Prox1posPenkneg_InCluster0.xlsx", overwrite = TRUE)

# 1
cluster.sub <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="1"]

table(cluster.sub@meta.data$Prox1PenkCoded)

  --   -+   +-   ++ 
3635  146 1734  105 

table(cluster.sub@meta.data$orig.ident[cluster.sub@meta.data$posneg=="TRUE"])

DG_F1_VV	192
DG_F2_VV	343
DG_M1_VV	115
DG_M2_VV	261
LL_F1_DG	193
LL_F2_DG	284
LL_M1_DG	193
LL_M2_DG	153

table(cluster.sub@meta.data$orig.ident[cluster.sub@meta.data$pospos=="TRUE"])

DG_F1_VV	9
DG_F2_VV	4
DG_M2_VV	4
LL_F1_DG	21
LL_F2_DG	41
LL_M1_DG	10
LL_M2_DG	16

Idents(cluster.sub) <- cluster.sub@meta.data$Prox1PenkCoded
test2.results <- FindMarkers(cluster.sub, ident.1 = "++", ident.2 = "+-")

wb <- createWorkbook("Prox1posPenkpos_vs_Prox1posPenkneg_InCluster1")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", test2.results, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "60_Prox1posPenkpos_vs_Prox1posPenkneg_InCluster1.xlsx", overwrite = TRUE)

# 5
cluster.sub <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="5"]
table(cluster.sub@meta.data$Prox1PenkCoded)

  --   -+   +-   ++ 
1156   27  765   26 

table(cluster.sub@meta.data$orig.ident[cluster.sub@meta.data$posneg=="TRUE"])

DG_F1_VV	62
DG_F2_VV	102
DG_M1_VV	57
DG_M2_VV	51
LL_F1_DG	140
LL_F2_DG	96
LL_M1_DG	139
LL_M2_DG	118 

table(cluster.sub@meta.data$orig.ident[cluster.sub@meta.data$pospos=="TRUE"])

DG_F1_VV	2
DG_M2_VV	1
LL_F1_DG	6
LL_F2_DG	8
LL_M1_DG	5
LL_M2_DG	4

Idents(cluster.sub) <- cluster.sub@meta.data$Prox1PenkCoded
test2.results <- FindMarkers(cluster.sub, ident.1 = "++", ident.2 = "+-")

wb <- createWorkbook("Prox1posPenkpos_vs_Prox1posPenkneg_InCluster5")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", test2.results, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "61_Prox1posPenkpos_vs_Prox1posPenkneg_InCluster5.xlsx", overwrite = TRUE)

# 18
cluster.sub <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="18"]
table(cluster.sub@meta.data$Prox1PenkCoded)

-- -+ +- ++ 
81 17 64 11 

table(cluster.sub@meta.data$orig.ident[cluster.sub@meta.data$posneg=="TRUE"])

DG_F1_VV	9
DG_F2_VV	19
DG_M1_VV	6
DG_M2_VV	7
LL_F1_DG	1
LL_F2_DG	11
LL_M1_DG	5
LL_M2_DG	6

table(cluster.sub@meta.data$orig.ident[cluster.sub@meta.data$pospos=="TRUE"])

LL_F1_DG	4
LL_F2_DG	2
LL_M1_DG	3
LL_M2_DG	2

Idents(cluster.sub) <- cluster.sub@meta.data$Prox1PenkCoded
test2.results <- FindMarkers(cluster.sub, ident.1 = "++", ident.2 = "+-")

wb <- createWorkbook("Prox1posPenkpos_vs_Prox1posPenkneg_InCluster18")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", test2.results, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "62_Prox1posPenkpos_vs_Prox1posPenkneg_InCluster18.xlsx", overwrite = TRUE)

#------------------------------------------------------------------------------
# Inspection Code For Raj (20230531)
#------------------------------------------------------------------------------

# load working object
final.annotated.harmony.go <- readRDS("final.annotated.harmony.go.rds")
Idents(final.annotated.harmony.go) <- final.annotated.harmony.go@meta.data$final.clusters

# set gene 1
gene1 <- "rna_Prox1"

# set gene 2
gene2 <- "rna_Penk"

# generate umap plots for genes of interest
FeaturePlot(final.annotated.harmony.go, features = c(gene1,gene2),pt.size=1,cols=c("lightgrey","black"))

# generate violin plots for genes of interest
VlnPlot(final.annotated.harmony.go, features = c(gene1,gene2))

# generate genotype codes for genes of interest
options(warn=-1)
temp0 <- GetAssayData(final.annotated.harmony.go[c(gene1,gene2),], slot = "counts")
temp0 <- as.matrix(temp0)
temp1 <- temp0>0
temp2 <- temp1[1,]
temp2 <- ifelse(temp2=="TRUE","+","-")
final.annotated.harmony.go@meta.data$Gene1 <- as.factor(temp2)
temp3 <- temp1[2,]
temp3 <- ifelse(temp3=="TRUE","+","-")
final.annotated.harmony.go@meta.data$Gene2 <- as.factor(temp3)
temp4 <- cbind(temp2,temp3)
temp5 <- apply(temp4,1,paste,collapse="",sep="")
final.annotated.harmony.go@meta.data$Gene1Gene2Coded <- as.factor(temp5)

# generate table of cell numbers per genotype
table(final.annotated.harmony.go$Gene1Gene2Coded)

# explore genotype "+-"

# capture "+-" genotype as a meta column
temp7 <- temp5=="+-"
final.annotated.harmony.go@meta.data$Gene1Gene2posneg <- as.factor(temp7)

# generate umap plot for genes of interest having genotype "+-"
DimPlot(final.annotated.harmony.go, label=FALSE,group.by="Gene1Gene2posneg",cols=c("lightgrey","black"),pt.size=1)

# generate umap plot for genes of interest split by genotype "+-"
DimPlot(final.annotated.harmony.go, label=FALSE,group.by="Gene1Gene2posneg",split.by="Gene1Gene2posneg",cols=c("lightgrey","black"),pt.size=1)

# generate table of cell numbers for genotype "+-"
table(final.annotated.harmony.go@meta.data$orig.ident[final.annotated.harmony.go@meta.data$Gene1Gene2posneg=="TRUE"])

# explore genotype "++"

# capture "+-" genotype as a meta column
temp6 <- temp5=="++"
final.annotated.harmony.go@meta.data$Gene1Gene2pospos <- as.factor(temp6)

# generate umap plot for genes of interest having genotype "++"
DimPlot(final.annotated.harmony.go, label=FALSE,group.by="Gene1Gene2pospos",cols=c("lightgrey","black"),pt.size=1)

# generate umap plot for genes of interest split by genotype "++"
DimPlot(final.annotated.harmony.go, label=FALSE,group.by="Gene1Gene2pospos",split.by="Gene1Gene2pospos",cols=c("lightgrey","black"),pt.size=1)

# generate table of cell numbers for genotype "++"
table(final.annotated.harmony.go@meta.data$orig.ident[final.annotated.harmony.go@meta.data$Gene1Gene2pospos=="TRUE"])

# test for markers between genotypes of interest regardless of cluster
genotype.of.interest1 <- "++"
genotype.of.interest2 <- "+-"
Idents(final.annotated.harmony.go) <- final.annotated.harmony.go@meta.data$Gene1Gene2Coded
table(Idents(final.annotated.harmony.go)[final.annotated.harmony.go@meta.data$Gene1Gene2Coded%in%c(genotype.of.interest1,genotype.of.interest2)])[c(genotype.of.interest1,genotype.of.interest2)]
table(final.annotated.harmony.go@meta.data$orig.ident[final.annotated.harmony.go@meta.data$Gene1Gene2Coded==genotype.of.interest1])
table(final.annotated.harmony.go@meta.data$orig.ident[final.annotated.harmony.go@meta.data$Gene1Gene2Coded==genotype.of.interest2])
all.cells.marker.results <- FindMarkers(final.annotated.harmony.go, ident.1 = genotype.of.interest1, ident.2 = genotype.of.interest2)
write.table(all.cells.marker.results,"all.cells.marker.results.txt",sep="\t")

# test for markers between genotypes of interest for specific cluster
cluster.of.interest <- "0"
genotype.of.interest1 <- "++"
genotype.of.interest2 <- "+-"
cluster.sub <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters==cluster.of.interest]
Idents(cluster.sub) <- cluster.sub@meta.data$Gene1Gene2Coded
table(Idents(cluster.sub)[cluster.sub@meta.data$Gene1Gene2Coded%in%c(genotype.of.interest1,genotype.of.interest2)])[c(genotype.of.interest1,genotype.of.interest2)]
table(cluster.sub@meta.data$orig.ident[cluster.sub@meta.data$Gene1Gene2Coded==genotype.of.interest1])
table(cluster.sub@meta.data$orig.ident[cluster.sub@meta.data$Gene1Gene2Coded==genotype.of.interest2])
cluster.specific.marker.results <- FindMarkers(cluster.sub, ident.1 = genotype.of.interest1, ident.2 = genotype.of.interest2)
write.table(cluster.specific.marker.results,"cluster.specific.marker.results.txt",sep="\t")

#------------------------------------------------------------------------------
# Inspection Code For Raj (20230612)
#------------------------------------------------------------------------------

# load working object
final.annotated.harmony.go <- readRDS("final.annotated.harmony.go.rds")
Idents(final.annotated.harmony.go) <- final.annotated.harmony.go@meta.data$final.clusters

# add meta column for VV and LL coding
code.vv.ll <- final.annotated.harmony.go@meta.data$orig.ident
code.vv.ll <- ifelse(code.vv.ll=="DG_F1_VV","VV",code.vv.ll)
code.vv.ll <- ifelse(code.vv.ll=="DG_F2_VV","VV",code.vv.ll)
code.vv.ll <- ifelse(code.vv.ll=="DG_M1_VV","VV",code.vv.ll)
code.vv.ll <- ifelse(code.vv.ll=="DG_M2_VV","VV",code.vv.ll)
code.vv.ll <- ifelse(code.vv.ll=="VV",code.vv.ll,"LL")
final.annotated.harmony.go@meta.data$code.vv.ll <- as.factor(code.vv.ll)
Idents(final.annotated.harmony.go) <- final.annotated.harmony.go@meta.data$code.vv.ll

# generate umap plot overlating VV vs LL
DimPlot(final.annotated.harmony.go, label=FALSE,group.by="code.vv.ll",cols=c("lightgrey","black"),pt.size=1)

# generate split umap plot overlating VV vs LL
DimPlot(final.annotated.harmony.go, label=FALSE,split.by="code.vv.ll",cols=c("lightgrey","black"),pt.size=1)

# generate bar plot describing number cells per VV and LL class
level.order <- c("LL","VV")
temp <- table(final.annotated.harmony.go@meta.data$code.vv.ll)
temp <- as.data.frame(cbind(names(temp),as.numeric(as.character(temp))))
dimnames(temp)[[2]] <- c("Class","nCells")
temp$Class <- factor(temp$Class,levels=level.order)
temp$nCells <- as.numeric(as.character(temp$nCells))
print(ggplot(temp, aes(x = factor(Class, level=level.order), y = nCells, fill = Class)) +  geom_bar(stat = "identity") + xlab("Cluster") + theme(axis.text.x = element_text(angle = 45, hjust=1)) + scale_fill_manual(values=c("lightgrey","black")))

# output bar plot stats
table(code.vv.ll)

# generate stacked bar plot describing number cells per cluster per VV and LL class
level.order <- c("LL","VV")
temp <- data.frame(Class=as.character(unlist(final.annotated.harmony.go@meta.data$code.vv.ll)),Cluster=as.character(unlist(final.annotated.harmony.go@meta.data$final.clusters)))
temptemp <- apply(temp,1,paste,collapse="_",sep="_")
temptemptemp <- table(temptemp)
temp <- cbind(names(temptemptemp),as.numeric(temptemptemp))
temptemp <- str_split(as.character(temp[,1]),"_")
temptemp <- as.data.frame(temptemp)
temptemp <- t(temptemp)
temp <- cbind(temp,temptemp)
rownames(temp) <- temp[,1]
temp <- temp[,-c(1)]
temp <- data.frame(Class=temp[,2],Cluster=temp[,3],nCells=as.numeric(temp[,1]))
temp$Cluster <- factor(as.character(temp$Cluster),levels=as.character(c(0,1,5,8,9,10,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30)))
temp$Class <- factor(as.character(temp$Class),levels=level.order)
print(ggplot(temp, aes(x = factor(Class, level=level.order), y = nCells, fill = Cluster)) + geom_bar(stat = "identity",position="stack") + xlab('Class') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))

# generate proportion bar plot describing number cells per cluster per VV and LL class
print(ggplot(temp, aes(x = factor(Class, level=level.order), y = nCells, fill = Cluster)) + geom_bar(stat = "identity",position="fill") + xlab('Class') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))

# output bar plot stats
temp.ll <- sum(temp[,3][temp[,1]=="LL"])
temp.vv <- sum(temp[,3][temp[,1]=="VV"])
temptemp <- ifelse(temp[,1]=="LL",temp[,3]/temp.ll,temp[,3]/temp.vv)
temp <- cbind(temp,temptemp)
dimnames(temp)[[2]][4] <- "Proportion"
print(temp)

# add meta column for M and F coding
code.m.f <- final.annotated.harmony.go@meta.data$orig.ident
code.m.f  <- ifelse(code.m.f=="DG_F1_VV","F",code.m.f)
code.m.f  <- ifelse(code.m.f=="DG_F2_VV","F",code.m.f)
code.m.f  <- ifelse(code.m.f=="LL_F1_DG","F",code.m.f)
code.m.f  <- ifelse(code.m.f=="LL_F2_DG","F",code.m.f)
code.m.f <- ifelse(code.m.f=="F",code.m.f,"M")
final.annotated.harmony.go@meta.data$code.m.f <- as.factor(code.m.f)
Idents(final.annotated.harmony.go) <- final.annotated.harmony.go@meta.data$code.m.f

# generate umap plot overlating M vs F
DimPlot(final.annotated.harmony.go, label=FALSE,group.by="code.m.f",cols=c("lightgrey","black"),pt.size=1)

# generate split umap plot overlating M vs F
DimPlot(final.annotated.harmony.go, label=FALSE,split.by="code.m.f",cols=c("lightgrey","black"),pt.size=1)

# generate bar plot describing number cells per M and F class
level.order <- c("F","M")
temp <- table(final.annotated.harmony.go@meta.data$code.m.f)
temp <- as.data.frame(cbind(names(temp),as.numeric(as.character(temp))))
dimnames(temp)[[2]] <- c("Gender","nCells")
temp$Gender <- factor(temp$Gender,levels=level.order)
temp$nCells <- as.numeric(as.character(temp$nCells))
print(ggplot(temp, aes(x = factor(Gender, level=level.order), y = nCells, fill = Gender)) +  geom_bar(stat = "identity") + xlab("Cluster") + theme(axis.text.x = element_text(angle = 45, hjust=1)) + scale_fill_manual(values=c("lightgrey","black")))

# output bar plot stats
table(code.m.f)

# generate stacked bar plot describing number cells per cluster per M and F class
level.order <- c("F","M")
temp <- data.frame(Class=as.character(unlist(final.annotated.harmony.go@meta.data$code.m.f)),Cluster=as.character(unlist(final.annotated.harmony.go@meta.data$final.clusters)))
temptemp <- apply(temp,1,paste,collapse="_",sep="_")
temptemptemp <- table(temptemp)
temp <- cbind(names(temptemptemp),as.numeric(temptemptemp))
temptemp <- str_split(as.character(temp[,1]),"_")
temptemp <- as.data.frame(temptemp)
temptemp <- t(temptemp)
temp <- cbind(temp,temptemp)
rownames(temp) <- temp[,1]
temp <- temp[,-c(1)]
temp <- data.frame(Gender=temp[,2],Cluster=temp[,3],nCells=as.numeric(temp[,1]))
temp$Cluster <- factor(as.character(temp$Cluster),levels=as.character(c(0,1,5,8,9,10,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30)))
temp$Gender <- factor(as.character(temp$Gender),levels=level.order)
print(ggplot(temp, aes(x = factor(Gender, level=level.order), y = nCells, fill = Cluster)) + geom_bar(stat = "identity",position="stack") + xlab('Gender') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))

# generate proportion bar plot describing number cells per cluster per M and F class
print(ggplot(temp, aes(x = factor(Gender, level=level.order), y = nCells, fill = Cluster)) + geom_bar(stat = "identity",position="fill") + xlab('Gender') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))

# output bar plot stats
temp.f <- sum(temp[,3][temp[,1]=="F"])
temp.m <- sum(temp[,3][temp[,1]=="M"])
temptemp <- ifelse(temp[,1]=="F",temp[,3]/temp.f,temp[,3]/temp.m)
temp <- cbind(temp,temptemp)
dimnames(temp)[[2]][4] <- "Proportion"
print(temp)

# umap with MT overlay

temp <- DimPlot(final.annotated.harmony.go)
temp <- temp$data
percent.mt <- final.annotated.harmony.go@meta.data$percent.mt
names(percent.mt) <- rownames(final.annotated.harmony.go@meta.data)
percent.mt <- percent.mt[rownames(temp)]
percent.nfeatures <- final.annotated.harmony.go@meta.data$nFeature_RNA
names(percent.nfeatures) <- rownames(final.annotated.harmony.go@meta.data)
percent.nfeatures <- percent.nfeatures[rownames(temp)]
percent.ncount <- final.annotated.harmony.go@meta.data$nCount_RNA
names(percent.ncount) <- rownames(final.annotated.harmony.go@meta.data)
percent.ncount <- percent.ncount[rownames(temp)]
doublet.score <- final.annotated.harmony.go@meta.data$DoubletScore
names(doublet.score) <- rownames(final.annotated.harmony.go@meta.data)
doublet.score <- doublet.score[rownames(temp)]
temp <- cbind(temp,percent.mt,percent.nfeatures,percent.ncount,doublet.score)
ggplot(temp, aes(x=umap_1, y=umap_2,colour=percent.mt)) + geom_point(size=1) + scale_colour_gradient(low="black",high="gray")

# umap with percent nFeatures overlay
ggplot(temp, aes(x=umap_1, y=umap_2,colour=percent.nfeatures)) + geom_point(size=1) + scale_colour_gradient(low="black",high="gray")

# umap with percent nCount overlay
ggplot(temp, aes(x=umap_1, y=umap_2,colour=percent.ncount)) + geom_point(size=1) + scale_colour_gradient(low="black",high="gray")

# umap with Doublet Score overlay
ggplot(temp, aes(x=umap_1, y=umap_2,colour=doublet.score)) + geom_point(size=1) + scale_colour_gradient(low="black",high="gray")

# differential testing between LL and VV per cluster

Idents(final.annotated.harmony.go) <- final.annotated.harmony.go@meta.data$final.clusters
table(Idents(final.annotated.harmony.go))

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="0"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.0.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.0.diffx.results,"c.0.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="1"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.1.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.1.diffx.results,"c.1.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="5"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.5.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.5.diffx.results,"c.5.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="8"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.8.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.8.diffx.results,"c.8.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="9"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.9.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.9.diffx.results,"c.9.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="10"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.10.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.10.diffx.results,"c.10.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="12"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.12.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.12.diffx.results,"c.12.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="13"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.13.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.13.diffx.results,"c.13.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="14"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.14.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.14.diffx.results,"c.14.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="15"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.15.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.15.diffx.results,"c.15.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="17"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.17.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.17.diffx.results,"c.17.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="18"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.18.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.18.diffx.results,"c.18.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="19"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.19.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.19.diffx.results,"c.19.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="20"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.20.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.20.diffx.results,"c.20.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="21"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.21.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.21.diffx.results,"c.21.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="22"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.22.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.22.diffx.results,"c.22.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="23"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.23.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.23.diffx.results,"c.23.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="24"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.24.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.24.diffx.results,"c.24.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="25"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.25.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.25.diffx.results,"c.25.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="26"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.26.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.26.diffx.results,"c.26.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="27"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.27.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.27.diffx.results,"c.27.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="28"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.28.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.28.diffx.results,"c.28.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="29"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.29.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.29.diffx.results,"c.29.diffx.results.txt",sep="\t")

temp <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters=="30"]
Idents(temp) <- temp@meta.data$code.vv.ll
table(Idents(temp))
c.30.diffx.results <- FindMarkers(temp, ident.1 = "LL", ident.2 = "VV")
write.table(c.30.diffx.results,"c.30.diffx.results.txt",sep="\t")

saveRDS(object = final.annotated.harmony.go, file = "final.curated.harmony.go_20230612.rds")

#------------------------------------------------------------------------------
# trajectory fitting LL & VV 
#------------------------------------------------------------------------------

# source required libraries

library(remotes)
remotes::install_github("satijalab/seurat-wrappers")
library(monocle3)
library(scales)

# load working object

final.annotated.harmony.go <- readRDS("final.annotated.harmony.go.rds")
Idents(final.annotated.harmony.go) <- final.annotated.harmony.go@meta.data$final.clusters

# add meta column for VV and LL coding

code.vv.ll <- final.annotated.harmony.go@meta.data$orig.ident
code.vv.ll <- ifelse(code.vv.ll=="DG_F1_VV","VV",code.vv.ll)
code.vv.ll <- ifelse(code.vv.ll=="DG_F2_VV","VV",code.vv.ll)
code.vv.ll <- ifelse(code.vv.ll=="DG_M1_VV","VV",code.vv.ll)
code.vv.ll <- ifelse(code.vv.ll=="DG_M2_VV","VV",code.vv.ll)
code.vv.ll <- ifelse(code.vv.ll=="VV",code.vv.ll,"LL")
final.annotated.harmony.go@meta.data$code.vv.ll <- as.factor(code.vv.ll)
Idents(final.annotated.harmony.go) <- final.annotated.harmony.go@meta.data$code.vv.ll

# prep for fit

prep.4.fit  <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters%in%c(0,1,5,18)]
DefaultAssay(prep.4.fit) <- "RNA"
monocle_object <- SeuratWrappers::as.cell_data_set(prep.4.fit)
monocle_object <- preprocess_cds(monocle_object)
monocle_object <- cluster_cells(cds = monocle_object, reduction_method = "UMAP")

# perform fit

monocle_object <- learn_graph(monocle_object)
monocle_object <- estimate_size_factors(monocle_object)
monocle_object@rowRanges@elementMetadata@listData[["gene_short_name"]] <- rownames(final.annotated.harmony.go[["RNA"]])
monocle_object.cx <- monocle_object 

# plot fit

ccc <- hue_pal()(24)[c(1,2,3,12)]
cx <- plot_cells(monocle_object.cx,color_cells_by = "final.clusters", label_cell_groups=FALSE,show_trajectory_graph=TRUE,label_leaves=FALSE,label_branch_points=FALSE,cell_size=1,trajectory_graph_segment_size=2,trajectory_graph_color = "black") + scale_colour_manual(values=ccc)
cx

# evaluate root node choice for pseudotime testing

goi <- c("Camk4","Ntng1")
g <- plot_cells(monocle_object.cx,genes=goi,label_cell_groups=FALSE,show_trajectory_graph=TRUE,label_leaves=FALSE,label_branch_points=FALSE,cell_size=1,trajectory_graph_segment_size=2,trajectory_graph_color = "black")
g

# select root

monocle_object.cx <- order_cells(monocle_object.cx,reduction_method = "UMAP")
cx.fit <- plot_cells(monocle_object.cx,color_cells_by = "pseudotime", label_cell_groups=FALSE,show_trajectory_graph=TRUE,label_leaves=FALSE,label_branch_points=FALSE,cell_size=1,trajectory_graph_segment_size=2,trajectory_graph_color = "black",graph_label_size=5)
cx.fit

# test for and identify genes that explain pseudotime

cx.fit.genes <- graph_test(monocle_object.cx, neighbor_graph="principal_graph")
cx.fit.genes.filtered <- row.names(subset(cx.fit.genes, q_value < 0.05))
write.table(cx.fit.genes.filtered,"cx.fit.genes.filtered.txt",sep="\t")

# plot top gene by q_value then p_value then morans_test_statistic

plot_genes_in_pseudotime(monocle_object.cx[rowData(monocle_object.cx)$gene_short_name %in% c("Sorcs3"),],color_cells_by="pseudotime",min_expr=0.5)

plot_cells(monocle_object.cx,genes=c("Sorcs3"),label_cell_groups=FALSE,show_trajectory_graph=FALSE,label_leaves=FALSE,label_branch_points=FALSE,cell_size=1,trajectory_graph_segment_size=2,trajectory_graph_color = "black",graph_label_size=5)

# test for and identify depleted vs enriched modules of genes that were identified to explain pseduotime

gene_module_df.cx <- find_gene_modules(monocle_object.cx[cx.fit.genes.filtered,], resolution=c(10^seq(-6,-1)))
write.table(gene_module_df.cx,"gene_module_df.cx.txt",sep="\t")
cell_group_df.cx <- tibble::tibble(cell=row.names(colData(monocle_object.cx)),cell_group=colData(monocle_object.cx)$final.clusters)

# plot module heat map

agg_mat.cx <- aggregate_gene_expression(monocle_object.cx, gene_module_df.cx, cell_group_df.cx)
row.names(agg_mat.cx) <- stringr::str_c("Module ", row.names(agg_mat.cx))
pheatmap::pheatmap(agg_mat.cx,scale="column", clustering_method="ward.D2")

# plot top traj gene for cluster 0

plot_genes_in_pseudotime(monocle_object.cx[rowData(monocle_object.cx)$gene_short_name %in% c("Ahcyl2"),],color_cells_by="pseudotime",min_expr=0.5)

plot_cells(monocle_object.cx,genes=c("Ahcyl2"),label_cell_groups=FALSE,show_trajectory_graph=FALSE,label_leaves=FALSE,label_branch_points=FALSE,cell_size=1,trajectory_graph_segment_size=2,trajectory_graph_color = "black",graph_label_size=5)

# plot top traj gene for cluster 1

plot_genes_in_pseudotime(monocle_object.cx[rowData(monocle_object.cx)$gene_short_name %in% c("Cadm2"),],color_cells_by="pseudotime",min_expr=0.5)

plot_cells(monocle_object.cx,genes=c("Cadm2"),label_cell_groups=FALSE,show_trajectory_graph=FALSE,label_leaves=FALSE,label_branch_points=FALSE,cell_size=1,trajectory_graph_segment_size=2,trajectory_graph_color = "black",graph_label_size=5)

# plot top traj gene for cluster 5

plot_genes_in_pseudotime(monocle_object.cx[rowData(monocle_object.cx)$gene_short_name %in% c("Olfm1"),],color_cells_by="pseudotime",min_expr=0.5)

plot_cells(monocle_object.cx,genes=c("Olfm1"),label_cell_groups=FALSE,show_trajectory_graph=FALSE,label_leaves=FALSE,label_branch_points=FALSE,cell_size=1,trajectory_graph_segment_size=2,trajectory_graph_color = "black",graph_label_size=5)

# plot top traj gene for cluster 18

plot_genes_in_pseudotime(monocle_object.cx[rowData(monocle_object.cx)$gene_short_name %in% c("Sorcs3"),],color_cells_by="pseudotime",min_expr=0.5)

plot_cells(monocle_object.cx,genes=c("Sorcs3"),label_cell_groups=FALSE,show_trajectory_graph=FALSE,label_leaves=FALSE,label_branch_points=FALSE,cell_size=1,trajectory_graph_segment_size=2,trajectory_graph_color = "black",graph_label_size=5)

#------------------------------------------------------------------------------
# trajectory fitting LL only
#------------------------------------------------------------------------------

# source required libraries

library(remotes)
remotes::install_github("satijalab/seurat-wrappers")
library(monocle3)
library(scales)

# load working object

final.annotated.harmony.go <- readRDS("final.annotated.harmony.go.rds")
Idents(final.annotated.harmony.go) <- final.annotated.harmony.go@meta.data$final.clusters

# add meta column for VV and LL coding

code.vv.ll <- final.annotated.harmony.go@meta.data$orig.ident
code.vv.ll <- ifelse(code.vv.ll=="DG_F1_VV","VV",code.vv.ll)
code.vv.ll <- ifelse(code.vv.ll=="DG_F2_VV","VV",code.vv.ll)
code.vv.ll <- ifelse(code.vv.ll=="DG_M1_VV","VV",code.vv.ll)
code.vv.ll <- ifelse(code.vv.ll=="DG_M2_VV","VV",code.vv.ll)
code.vv.ll <- ifelse(code.vv.ll=="VV",code.vv.ll,"LL")
final.annotated.harmony.go@meta.data$code.vv.ll <- as.factor(code.vv.ll)
Idents(final.annotated.harmony.go) <- final.annotated.harmony.go@meta.data$code.vv.ll

# prep for fit

prep.4.fit  <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters%in%c(0,1,5,18)]
prep.4.fit  <- prep.4.fit[,prep.4.fit@meta.data$code.vv.ll=="LL"]
DefaultAssay(prep.4.fit) <- "RNA"
monocle_object <- SeuratWrappers::as.cell_data_set(prep.4.fit)
monocle_object <- preprocess_cds(monocle_object)
monocle_object <- cluster_cells(cds = monocle_object, reduction_method = "UMAP")

# perform fit

monocle_object <- learn_graph(monocle_object)
monocle_object <- estimate_size_factors(monocle_object)
monocle_object@rowRanges@elementMetadata@listData[["gene_short_name"]] <- rownames(final.annotated.harmony.go[["RNA"]])
monocle_object.cx <- monocle_object 

# plot fit

ccc <- hue_pal()(24)[c(1,2,3,12)]
cx <- plot_cells(monocle_object.cx,color_cells_by = "final.clusters", label_cell_groups=FALSE,show_trajectory_graph=TRUE,label_leaves=FALSE,label_branch_points=FALSE,cell_size=1,trajectory_graph_segment_size=2,trajectory_graph_color = "black") + scale_colour_manual(values=ccc)
cx

# evaluate root node choice for pseudotime testing

goi <- c("Camk4","Ntng1")
g <- plot_cells(monocle_object.cx,genes=goi,label_cell_groups=FALSE,show_trajectory_graph=TRUE,label_leaves=FALSE,label_branch_points=FALSE,cell_size=1,trajectory_graph_segment_size=2,trajectory_graph_color = "black")
g

# select root

monocle_object.cx <- order_cells(monocle_object.cx,reduction_method = "UMAP")
cx.fit <- plot_cells(monocle_object.cx,color_cells_by = "pseudotime", label_cell_groups=FALSE,show_trajectory_graph=TRUE,label_leaves=FALSE,label_branch_points=FALSE,cell_size=1,trajectory_graph_segment_size=2,trajectory_graph_color = "black",graph_label_size=5)
cx.fit

# test for and identify genes that explain pseudotime

cx.fit.genes <- graph_test(monocle_object.cx, neighbor_graph="principal_graph")
cx.fit.genes.filtered <- row.names(subset(cx.fit.genes, q_value < 0.05))
write.table(cx.fit.genes,"ll.fit.genes.txt",sep="\t")

# plot top gene by q_value then p_value then morans_test_statistic

plot_genes_in_pseudotime(monocle_object.cx[rowData(monocle_object.cx)$gene_short_name %in% c("Sorcs3"),],color_cells_by="pseudotime",min_expr=0.5)

plot_cells(monocle_object.cx,genes=c("Sorcs3"),label_cell_groups=FALSE,show_trajectory_graph=FALSE,label_leaves=FALSE,label_branch_points=FALSE,cell_size=1,trajectory_graph_segment_size=2,trajectory_graph_color = "black",graph_label_size=5)

# test for and identify depleted vs enriched modules of genes that were identified to explain pseduotime

gene_module_df.cx <- find_gene_modules(monocle_object.cx[cx.fit.genes.filtered,], resolution=c(10^seq(-6,-1)))
write.table(gene_module_df.cx,"gene_module_df.cx.txt",sep="\t")
cell_group_df.cx <- tibble::tibble(cell=row.names(colData(monocle_object.cx)),cell_group=colData(monocle_object.cx)$final.clusters)

# plot module heat map

agg_mat.cx <- aggregate_gene_expression(monocle_object.cx, gene_module_df.cx, cell_group_df.cx)
row.names(agg_mat.cx) <- stringr::str_c("Module ", row.names(agg_mat.cx))
pheatmap::pheatmap(agg_mat.cx,scale="column", clustering_method="ward.D2")
write.table(agg_mat.cx,"agg_mat.cx.txt",sep="\t")

#------------------------------------------------------------------------------
# trajectory fitting VV only
#------------------------------------------------------------------------------

# source required libraries

library(remotes)
remotes::install_github("satijalab/seurat-wrappers")
library(monocle3)
library(scales)

# load working object

final.annotated.harmony.go <- readRDS("final.annotated.harmony.go.rds")
Idents(final.annotated.harmony.go) <- final.annotated.harmony.go@meta.data$final.clusters

# add meta column for VV and LL coding

code.vv.ll <- final.annotated.harmony.go@meta.data$orig.ident
code.vv.ll <- ifelse(code.vv.ll=="DG_F1_VV","VV",code.vv.ll)
code.vv.ll <- ifelse(code.vv.ll=="DG_F2_VV","VV",code.vv.ll)
code.vv.ll <- ifelse(code.vv.ll=="DG_M1_VV","VV",code.vv.ll)
code.vv.ll <- ifelse(code.vv.ll=="DG_M2_VV","VV",code.vv.ll)
code.vv.ll <- ifelse(code.vv.ll=="VV",code.vv.ll,"LL")
final.annotated.harmony.go@meta.data$code.vv.ll <- as.factor(code.vv.ll)
Idents(final.annotated.harmony.go) <- final.annotated.harmony.go@meta.data$code.vv.ll

# prep for fit

prep.4.fit  <- final.annotated.harmony.go[,final.annotated.harmony.go@meta.data$final.clusters%in%c(0,1,5,18)]
prep.4.fit  <- prep.4.fit[,prep.4.fit@meta.data$code.vv.ll=="VV"]
DefaultAssay(prep.4.fit) <- "RNA"
monocle_object <- SeuratWrappers::as.cell_data_set(prep.4.fit)
monocle_object <- preprocess_cds(monocle_object)
monocle_object <- cluster_cells(cds = monocle_object, reduction_method = "UMAP")

# perform fit

monocle_object <- learn_graph(monocle_object)
monocle_object <- estimate_size_factors(monocle_object)
monocle_object@rowRanges@elementMetadata@listData[["gene_short_name"]] <- rownames(final.annotated.harmony.go[["RNA"]])
monocle_object.cx <- monocle_object 

# plot fit

ccc <- hue_pal()(24)[c(1,2,3,12)]
cx <- plot_cells(monocle_object.cx,color_cells_by = "final.clusters", label_cell_groups=FALSE,show_trajectory_graph=TRUE,label_leaves=FALSE,label_branch_points=FALSE,cell_size=1,trajectory_graph_segment_size=2,trajectory_graph_color = "black") + scale_colour_manual(values=ccc)
cx

# evaluate root node choice for pseudotime testing

goi <- c("Camk4","Ntng1")
g <- plot_cells(monocle_object.cx,genes=goi,label_cell_groups=FALSE,show_trajectory_graph=TRUE,label_leaves=FALSE,label_branch_points=FALSE,cell_size=1,trajectory_graph_segment_size=2,trajectory_graph_color = "black")
g

# select root

monocle_object.cx <- order_cells(monocle_object.cx,reduction_method = "UMAP")
cx.fit <- plot_cells(monocle_object.cx,color_cells_by = "pseudotime", label_cell_groups=FALSE,show_trajectory_graph=TRUE,label_leaves=FALSE,label_branch_points=FALSE,cell_size=1,trajectory_graph_segment_size=2,trajectory_graph_color = "black",graph_label_size=5)
cx.fit

# test for and identify genes that explain pseudotime

cx.fit.genes <- graph_test(monocle_object.cx, neighbor_graph="principal_graph")
cx.fit.genes.filtered <- row.names(subset(cx.fit.genes, q_value < 0.05))
write.table(cx.fit.genes,"vv.fit.genes.txt",sep="\t")

# plot top gene by q_value then p_value then morans_test_statistic

plot_genes_in_pseudotime(monocle_object.cx[rowData(monocle_object.cx)$gene_short_name %in% c("Sorcs3"),],color_cells_by="pseudotime",min_expr=0.5)

plot_cells(monocle_object.cx,genes=c("Sorcs3"),label_cell_groups=FALSE,show_trajectory_graph=FALSE,label_leaves=FALSE,label_branch_points=FALSE,cell_size=1,trajectory_graph_segment_size=2,trajectory_graph_color = "black",graph_label_size=5)

# test for and identify depleted vs enriched modules of genes that were identified to explain pseduotime

gene_module_df.cx <- find_gene_modules(monocle_object.cx[cx.fit.genes.filtered,], resolution=c(10^seq(-6,-1)))
write.table(gene_module_df.cx,"gene_module_df.cx.txt",sep="\t")
cell_group_df.cx <- tibble::tibble(cell=row.names(colData(monocle_object.cx)),cell_group=colData(monocle_object.cx)$final.clusters)

# plot module heat map

agg_mat.cx <- aggregate_gene_expression(monocle_object.cx, gene_module_df.cx, cell_group_df.cx)
row.names(agg_mat.cx) <- stringr::str_c("Module ", row.names(agg_mat.cx))
pheatmap::pheatmap(agg_mat.cx,scale="column", clustering_method="ward.D2")
write.table(agg_mat.cx,"agg_mat.cx.txt",sep="\t")

plot_cells(monocle_object.cx,genes=c("Sorcs1","Sorcs2","Sorcs3"),label_cell_groups=FALSE,show_trajectory_graph=FALSE,label_leaves=FALSE,label_branch_points=FALSE,cell_size=1,trajectory_graph_segment_size=2,trajectory_graph_color = "black",graph_label_size=5)

















































#------------------------------------------------------------------------------
# ATAC BASE Analysis
#------------------------------------------------------------------------------

# merge
# https://github.com/stuart-lab/signac/blob/master/vignettes/merging.Rmd

plan("multiprocess", workers = 4)
options(future.globals.maxSize = 50000 * 1024^2) # for 50 Gb RAM

DG_F1_VV_atac_bed <- read.table("/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/bed_files/DG_F1_VV_atac_peaks.bed",col.names = c("chr", "start", "end"))

DG_F2_VV_atac_bed <- read.table("/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/bed_files/DG_F2_VV_atac_peaks.bed",col.names = c("chr", "start", "end"))

DG_M1_VV_atac_bed <- read.table("/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/bed_files/DG_M1_VV_atac_peaks.bed",col.names = c("chr", "start", "end"))

DG_M2_VV_atac_bed <- read.table("/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/bed_files/DG_M2_VV_atac_peaks.bed",col.names = c("chr", "start", "end"))

NAC_F1_VV_atac_bed <- read.table("/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/bed_files/NAC_F1_VV_atac_peaks.bed",col.names = c("chr", "start", "end"))

NAC_M1_VV_atac_bed <- read.table("/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/bed_files/NAC_M1_VV_atac_peaks.bed",col.names = c("chr", "start", "end"))

VH1PP_F1_VV_atac_bed <- read.table("/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/bed_files/VH1PP_F1_VV_atac_peaks.bed",col.names = c("chr", "start", "end"))

VH1PP_M1_VV_atac_bed <- read.table("/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/bed_files/VH1PP_M1_VV_atac_peaks.bed",col.names = c("chr", "start", "end"))

dim(DG_F1_VV_atac_bed)
dim(DG_F2_VV_atac_bed)
dim(DG_M1_VV_atac_bed)
dim(DG_M2_VV_atac_bed)
dim(NAC_F1_VV_atac_bed)
dim(NAC_M1_VV_atac_bed)
dim(VH1PP_F1_VV_atac_bed)
dim(VH1PP_M1_VV_atac_bed)

gr.DG.F1.VV <- makeGRangesFromDataFrame(DG_F1_VV_atac_bed)
gr.DG.F2.VV <- makeGRangesFromDataFrame(DG_F2_VV_atac_bed)
gr.DG.M1.VV <- makeGRangesFromDataFrame(DG_M1_VV_atac_bed)
gr.DG.M2.VV <- makeGRangesFromDataFrame(DG_M2_VV_atac_bed)
gr.NAC.F1.VV <- makeGRangesFromDataFrame(NAC_F1_VV_atac_bed)
gr.NAC.M1.VV <- makeGRangesFromDataFrame(NAC_M1_VV_atac_bed)
gr.VH1PP.F1.VV <- makeGRangesFromDataFrame(VH1PP_F1_VV_atac_bed)
gr.VH1PP.M1.VV <- makeGRangesFromDataFrame(VH1PP_M1_VV_atac_bed)

combined.peaks <- reduce(x=c(gr.DG.F1.VV,
gr.DG.F2.VV,
gr.DG.M1.VV,
gr.DG.M2.VV,
gr.NAC.F1.VV,
gr.NAC.M1.VV,
gr.VH1PP.F1.VV,
gr.VH1PP.M1.VV))

peakwidths <- width(combined.peaks)
combined.peaks <- combined.peaks[peakwidths  < 10000 & peakwidths > 20]
combined.peaks

md.DG_F1_VV <- read.table(
  file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/metric_files/DG_F1_VV_per_barcode_metrics.csv",
  stringsAsFactors = FALSE,
  sep = ",",
  header = TRUE,
  row.names = 1
)

md.DG_F2_VV <- read.table(
  file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/metric_files/DG_F2_VV_per_barcode_metrics.csv",
  stringsAsFactors = FALSE,
  sep = ",",
  header = TRUE,
  row.names = 1
)

md.DG_M1_VV <- read.table(
  file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/metric_files/DG_M1_VV_per_barcode_metrics.csv",
  stringsAsFactors = FALSE,
  sep = ",",
  header = TRUE,
  row.names = 1
)

md.DG_M2_VV <- read.table(
  file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/metric_files/DG_M2_VV_per_barcode_metrics.csv",
  stringsAsFactors = FALSE,
  sep = ",",
  header = TRUE,
  row.names = 1
)

md.NAC_F1_VV <- read.table(
  file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/metric_files/NAC_F1_VV_per_barcode_metrics.csv",
  stringsAsFactors = FALSE,
  sep = ",",
  header = TRUE,
  row.names = 1
)

md.NAC_M1_VV <- read.table(
  file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/metric_files/NAC_M1_VV_per_barcode_metrics.csv",
  stringsAsFactors = FALSE,
  sep = ",",
  header = TRUE,
  row.names = 1
)

md.VH1PP_F1_VV <- read.table(
  file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/metric_files/VH1PP_F1_VV_per_barcode_metrics.csv",
  stringsAsFactors = FALSE,
  sep = ",",
  header = TRUE,
  row.names = 1
)

md.VH1PP_M1_VV <- read.table(
  file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/metric_files/VH1PP_M1_VV_per_barcode_metrics.csv",
  stringsAsFactors = FALSE,
  sep = ",",
  header = TRUE,
  row.names = 1
)

md.DG_F1_VV <- md.DG_F1_VV[md.DG_F1_VV$atac_fragments > 500,]
md.DG_F2_VV <- md.DG_F2_VV[md.DG_F2_VV$atac_fragments > 500,]
md.DG_M1_VV <- md.DG_M1_VV[md.DG_M1_VV$atac_fragments > 500,]
md.DG_M2_VV <- md.DG_M2_VV[md.DG_M2_VV$atac_fragments > 500,]
md.NAC_F1_VV <- md.NAC_F1_VV[md.NAC_F1_VV$atac_fragments > 500,]
md.NAC_M1_VV <- md.NAC_M1_VV[md.NAC_M1_VV$atac_fragments > 500,]
md.VH1PP_F1_VV <- md.VH1PP_F1_VV[md.VH1PP_F1_VV$atac_fragments > 500,]
md.VH1PP_M1_VV <- md.VH1PP_M1_VV[md.VH1PP_M1_VV$atac_fragments > 500,]

frags.DG_F1_VV <- CreateFragmentObject(
  path = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/fragment_files/DG_F1_VV_atac_fragments.tsv.gz",
  cells = rownames(md.DG_F1_VV)
)

frags.DG_F2_VV <- CreateFragmentObject(
  path = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/fragment_files/DG_F2_VV_atac_fragments.tsv.gz",
  cells = rownames(md.DG_F2_VV)
)

frags.DG_M1_VV <- CreateFragmentObject(
  path = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/fragment_files/DG_M1_VV_atac_fragments.tsv.gz",
  cells = rownames(md.DG_M1_VV)
)

frags.DG_M2_VV <- CreateFragmentObject(
  path = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/fragment_files/DG_M2_VV_atac_fragments.tsv.gz",
  cells = rownames(md.DG_M2_VV)
)

frags.NAC_F1_VV <- CreateFragmentObject(
  path = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/fragment_files/NAC_F1_VV_atac_fragments.tsv.gz",
  cells = rownames(md.NAC_F1_VV)
)

frags.NAC_M1_VV <- CreateFragmentObject(
  path = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/fragment_files/NAC_M1_VV_atac_fragments.tsv.gz",
  cells = rownames(md.NAC_M1_VV)
)

frags.VH1PP_F1_VV <- CreateFragmentObject(
  path = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/fragment_files/VH1PP_F1_VV_atac_fragments.tsv.gz",
  cells = rownames(md.VH1PP_F1_VV)
)

frags.VH1PP_M1_VV <- CreateFragmentObject(
  path = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/fragment_files/VH1PP_M1_VV_atac_fragments.tsv.gz",
  cells = rownames(md.VH1PP_M1_VV)
)

DG_F1_VV.counts <- FeatureMatrix(
  fragments = frags.DG_F1_VV,
  features = combined.peaks,
  cells = rownames(md.DG_F1_VV)
)

DG_F2_VV.counts <- FeatureMatrix(
  fragments = frags.DG_F2_VV,
  features = combined.peaks,
  cells = rownames(md.DG_F2_VV)
)

DG_M1_VV.counts <- FeatureMatrix(
  fragments = frags.DG_M1_VV,
  features = combined.peaks,
  cells = rownames(md.DG_M1_VV)
)

DG_M2_VV.counts <- FeatureMatrix(
  fragments = frags.DG_M2_VV,
  features = combined.peaks,
  cells = rownames(md.DG_M2_VV)
)

NAC_F1_VV.counts <- FeatureMatrix(
  fragments = frags.NAC_F1_VV,
  features = combined.peaks,
  cells = rownames(md.NAC_F1_VV)
)

NAC_M1_VV.counts <- FeatureMatrix(
  fragments = frags.NAC_M1_VV,
  features = combined.peaks,
  cells = rownames(md.NAC_M1_VV)
)

VH1PP_F1_VV.counts <- FeatureMatrix(
  fragments = frags.VH1PP_F1_VV,
  features = combined.peaks,
  cells = rownames(md.VH1PP_F1_VV)
)

VH1PP_M1_VV.counts <- FeatureMatrix(
  fragments = frags.VH1PP_M1_VV,
  features = combined.peaks,
  cells = rownames(md.VH1PP_M1_VV)
)

DG_F1_VV.chrom_assay <- CreateChromatinAssay(counts = DG_F1_VV.counts, fragments = frags.DG_F1_VV)
DG_F2_VV.chrom_assay <- CreateChromatinAssay(counts = DG_F2_VV.counts, fragments = frags.DG_F2_VV)
DG_M1_VV.chrom_assay <- CreateChromatinAssay(counts = DG_M1_VV.counts, fragments = frags.DG_M1_VV)
DG_M2_VV.chrom_assay <- CreateChromatinAssay(counts = DG_M2_VV.counts, fragments = frags.DG_M2_VV)
NAC_F1_VV.chrom_assay <- CreateChromatinAssay(counts = NAC_F1_VV.counts, fragments = frags.NAC_F1_VV)
NAC_M1_VV.chrom_assay <- CreateChromatinAssay(counts = NAC_M1_VV.counts, fragments = frags.NAC_M1_VV)
VH1PP_F1_VV.chrom_assay <- CreateChromatinAssay(counts = VH1PP_F1_VV.counts, fragments = frags.VH1PP_F1_VV)
VH1PP_M1_VV.chrom_assay <- CreateChromatinAssay(counts = VH1PP_M1_VV.counts, fragments = frags.VH1PP_M1_VV)

DG_F1_VV.atac <- CreateSeuratObject(DG_F1_VV.chrom_assay, assay = "ATAC", meta.data=md.DG_F1_VV)
DG_F2_VV.atac <- CreateSeuratObject(DG_F2_VV.chrom_assay, assay = "ATAC", meta.data=md.DG_F2_VV)
DG_M1_VV.atac <- CreateSeuratObject(DG_M1_VV.chrom_assay, assay = "ATAC", meta.data=md.DG_M1_VV)
DG_M2_VV.atac <- CreateSeuratObject(DG_M2_VV.chrom_assay, assay = "ATAC", meta.data=md.DG_M2_VV)
NAC_F1_VV.atac <- CreateSeuratObject(NAC_F1_VV.chrom_assay, assay = "ATAC", meta.data=md.NAC_F1_VV)
NAC_M1_VV.atac <- CreateSeuratObject(NAC_M1_VV.chrom_assay, assay = "ATAC", meta.data=md.NAC_M1_VV)
VH1PP_F1_VV.atac <- CreateSeuratObject(VH1PP_F1_VV.chrom_assay, assay = "ATAC", meta.data=md.VH1PP_F1_VV)
VH1PP_M1_VV.atac <- CreateSeuratObject(VH1PP_M1_VV.chrom_assay, assay = "ATAC", meta.data=md.VH1PP_M1_VV)

Idents(DG_F1_VV.atac) <- "DG_F1_VV"
Idents(DG_F2_VV.atac) <- "DG_F2_VV"
Idents(DG_M1_VV.atac) <- "DG_M1_VV"
Idents(DG_M2_VV.atac) <- "DG_M2_VV"
Idents(NAC_F1_VV.atac) <- "NAC_F1_VV"
Idents(NAC_M1_VV.atac) <- "NAC_M1_VV"
Idents(VH1PP_F1_VV.atac) <- "VH1PP_F1_VV"
Idents(VH1PP_M1_VV.atac) <- "VH1PP_M1_VV"

DG_F1_VV.atac$dataset <- "DG_F1_VV"
DG_F2_VV.atac$dataset <- "DG_F2_VV"
DG_M1_VV.atac$dataset <- "DG_M1_VV"
DG_M2_VV.atac$dataset <- "DG_M2_VV"
NAC_F1_VV.atac$dataset <- "NAC_F1_VV"
NAC_M1_VV.atac$dataset <- "NAC_M1_VV"
VH1PP_F1_VV.atac$dataset <- "VH1PP_F1_VV"
VH1PP_M1_VV.atac$dataset <- "VH1PP_M1_VV"

all.normalized.atac <- merge(DG_F1_VV.atac, y = c(DG_F2_VV.atac,DG_M1_VV.atac,DG_M2_VV.atac,NAC_F1_VV.atac,NAC_M1_VV.atac,VH1PP_F1_VV.atac,VH1PP_M1_VV.atac), add.cell.ids=c("DG_F1_VV","DG_F2_VV","DG_M1_VV","DG_M2_VV","NAC_F1_VV","NAC_M1_VV","VH1PP_F1_VV","VH1PP_M1_VV"), project="WT", merge.data=TRUE)

annotations <- GetGRangesFromEnsDb(ensdb = EnsDb.Mmusculus.v79)
seqlevelsStyle(annotations) <- 'UCSC'
genome(annotations) <- "mm10"
Annotation(all.normalized.atac) <- annotations

saveRDS(object = all.normalized.atac, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/all.normalized.atac.rds")

# Inspect
# https://stuartlab.org/signac/articles/mouse_brain_vignette.html

# barcode
# gex_barcode
# atac_barcode
# is_cell
# excluded_reason
# gex_raw_reads
# gex_mapped_reads
# gex_conf_intergenic_reads
# gex_conf_exonic_reads
# gex_conf_intronic_reads
# gex_conf_exonic_unique_reads
# gex_conf_exonic_antisense_reads
# gex_conf_exonic_dup_reads
# gex_exonic_umis
# gex_conf_intronic_unique_reads
# gex_conf_intronic_antisense_reads
# gex_conf_intronic_dup_reads
# gex_intronic_umis
# gex_conf_txomic_unique_reads
# gex_umis_count
# gex_genes_count
# atac_raw_reads
# atac_unmapped_reads
# atac_lowmapq
# atac_dup_reads
# atac_chimeric_reads
# atac_mitochondrial_reads
# atac_fragments
# atac_TSS_fragments
# atac_peak_region_fragments
# atac_peak_region_cutsites

all.normalized.atac <- readRDS("/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/all.normalized.atac.rds")

atac.drilldown <- all.normalized.atac
DefaultAssay(atac.drilldown) <- "ATAC"
Idents(atac.drilldown) <- "All Cells"

temp1 <- table(atac.drilldown@meta.data$dataset)
svg("1_atac_primary_inspection_barplot_number_cells_per_sample.svg")
ccc <- hue_pal()(8)
par(mar=c(11,4,4,2))
barplot(as.numeric(temp1),ylab="nCells",names.arg = names(temp1),las = 2,col=ccc) + theme(axis.text.x = element_text(angle = 90))
abline(h=0)
dev.off()
ccc <- hue_pal()(8)
par(mar=c(11,4,4,2))
barplot(as.numeric(temp1),ylab="nCells",names.arg = names(temp1),las = 2,col=ccc) + theme(axis.text.x = element_text(angle = 90))
abline(h=0)

atac.drilldown <- NucleosomeSignal(object = atac.drilldown)
atac.drilldown <- TSSEnrichment(atac.drilldown, fast = FALSE)

saveRDS(atac.drilldown,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.drilldown.pre.filter.rds")

atac.drilldown$log2_peak_region_fragments <- log2(atac.drilldown$atac_peak_region_fragments+2)
atac.drilldown$log2_nCount_ATAC <- log2(atac.drilldown$nCount_ATAC+2)
atac.drilldown$pct_reads_in_peaks <- (atac.drilldown$atac_peak_region_fragments / atac.drilldown$atac_fragments) * 100
atac.drilldown$log2_atac_TSS_fragments <- log2(atac.drilldown$atac_TSS_fragments+2)
atac.drilldown$log2_nucleosome_signal <- log2(atac.drilldown$nucleosome_signal+2)
atac.drilldown$log2_TSS_enrichment <- log2(atac.drilldown$TSS.enrichment+2)
# atac.drilldown$blacklist_ratio <- brain$blacklist_region_fragments / brain$peak_region_fragments

# nCount

v <- VlnPlot(
  object = atac.drilldown,
  features = c('nCount_ATAC','log2_nCount_ATAC'),
  pt.size = 0,
  ncol = 2
)
v
svg("2_atac_primary_inspection_violin_plot_nCount.svg")
print(v)
dev.off()

svg("3_atac_primary_inspection_density_plot_log2_nCount.svg")
plot(density(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC)),main="log2_nCount_ATAC")
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(1*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC)))),lty=2)
(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(1*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC)))),lty=3)
(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(3*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC)))),lty=4)
(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(3*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(4*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC)))),lty=5)
(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(4*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(-1*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC)))),lty=2)
(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(-1*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC)))),lty=3)
(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(-3*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC)))),lty=4)
(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(-3*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(-4*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC)))),lty=5)
(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(-4*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))))
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC)),main="log2_nCount_ATAC")
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(1*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC)))),lty=2)
(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(1*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC)))),lty=3)
(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(3*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC)))),lty=4)
(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(3*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(4*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC)))),lty=5)
(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(4*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(-1*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC)))),lty=2)
(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(-1*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC)))),lty=3)
(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(-3*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC)))),lty=4)
(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(-3*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(-4*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC)))),lty=5)
(mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(-4*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))))
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = atac.drilldown,
  features = c('log2_nCount_ATAC'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))),color="black",linetype=c(3)) + geom_hline(yintercept=250,color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))),color="black",linetype=c(3)) + geom_hline(yintercept=250,color="black",linetype=c(3))
v
svg("4_atac_primary_inspection_violin_plot_log2_nCount_with_selected_cutoffs.svg")
print(v)
dev.off()

# peak_region_fragments

v <- VlnPlot(
  object = atac.drilldown,
  features = c('atac_peak_region_fragments','log2_peak_region_fragments'),
  pt.size = 0,
  ncol = 2
)
v
svg("5_atac_primary_inspection_violin_plot_log2_peak_region_fragments.svg")
print(v)
dev.off()

svg("6_atac_primary_inspection_density_plot_log2_peak_region_fragments.svg")
plot(density(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments)),main="log2_peak_region_fragments")
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(1*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments)))),lty=2)
(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(1*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments)))),lty=3)
(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(3*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments)))),lty=4)
(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(3*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(4*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments)))),lty=5)
(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(4*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(-1*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments)))),lty=2)
(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(-1*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments)))),lty=3)
(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(-3*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments)))),lty=4)
(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(-3*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(-4*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments)))),lty=5)
(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(-4*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))))
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments)),main="log2_peak_region_fragments")
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(1*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments)))),lty=2)
(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(1*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments)))),lty=3)
(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(3*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments)))),lty=4)
(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(3*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(4*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments)))),lty=5)
(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(4*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(-1*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments)))),lty=2)
(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(-1*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments)))),lty=3)
(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(-3*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments)))),lty=4)
(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(-3*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(-4*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments)))),lty=5)
(mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(-4*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))))
legend("topright",c("+/- 1SD","+/- 2SD","+/- 3SD","+/- 4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = atac.drilldown,
  features = c('log2_peak_region_fragments'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))),color="black",linetype=c(3)) + geom_hline(yintercept=mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))),color="black",linetype=c(3))
v
svg("7_atac_primary_inspection_violin_plot_log2_peak_region_fragments_with_selected_cutoff.svg")
print(v)
dev.off()

# pct_reads_in_peaks

v <- VlnPlot(
  object = atac.drilldown,
  features = c('pct_reads_in_peaks'),
  pt.size = 0,
  ncol = 1
)
v
svg("8_atac_primary_inspection_violin_plot_pct_reads_in_peaks.svg")
print(v)
dev.off()

svg("9_atac_primary_inspection_density_plot_pct_reads_in_peaks.svg")
plot(density(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks)),main="pct_reads_in_peaks")
abline(v=(mean(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))+(-1*sd(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks)))),lty=2)
(mean(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))+(-1*sd(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks)))),lty=3)
(mean(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))+(-3*sd(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks)))),lty=4)
(mean(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))+(-3*sd(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))+(-4*sd(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks)))),lty=5)
(mean(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))+(-4*sd(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))))
legend("topright",c("+/-1SD","+/-2SD","+/-3SD","+/-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
abline(v=(mean(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))+(-1*sd(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks)))),lty=2)
(mean(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))+(-1*sd(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks)))),lty=3)
(mean(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))+(-3*sd(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks)))),lty=4)
(mean(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))+(-3*sd(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))+(-4*sd(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks)))),lty=5)
(mean(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))+(-4*sd(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))))
legend("topright",c("+/-1SD","+/-2SD","+/-3SD","+/-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = atac.drilldown,
  features = c('pct_reads_in_peaks'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))),color="black",linetype=c(2))
v
svg("10_atac_primary_inspection_violin_plot_pct_reads_in_peaks_with_selected_cutoffs.svg")
print(v)
dev.off()

# log2_TSS_fragments

v <- VlnPlot(
  object = atac.drilldown,
  features = c('atac_TSS_fragments','log2_atac_TSS_fragments'),
  pt.size = 0,
  ncol = 2
)
v
svg("11_atac_primary_inspection_violin_plot_log2_TSS_fragments.svg")
print(v)
dev.off()

svg("12_atac_primary_inspection_density_plot_log2_TSS_fragments.svg")
plot(density(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments)),main="log2_atac_TSS_fragments")
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))+(-1*sd(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments)))),lty=2)
(mean(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))+(-1*sd(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments)))),lty=3)
(mean(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))+(-3*sd(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments)))),lty=4)
(mean(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))+(-3*sd(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))+(-4*sd(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments)))),lty=5)
(mean(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))+(-4*sd(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))))
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments)),main="log2_atac_TSS_fragments")
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))+(-1*sd(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments)))),lty=2)
(mean(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))+(-1*sd(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments)))),lty=3)
(mean(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))+(-3*sd(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments)))),lty=4)
(mean(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))+(-3*sd(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))+(-4*sd(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments)))),lty=5)
(mean(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))+(-4*sd(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))))
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = atac.drilldown,
  features = c('log2_atac_TSS_fragments'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))),color="black",linetype=c(3))
v

svg("13_atac_primary_inspection_violin_plot_log2_TSS_fragments_with_selected_cutoff.svg")
print(v)
dev.off()

v <- VlnPlot(
  object = atac.drilldown,
  features = c('TSS.enrichment','log2_TSS_enrichment'),
  pt.size = 0,
  ncol = 2
)
v
svg("14_atac_primary_inspection_violin_plot_log2_TSS_enrichment.svg")
print(v)
dev.off()

svg("15_atac_primary_inspection_density_plot_log2_TSS_enrichment.svg")
plot(density(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment)),main="log2_TSS_enrichment")
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))+(-1*sd(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment)))),lty=2)
(mean(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))+(-1*sd(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment)))),lty=3)
(mean(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))+(-3*sd(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment)))),lty=4)
(mean(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))+(-3*sd(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))+(-4*sd(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment)))),lty=5)
(mean(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))+(-4*sd(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))))
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment)),main="log2_TSS_enrichment")
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))+(-1*sd(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment)))),lty=2)
(mean(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))+(-1*sd(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment)))),lty=3)
(mean(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))+(-3*sd(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment)))),lty=4)
(mean(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))+(-3*sd(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))+(-4*sd(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment)))),lty=5)
(mean(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))+(-4*sd(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))))
legend("topright",c("-1SD","-2SD","-3SD","-4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = atac.drilldown,
  features = c('log2_TSS_enrichment'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))),color="black",linetype=c(3))
v

svg("16_atac_primary_inspection_violin_plot_log2_TSS_enrichment_with_selected_cutoff.svg")
print(v)
dev.off()

v <- VlnPlot(
  object = atac.drilldown,
  features = c('nucleosome_signal','log2_nucleosome_signal'),
  pt.size = 0,
  ncol = 2
)
v
svg("17_atac_primary_inspection_violin_plot_log2_nucleosome_signal.svg")
print(v)
dev.off()

svg("18_atac_primary_inspection_density_plot_log2_nucleosome_signal.svg")
plot(density(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal)),main="log2_nucleosome_signal")
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))+(1*sd(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal)))),lty=2)
(mean(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))+(1*sd(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal)))),lty=3)
(mean(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))+(3*sd(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal)))),lty=4)
(mean(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))+(3*sd(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))+(4*sd(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal)))),lty=5)
(mean(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))+(4*sd(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))))
legend("topright",c("1SD","2SD","3SD","4SD"),lwd=2,lty=c(2,3,4,5))
dev.off()
plot(density(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal)),main="log2_nucleosome_signal")
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))+(1*sd(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal)))),lty=2)
(mean(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))+(1*sd(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal)))),lty=3)
(mean(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))+(3*sd(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal)))),lty=4)
(mean(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))+(3*sd(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))+(4*sd(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal)))),lty=5)
(mean(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))+(4*sd(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))))
abline(v=(mean(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))+(-1*sd(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal)))),lty=2)
legend("topright",c("1SD","2SD","3SD","4SD"),lwd=2,lty=c(2,3,4,5))

v <- VlnPlot(
  object = atac.drilldown,
  features = c('log2_nucleosome_signal'),
  pt.size = 0,
  ncol = 1
) + geom_hline(yintercept=mean(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))),color="black",linetype=c(3))
v
svg("19_atac_primary_inspection_violin_plot_log2_nucleosome_signal_with_selected_cutoff.svg")
print(v)
dev.off()

# hard filter

atac.drilldown
atac.drilldown <- subset(
  x = atac.drilldown,
  subset = log2_nCount_ATAC > mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))) & log2_nCount_ATAC < mean(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))+(2*sd(as.numeric(atac.drilldown@meta.data$log2_nCount_ATAC))) & log2_peak_region_fragments > mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))) & log2_peak_region_fragments < mean(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))+(2*sd(as.numeric(atac.drilldown@meta.data$log2_peak_region_fragments))) & pct_reads_in_peaks > mean(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))+(-2*sd(as.numeric(atac.drilldown@meta.data$pct_reads_in_peaks))) & log2_atac_TSS_fragments > mean(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_atac_TSS_fragments))) & log2_TSS_enrichment > mean(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))+(-2*sd(as.numeric(atac.drilldown@meta.data$log2_TSS_enrichment))) & log2_nucleosome_signal < mean(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))+(2*sd(as.numeric(atac.drilldown@meta.data$log2_nucleosome_signal))))
atac.drilldown

saveRDS(atac.drilldown,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.drilldown.post.filter.rds")

temp1 <- table(atac.drilldown@meta.data$dataset)
svg("20_atac_post_hard_filtering_barplot_number_cells_per_sample.svg")
ccc <- hue_pal()(8)
par(mar=c(11,4,4,2))
barplot(as.numeric(temp1),ylab="nCells",names.arg = names(temp1),las = 2,col=ccc) + theme(axis.text.x = element_text(angle = 90))
abline(h=0)
dev.off()
ccc <- hue_pal()(8)
par(mar=c(11,4,4,2))
barplot(as.numeric(temp1),ylab="nCells",names.arg = names(temp1),las = 2,col=ccc) + theme(axis.text.x = element_text(angle = 90))
abline(h=0)

# identify and remove doublet cells by sample
# https://bioconductor.org/packages/devel/bioc/vignettes/scDblFinder/inst/doc/scATAC.html

options(warn=-1)
all.list <- SplitObject(atac.drilldown, split.by = "dataset")
to.remove <- NULL
for(i in 1:length(all.list)) {
	print(i)
	temp.grab <- all.list[[i]]
	temp.grab.sce <- as.SingleCellExperiment(temp.grab)
	temp.grab.sce <- scDblFinder(temp.grab.sce, artificialDoublets=1, aggregateFeatures=TRUE, nfeatures=25, processing="normFeatures")
	temp.doublet <- rownames(colData(temp.grab.sce))[temp.grab.sce$scDblFinder.class=="doublet"]
	to.remove <- c(to.remove,temp.doublet)
}
options(warn=0)
length(to.remove)

duplicate.status.by.sample <- rownames(atac.drilldown@meta.data)%!in%to.remove
atac.drilldown@meta.data$duplicate.status.by.sample <- factor(duplicate.status.by.sample)
atac.drilldown <- atac.drilldown[,atac.drilldown@meta.data$duplicate.status.by.sample=="TRUE"]

temp1 <- table(atac.drilldown@meta.data$dataset)
ccc <- hue_pal()(8)
par(mar=c(11,4,4,2))
barplot(as.numeric(temp1),ylab="nCells",names.arg = names(temp1),las = 2,col=ccc) + theme(axis.text.x = element_text(angle = 90))
abline(h=0)
svg("21_atac_post_doublet_cell_filtering_by_sample_barplot_number_cells_per_sample.svg")
temp1 <- table(atac.drilldown@meta.data$dataset)
ccc <- hue_pal()(8)
par(mar=c(11,4,4,2))
barplot(as.numeric(temp1),ylab="nCells",names.arg = names(temp1),las = 2,col=ccc) + theme(axis.text.x = element_text(angle = 90))
abline(h=0)
dev.off()

# dimension reduction

atac.drilldown <- RunTFIDF(atac.drilldown)
atac.drilldown <- FindTopFeatures(atac.drilldown, min.cutoff = 'q0')
atac.drilldown <- RunSVD(object = atac.drilldown)

d <- DepthCor(atac.drilldown)
svg("22_atac_post_dimension_reduction_barplot.svg")
print(d)
dev.off()

atac.drilldown <- RunUMAP(
  object = atac.drilldown,
  reduction = 'lsi',
  dims = 2:30
)
atac.drilldown <- FindNeighbors(
  object = atac.drilldown,
  reduction = 'lsi',
  dims = 2:30
)

svg("23_atac_post_doublet_cell_filtering_by_sample_umap.svg")
DimPlot(object = atac.drilldown, label = FALSE, group.by="dataset",repel=T)
dev.off()
DimPlot(object = atac.drilldown, label = FALSE, group.by="dataset",repel=T)

# identify and remove doublet cells across samples
# https://bioconductor.org/packages/devel/bioc/vignettes/scDblFinder/inst/doc/scATAC.html

options(warn=-1)
temp.grab <- atac.drilldown
temp.grab.sce <- as.SingleCellExperiment(temp.grab)
temp.grab.sce <- scDblFinder(temp.grab.sce, artificialDoublets=1, aggregateFeatures=TRUE, nfeatures=25, processing="normFeatures")
temp.doublet <- rownames(colData(temp.grab.sce))[temp.grab.sce$scDblFinder.class=="doublet"]
options(warn=0)
length(temp.doublet)

duplicate.status.cross.sample <- rownames(atac.drilldown@meta.data)%!in%temp.doublet
atac.drilldown@meta.data$duplicate.status.cross.sample <- factor(duplicate.status.cross.sample)

svg("24_atac_post_doublet_cell_filtering_cross_sample_umap.svg")
DimPlot(object = atac.drilldown, label = FALSE, group.by="duplicate.status.cross.sample",repel=T)
dev.off()
DimPlot(object = atac.drilldown, label = FALSE, group.by="duplicate.status.cross.sample",repel=T)

final.atac.drilldown <- atac.drilldown[,atac.drilldown@meta.data$duplicate.status.cross.sample=="TRUE"]

temp1 <- table(final.atac.drilldown@meta.data$dataset)
ccc <- hue_pal()(8)
par(mar=c(11,4,4,2))
barplot(as.numeric(temp1),ylab="nCells",names.arg = names(temp1),las = 2,col=ccc) + theme(axis.text.x = element_text(angle = 90))
abline(h=0)
svg("25_atac_post_doublet_cell_filtering_cross_sample_barplot_number_cells_per_sample.svg")
temp1 <- table(final.atac.drilldown@meta.data$dataset)
ccc <- hue_pal()(8)
par(mar=c(11,4,4,2))
barplot(as.numeric(temp1),ylab="nCells",names.arg = names(temp1),las = 2,col=ccc) + theme(axis.text.x = element_text(angle = 90))
abline(h=0)
dev.off()

# repeat dimension reduction

final.atac.drilldown <- RunTFIDF(final.atac.drilldown)
final.atac.drilldown <- FindTopFeatures(final.atac.drilldown, min.cutoff = 'q0')
final.atac.drilldown <- RunSVD(object = final.atac.drilldown)

d <- DepthCor(final.atac.drilldown)
svg("26_atac_post_repeat_dimension_reduction_barplot.svg")
print(d)
dev.off()

final.atac.drilldown <- RunUMAP(
  object = final.atac.drilldown,
  reduction = 'lsi',
  dims = 2:30
)
final.atac.drilldown <- FindNeighbors(
  object = final.atac.drilldown,
  reduction = 'lsi',
  dims = 2:30
)

# perform clustering

final.atac.drilldown <- FindClusters(
  object = final.atac.drilldown,
  algorithm = 3,
  resolution = c(0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2.0,2.1,2.2,2.3,2.4,2.5),
  verbose = FALSE
)

svg("27_atac_post_clustering_clustree_results.svg",width=10,height=20)
clustree(final.atac.drilldown,prefix="ATAC_snn_res.")
dev.off()
clustree(final.atac.drilldown,prefix="ATAC_snn_res.")

pdf("28_atac_post_clustering_umap_plots_per_resolution.pdf")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.0.04)))))
final.atac.drilldown@meta.data$RNA_snn_res.0.04 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.0.04, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.0.04")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.0.05)))))
final.atac.drilldown@meta.data$RNA_snn_res.0.05 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.0.05, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.0.05")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.0.06)))))
final.atac.drilldown@meta.data$RNA_snn_res.0.06 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.0.06, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.0.06")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.0.07)))))
final.atac.drilldown@meta.data$RNA_snn_res.0.07 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.0.07, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.0.07")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.0.08)))))
final.atac.drilldown@meta.data$RNA_snn_res.0.08 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.0.08, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.0.08")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.0.09)))))
final.atac.drilldown@meta.data$RNA_snn_res.0.09 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.0.09, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.0.09")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.0.1)))))
final.atac.drilldown@meta.data$RNA_snn_res.0.1 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.0.1, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.0.1")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.0.2)))))
final.atac.drilldown@meta.data$RNA_snn_res.0.2 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.0.2, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.0.2")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.0.3)))))
final.atac.drilldown@meta.data$RNA_snn_res.0.3 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.0.3, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.0.3")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.0.4)))))
final.atac.drilldown@meta.data$RNA_snn_res.0.4 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.0.4, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.0.4")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.0.5)))))
final.atac.drilldown@meta.data$RNA_snn_res.0.5 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.0.5, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.0.5")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.0.6)))))
final.atac.drilldown@meta.data$RNA_snn_res.0.6 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.0.6, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.0.6")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.0.7)))))
final.atac.drilldown@meta.data$RNA_snn_res.0.7 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.0.7, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.0.7")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.0.8)))))
final.atac.drilldown@meta.data$RNA_snn_res.0.8 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.0.8, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.0.8")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.0.9)))))
final.atac.drilldown@meta.data$RNA_snn_res.0.9 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.0.9, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.0.9")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.1)))))
final.atac.drilldown@meta.data$RNA_snn_res.1 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.1, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.1")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.1.1)))))
final.atac.drilldown@meta.data$RNA_snn_res.1.1 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.1.1, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.1.1")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.1.2)))))
final.atac.drilldown@meta.data$RNA_snn_res.1.2 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.1.2, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.1.2")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.1.3)))))
final.atac.drilldown@meta.data$RNA_snn_res.1.3 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.1.3, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.1.3")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.1.4)))))
final.atac.drilldown@meta.data$RNA_snn_res.1.4 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.1.4, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.1.4")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.1.5)))))
final.atac.drilldown@meta.data$RNA_snn_res.1.5 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.1.5, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.1.5")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.1.6)))))
final.atac.drilldown@meta.data$RNA_snn_res.1.6 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.1.6, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.1.6")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.1.7)))))
final.atac.drilldown@meta.data$RNA_snn_res.1.7 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.1.7, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.1.7")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.1.8)))))
final.atac.drilldown@meta.data$RNA_snn_res.1.8 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.1.8, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.1.8")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.1.9)))))
final.atac.drilldown@meta.data$RNA_snn_res.1.9 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.1.9, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.1.9")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.2)))))
final.atac.drilldown@meta.data$RNA_snn_res.2 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.2, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.2")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.2.1)))))
final.atac.drilldown@meta.data$RNA_snn_res.2.1 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.2.1, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.2.1")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.2.2)))))
final.atac.drilldown@meta.data$RNA_snn_res.2.2 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.2.2, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.2.2")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.2.3)))))
final.atac.drilldown@meta.data$RNA_snn_res.2.3 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.2.3, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.2.3")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.2.4)))))
final.atac.drilldown@meta.data$RNA_snn_res.2.4 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.2.4, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.2.4")

my_levels <- as.character(c(0:length(table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.2.5)))))
final.atac.drilldown@meta.data$RNA_snn_res.2.5 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.2.5, levels=my_levels)
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.2.5")

dev.off()

saveRDS(object = atac.drilldown, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.drilldown.rds")
saveRDS(object = final.atac.drilldown, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/final.atac.drilldown.rds")

final.atac.drilldown <- readRDS("/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/final.atac.drilldown.rds")

final.atac.drilldown@meta.data$ATAC_snn_res.0.3 <- factor(x=final.atac.drilldown@meta.data$ATAC_snn_res.0.3, levels=as.character(c(0:14)))
Idents(final.atac.drilldown) <- final.atac.drilldown@meta.data$ATAC_snn_res.0.3
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.0.3",repel=TRUE)
svg("29_atac_post_clustering_umap_for_res_0.3.svg")
DimPlot(final.atac.drilldown, label=TRUE,group.by="ATAC_snn_res.0.3",repel=TRUE)
dev.off()

temp3 <- table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.0.3))
temp4 <- as.data.frame(cbind(names(temp3),as.numeric(temp3)))
temp5 <- temp4[,2]
names(temp5) <- temp4[,1]
temp5 <- temp5[as.character(c(0:14))]
ccc <- hue_pal()(length(temp5))
barplot(as.numeric(temp5),col=ccc,xlab="Cluster",ylab="nCells",names.arg = names(temp5),las = 2)
abline(h=0)
svg("30_atac_post_clustering_barplot_number_cells_per_cluster_for_res_0.3.svg")
temp3 <- table(as.character(final.atac.drilldown@meta.data$ATAC_snn_res.0.3))
temp4 <- as.data.frame(cbind(names(temp3),as.numeric(temp3)))
temp5 <- temp4[,2]
names(temp5) <- temp4[,1]
temp5 <- temp5[as.character(c(0:14))]
ccc <- hue_pal()(length(temp5))
barplot(as.numeric(temp5),col=ccc,xlab="Cluster",ylab="nCells",names.arg = names(temp5),las = 2)
abline(h=0)
dev.off()

# perform recoding 1,7 -> 1

temp <- as.character(unlist(final.atac.drilldown@meta.data$ATAC_snn_res.0.3))
temp <- ifelse(temp=="7","1",temp)
final.atac.drilldown@meta.data$final.atac.clusters <- factor(temp,levels=as.character(c(0:6,8:14)))
Idents(final.atac.drilldown) <- final.atac.drilldown@meta.data$final.atac.clusters

svg("31_atac_post_clustering_umap_for_res_0.3_recoded.svg")
DimPlot(final.atac.drilldown, label=TRUE,group.by="final.atac.clusters")
dev.off()
DimPlot(final.atac.drilldown, label=TRUE,group.by="final.atac.clusters")

temp3 <- table(as.character(final.atac.drilldown@meta.data$final.atac.clusters))
temp4 <- as.data.frame(cbind(names(temp3),as.numeric(temp3)))
temp5 <- temp4[,2]
names(temp5) <- temp4[,1]
temp5 <- temp5[as.character(c(0:14))]
ccc <- hue_pal()(length(temp5))
barplot(as.numeric(temp5),col=ccc,xlab="Cluster",ylab="nCells",names.arg = names(temp5),las = 2)
abline(h=0)
svg("32_atac_post_clustering_barplot_for_res_0.3_recoded.svg")
temp3 <- table(as.character(final.atac.drilldown@meta.data$final.atac.clusters))
temp4 <- as.data.frame(cbind(names(temp3),as.numeric(temp3)))
temp5 <- temp4[,2]
names(temp5) <- temp4[,1]
temp5 <- temp5[as.character(c(0:13))]
ccc <- hue_pal()(length(temp5))
barplot(as.numeric(temp5),col=ccc,xlab="Cluster",ylab="nCells",names.arg = names(temp5),las = 2)
abline(h=0)
dev.off()

# perform cluster by cluster pruning

to.do <- names((table(Idents(final.atac.drilldown))))
length(to.do)

to.remove <- NULL

i <- 1
temp2 <- final.atac.drilldown[,(final.atac.drilldown@meta.data$final.atac.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.atac.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=1.5,lty=2)
abline(h=2,lty=2)
temp10 <- X
temp10[,1] <- temp10[,1]>1.5
temp10[,2] <- temp10[,2]>2
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",i," Outliers"),sep="",collapse="")))
to.remove <- c(to.remove,temp11)

i <- 2
temp2 <- final.atac.drilldown[,(final.atac.drilldown@meta.data$final.atac.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.atac.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=1.25,lty=2)
abline(h=1.25,lty=2)
temp10 <- X
temp10[,1] <- temp10[,1]>1.25
temp10[,2] <- temp10[,2]>1.25
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",i," Outliers"),sep="",collapse="")))
to.remove <- c(to.remove,temp11)

i <- 3
temp2 <- final.atac.drilldown[,(final.atac.drilldown@meta.data$final.atac.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.atac.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=2,lty=2)
abline(h=2,lty=2)
temp10 <- X
temp10[,1] <- temp10[,1]>2
temp10[,2] <- temp10[,2]>2
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",i," Outliers"),sep="",collapse="")))
to.remove <- c(to.remove,temp11)

i <- 4
temp2 <- final.atac.drilldown[,(final.atac.drilldown@meta.data$final.atac.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.atac.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=2,lty=2)
abline(h=2.25,lty=2)
temp10 <- X
temp10[,1] <- temp10[,1]>2
temp10[,2] <- temp10[,2]>2.25
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",i," Outliers"),sep="",collapse="")))
to.remove <- c(to.remove,temp11)

i <- 5
temp2 <- final.atac.drilldown[,(final.atac.drilldown@meta.data$final.atac.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.atac.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=2,lty=2)
abline(h=2,lty=2)
temp10 <- X
temp10[,1] <- temp10[,1]>2
temp10[,2] <- temp10[,2]>2
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",i," Outliers"),sep="",collapse="")))
to.remove <- c(to.remove,temp11)

i <- 6
temp2 <- final.atac.drilldown[,(final.atac.drilldown@meta.data$final.atac.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.atac.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=2,lty=2)
abline(h=2.5,lty=2)
temp10 <- X
temp10[,1] <- temp10[,1]>2
temp10[,2] <- temp10[,2]>2.5
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",i," Outliers"),sep="",collapse="")))
to.remove <- c(to.remove,temp11)

i <- 7
temp2 <- final.atac.drilldown[,(final.atac.drilldown@meta.data$final.atac.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.atac.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=1,lty=2)
abline(h=1,lty=2)
temp10 <- X
temp10[,1] <- temp10[,1]>1
temp10[,2] <- temp10[,2]>1
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",i," Outliers"),sep="",collapse="")))
to.remove <- c(to.remove,temp11)

plot(X, cex = 0.5)
abline(v=2,lty=2)
abline(h=3,lty=2)
temp10 <- X
temp10[,1] <- temp10[,1]<2
temp10[,2] <- temp10[,2]>3
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>=2]
temp2@meta.data$new.cluster.to.add <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="new.cluster.to.add"))
to.keep <- rownames(temp2@meta.data)[temp2@meta.data$new.cluster.to.add=="TRUE"]

temp1 <- rownames(final.atac.drilldown@meta.data)
temp2 <- final.atac.drilldown@meta.data$final.atac.clusters
names(temp2) <- temp1
temp3 <- as.factor(rep("15",length(to.keep)))
names(temp3) <- to.keep
temp4 <- temp2[names(temp2)%!in%to.keep]
temp5 <- c(temp4,temp3)[rownames(final.atac.drilldown@meta.data)]
final.atac.drilldown@meta.data$final.atac.clusters <- temp5
to.remove <- setdiff(to.remove,to.keep)

i <- 8
temp2 <- final.atac.drilldown[,(final.atac.drilldown@meta.data$final.atac.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.atac.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=1.75,lty=2)
abline(h=3,lty=2)
temp10 <- X
temp10[,1] <- temp10[,1]>1.75
temp10[,2] <- temp10[,2]>3
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",i," Outliers"),sep="",collapse="")))
to.remove <- c(to.remove,temp11)

i <- 9
temp2 <- final.atac.drilldown[,(final.atac.drilldown@meta.data$final.atac.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.atac.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=2,lty=2)
abline(h=2,lty=2)
temp10 <- X
temp10[,1] <- temp10[,1]>2
temp10[,2] <- temp10[,2]>2
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",i," Outliers"),sep="",collapse="")))
to.remove <- c(to.remove,temp11)

i <- 10
temp2 <- final.atac.drilldown[,(final.atac.drilldown@meta.data$final.atac.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.atac.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=2,lty=2)
abline(h=2,lty=2)
temp10 <- X
temp10[,1] <- temp10[,1]>2
temp10[,2] <- temp10[,2]>2
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",i," Outliers"),sep="",collapse="")))
to.remove <- c(to.remove,temp11)

i <- 11
temp2 <- final.atac.drilldown[,(final.atac.drilldown@meta.data$final.atac.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.atac.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=1.5,lty=2)
abline(h=1.5,lty=2)
temp10 <- X
temp10[,1] <- temp10[,1]>1.5
temp10[,2] <- temp10[,2]>1.5
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",i," Outliers"),sep="",collapse="")))
to.remove <- c(to.remove,temp11)

i <- 12
temp2 <- final.atac.drilldown[,(final.atac.drilldown@meta.data$final.atac.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.atac.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=2,lty=2)
abline(h=1.5,lty=2)
temp10 <- X
temp10[,1] <- temp10[,1]>2
temp10[,2] <- temp10[,2]>1.5
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",i," Outliers"),sep="",collapse="")))
to.remove <- c(to.remove,temp11)

i <- 13
temp2 <- final.atac.drilldown[,(final.atac.drilldown@meta.data$final.atac.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.atac.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=2,lty=2)
abline(h=2,lty=2)
temp10 <- X
temp10[,1] <- temp10[,1]>2
temp10[,2] <- temp10[,2]>2
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",i," Outliers"),sep="",collapse="")))
to.remove <- c(to.remove,temp11)

i <- 14
temp2 <- final.atac.drilldown[,(final.atac.drilldown@meta.data$final.atac.clusters==to.do[i])]
temp3 <- DimPlot(temp2, label=FALSE,group.by="final.atac.clusters")
temp4 <- temp3$data[,1]
temp5 <- temp3$data[,2]
temp6 <- mean(temp4,trim=0.20)
temp7 <- mean(temp5,trim=0.20)
temp44 <- abs((temp4-temp6)/sd(temp4))
temp55 <- abs((temp5-temp7)/sd(temp5))
X <- as.matrix(cbind(temp44,temp55))
dimnames(X)[[1]] <- colnames(temp2)
plot(X, cex = 0.5)
abline(v=1.5,lty=2)
abline(h=1.5,lty=2)
temp10 <- X
temp10[,1] <- temp10[,1]>1.5
temp10[,2] <- temp10[,2]>1.5
temp11 <- dimnames(temp10)[[1]][apply(temp10,1,sum)>0]
temp2@meta.data$outliers <- rownames(temp2@meta.data)%in%temp11
print(DimPlot(temp2, label=FALSE,group.by="outliers") + ggtitle(paste(c("Cluster ",i," Outliers"),sep="",collapse="")))
to.remove <- c(to.remove,temp11)

final.atac.pruned <- final.atac.drilldown
final.atac.pruned@meta.data$pruned <- colnames(final.atac.pruned)%in%to.remove

DimPlot(final.atac.pruned, label=FALSE,group.by="pruned")
svg("33_atac_post_pruning_umap_for_res_0.3_recoded_split_by_True_False.svg")
DimPlot(final.atac.pruned, label=FALSE,group.by="pruned")
dev.off()

final.atac.pruned <- final.atac.pruned[,final.atac.pruned@meta.data$pruned=="FALSE"]

# Characterize

DimPlot(final.atac.pruned, label=FALSE,group.by="final.atac.clusters")
svg("34_atac_final_umap_by_cluster_v1.svg")
DimPlot(final.atac.pruned, label=FALSE,group.by="final.atac.clusters")
dev.off()

DimPlot(final.atac.pruned, label=TRUE,group.by="final.atac.clusters",repel=TRUE)
svg("35_atac_final_umap_by_cluster_v2.svg")
DimPlot(final.atac.pruned, label=TRUE,group.by="final.atac.clusters",repel=TRUE)
dev.off()

DimPlot(final.atac.pruned, label=TRUE,group.by="final.atac.clusters",repel=TRUE) + NoLegend()
svg("36_atac_final_umap_by_cluster_v3.svg")
DimPlot(final.atac.pruned, label=TRUE,group.by="final.atac.clusters",repel=TRUE) + NoLegend()
dev.off()

DimPlot(final.atac.pruned, label=FALSE, group.by="dataset")
svg("37_atac_final_umap_by_sample.svg")
DimPlot(final.atac.pruned, label=FALSE, group.by="dataset")
dev.off()

DimPlot(final.atac.pruned, reduction = "umap", split.by = "dataset",ncol=3)
svg("38_atac_final_umap_split_by_sample.svg",width=20,height=20)
DimPlot(final.atac.pruned, reduction = "umap", split.by = "dataset",ncol=3)
dev.off()

level.order <- as.character(c(0:6,8:15))
temp <- table(final.atac.pruned@meta.data$final.atac.clusters)
temp <- as.data.frame(cbind(names(temp),as.numeric(as.character(temp))))
dimnames(temp)[[2]] <- c("Cluster","nCells")
temp$Cluster <- factor(temp$Cluster,levels=level.order)
temp$nCells <- as.numeric(as.character(temp$nCells))
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Cluster)) +  geom_bar(stat = "identity") + xlab("Cluster")) + theme(axis.text.x = element_text(angle = 45, hjust=1))
svg("39_atac_final_barplot_cluster_nCells.svg",width=20)
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Cluster)) +  geom_bar(stat = "identity") + xlab("Cluster")) + theme(axis.text.x = element_text(angle = 45, hjust=1))
dev.off()

level.order <- as.character(c(0:6,8:15))
temp <- final.atac.pruned@meta.data
pos.dataset <- c(1:length(names(final.atac.pruned@meta.data)))[names(final.atac.pruned@meta.data)=="dataset"]
pos.final.atac.clusters <- c(1:length(names(final.atac.pruned@meta.data)))[names(final.atac.pruned@meta.data)=="final.atac.clusters"]
temp <- as.data.frame(temp[,c(pos.dataset,pos.final.atac.clusters)])
temptemp <- apply(temp,1,paste,collapse="_",sep="_")
temptemptemp <- table(temptemp)
temp <- cbind(names(temptemptemp),as.numeric(temptemptemp))
temptemp <- str_split(as.character(temp[,1]),"_")
temptemp <- as.data.frame(temptemp)
temptemp <- t(temptemp)
temp <- cbind(temp,temptemp)
temptemp <- temp[,c(3:5)]
temptemp <- apply(temptemp,1,paste,collapse="_",sep="_")
temp <- cbind(temp,temptemp)
rownames(temp) <- temp[,1]
temp[,1] <- temp[,7]
temp <- temp[,-c(7)]
temp <- temp[,c(1,6,2)]
dimnames(temp)[[2]] <- c("Sample","Cluster","nCells")
temp <- as.data.frame(temp)
temp$Cluster <- factor(as.character(temp$Cluster),levels=level.order)
temp$nCells <- as.numeric(as.character(temp$nCells))
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
svg("40_atac_final_barplot_by_cluster_vs_sample_breakdown.svg",width=10)
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
dev.off()

print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('Proportion') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
svg("41_atac_final_barplot_by_cluster_vs_sample_proportion.svg",width=10)
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('Proportion') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
dev.off()

saveRDS(object = final.atac.pruned, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/final.atac.pruned.rds")

# compute gene activities

gene.activities <- GeneActivity(final.atac.pruned)
saveRDS(object = gene.activities, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/gene.activities.rds")

# add the gene activity matrix to the Seurat object as a new assay

final.atac.pruned[['RNA']] <- CreateAssayObject(counts = gene.activities)
final.atac.pruned <- NormalizeData(
  object = final.atac.pruned,
  assay = 'RNA',
  normalization.method = 'LogNormalize',
  scale.factor = median(final.atac.pruned$nCount_RNA)
)

saveRDS(object = final.atac.pruned, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/final.atac.pruned.rds")

final.annotated.harmony.go <- readRDS("/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/final.annotated.harmony.go.rds")

final.atac.pruned <- readRDS("/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/final.atac.pruned.rds")

# find trasnfer anchors between GEX and ATAC objects

final.annotated.harmony.go <- FindVariableFeatures(
  object = final.annotated.harmony.go,
  nfeatures = 5000
)

DefaultAssay(final.atac.pruned) <- 'RNA'

transfer.anchors <- FindTransferAnchors(
  reference = final.annotated.harmony.go,
  query = final.atac.pruned,
  reduction = 'cca',
  features = intersect(VariableFeatures(final.annotated.harmony.go),rownames(final.atac.pruned))
)

saveRDS(object = transfer.anchors, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/transfer.anchors.rds")

final.predicted.atac.labels <- TransferData(
  anchorset = transfer.anchors,
  refdata = final.annotated.harmony.go$final.annotations,
  weight.reduction = final.atac.pruned[['lsi']],
  dims = 2:30
)

final.atac.pruned <- AddMetaData(object = final.atac.pruned, metadata = final.predicted.atac.labels)

plot1 <- DimPlot(final.annotated.harmony.go, group.by = 'final.annotations', label = TRUE, repel = TRUE) + ggtitle('scRNA-seq')
plot2 <- DimPlot(final.atac.pruned, group.by = 'predicted.id', label = TRUE, repel = TRUE) + ggtitle('scATAC-seq')
plot3 <- plot1 + plot2
plot3
svg("42_atac_post_label_transfer_umap.svg",width=20,height=10)
print(plot3)
dev.off()

# characterize clusters by label

level.order <- as.character(c(0:6,8:15))
temp <- final.atac.pruned@meta.data
pos.cluster <- c(1:length(names(final.atac.pruned@meta.data)))[names(final.atac.pruned@meta.data)=="final.atac.clusters"]
pos.predicted.id <- c(1:length(names(final.atac.pruned@meta.data)))[names(final.atac.pruned@meta.data)=="predicted.id"]
temp <- as.data.frame(temp[,c(pos.predicted.id,pos.cluster)])
temptemp <- apply(temp,1,paste,collapse="_",sep="_")
temptemptemp <- table(temptemp)
temp <- cbind(names(temptemptemp),as.numeric(temptemptemp))
temptemp <- str_split(as.character(temp[,1]),"_")
new.temptemp <- temptemp
for(i in 1:length(temptemp)) {
	print(i)
	t.0 <- temptemp[[i]]
	t.1 <- t.0[length(t.0)]
	t.2 <- t.0[-c(length(t.0))]
	t.3 <- paste(t.2,sep="_",collapse="_")
	new.temptemp[[i]] <- c(t.3,t.1)
}
temptemp <- new.temptemp
temptemp <- as.data.frame(temptemp)
temptemp <- t(temptemp)
temp <- cbind(temp,temptemp)
rownames(temp) <- temp[,1]
temp <- temp[,c(4,3,2)]
dimnames(temp)[[2]] <- c("Cluster","Label","nCells")
temp <- as.data.frame(temp)
temp$Cluster <- factor(as.character(temp$Cluster),levels=level.order)
temp$Label <- factor(as.character(temp$Label))
temp$nCells <- as.numeric(as.character(temp$nCells))
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Label)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
svg("43_atac_post_label_transfer_barplot.svg",width=10)
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Label)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells') + theme(axis.text.x = element_text(angle = 45, hjust=1)))
dev.off()

saveRDS(final.annotated.harmony.go,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/final.annotated.harmony.go.rds")

saveRDS(final.atac.pruned,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/final.atac.pruned.rds")

# find differential peaks

final.annotated.harmony.go <- readRDS("/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/final.annotated.harmony.go.rds")

final.atac.pruned <- readRDS("/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/final.atac.pruned.rds")

DefaultAssay(final.atac.pruned) <- 'ATAC'

to.do <- as.character(c(0:6,8:15))

# cluster 0

Idents(final.atac.pruned) <- final.atac.pruned@meta.data$final.atac.clusters
atac.cluster.0.diffx.peaks <- FindMarkers(
  object = final.atac.pruned,
  ident.1 = "0", 
  ident.2 = setdiff(to.do,"0"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.0.diffx.peaks)

wb <- createWorkbook("atac_diffx_peak_testing_results_cluster_2")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.0.diffx.peaks, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac_diffx_peak_testing_results_cluster_0.xlsx", overwrite = TRUE)

plot1 <- VlnPlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.0.diffx.peaks)[1],
  pt.size = 0.1,
  idents = c(as.character(c(0:6,8:15)))
)

plot2 <- FeaturePlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.0.diffx.peaks)[1],
  pt.size = 0.1,
  max.cutoff = 'q95'
)
plot3 <- plot1 + plot2
plot3
svg("atac_top_diffx_peak_cluster_0.svg",height=14)
print(plot3)
dev.off()

# cluster 1

Idents(final.atac.pruned) <- final.atac.pruned@meta.data$final.atac.clusters
atac.cluster.1.diffx.peaks <- FindMarkers(
  object = final.atac.pruned,
  ident.1 = "1", 
  ident.2 = setdiff(to.do,"1"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.1.diffx.peaks)

wb <- createWorkbook("atac_diffx_peak_testing_results_cluster_2")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.1.diffx.peaks, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac_diffx_peak_testing_results_cluster_1.xlsx", overwrite = TRUE)

plot1 <- VlnPlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.1.diffx.peaks)[1],
  pt.size = 0.1,
  idents = c(as.character(c(0:6,8:15)))
)

plot2 <- FeaturePlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.1.diffx.peaks)[1],
  pt.size = 0.1,
  max.cutoff = 'q95'
)
plot3 <- plot1 + plot2
plot3
svg("atac_top_diffx_peak_cluster_1.svg",height=14)
print(plot3)
dev.off()

options(object.size=Inf)
setwd("/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007")

# cluster 2

Idents(final.atac.pruned) <- final.atac.pruned@meta.data$final.atac.clusters
atac.cluster.2.diffx.peaks <- FindMarkers(
  object = final.atac.pruned,
  ident.1 = "2", 
  ident.2 = setdiff(to.do,"2"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.2.diffx.peaks)

wb <- createWorkbook("atac_diffx_peak_testing_results_cluster_2")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.2.diffx.peaks, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac_diffx_peak_testing_results_cluster_2.xlsx", overwrite = TRUE)

plot1 <- VlnPlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.2.diffx.peaks)[1],
  pt.size = 0.1,
  idents = c(as.character(c(0:6,8:15)))
)

plot2 <- FeaturePlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.2.diffx.peaks)[1],
  pt.size = 0.1,
  max.cutoff = 'q95'
)
plot3 <- plot1 + plot2
plot3
svg("atac_top_diffx_peak_cluster_2.svg",height=14)
print(plot3)
dev.off()

# cluster 3

Idents(final.atac.pruned) <- final.atac.pruned@meta.data$final.atac.clusters
atac.cluster.3.diffx.peaks <- FindMarkers(
  object = final.atac.pruned,
  ident.1 = "3", 
  ident.2 = setdiff(to.do,"3"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.3.diffx.peaks)

wb <- createWorkbook("atac_diffx_peak_testing_results_cluster_2")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.3.diffx.peaks, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac_diffx_peak_testing_results_cluster_3.xlsx", overwrite = TRUE)

plot1 <- VlnPlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.3.diffx.peaks)[1],
  pt.size = 0.1,
  idents = c(as.character(c(0:6,8:15)))
)

plot2 <- FeaturePlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.3.diffx.peaks)[1],
  pt.size = 0.1,
  max.cutoff = 'q95'
)
plot3 <- plot1 + plot2
plot3
svg("atac_top_diffx_peak_cluster_3.svg",height=14)
print(plot3)
dev.off()

# cluster 4

Idents(final.atac.pruned) <- final.atac.pruned@meta.data$final.atac.clusters
atac.cluster.4.diffx.peaks <- FindMarkers(
  object = final.atac.pruned,
  ident.1 = "4", 
  ident.2 = setdiff(to.do,"4"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.4.diffx.peaks)

wb <- createWorkbook("atac_diffx_peak_testing_results_cluster_2")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.4.diffx.peaks, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac_diffx_peak_testing_results_cluster_4.xlsx", overwrite = TRUE)

plot1 <- VlnPlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.4.diffx.peaks)[1],
  pt.size = 0.1,
  idents = c(as.character(c(0:6,8:15)))
)

plot2 <- FeaturePlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.4.diffx.peaks)[1],
  pt.size = 0.1,
  max.cutoff = 'q95'
)
plot3 <- plot1 + plot2
plot3
svg("atac_top_diffx_peak_cluster_4.svg",height=14)
print(plot3)
dev.off()

# cluster 5

Idents(final.atac.pruned) <- final.atac.pruned@meta.data$final.atac.clusters
atac.cluster.5.diffx.peaks <- FindMarkers(
  object = final.atac.pruned,
  ident.1 = "5", 
  ident.2 = setdiff(to.do,"5"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.5.diffx.peaks)

wb <- createWorkbook("atac_diffx_peak_testing_results_cluster_2")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.5.diffx.peaks, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac_diffx_peak_testing_results_cluster_5.xlsx", overwrite = TRUE)

plot1 <- VlnPlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.5.diffx.peaks)[1],
  pt.size = 0.1,
  idents = c(as.character(c(0:6,8:15)))
)

plot2 <- FeaturePlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.5.diffx.peaks)[1],
  pt.size = 0.1,
  max.cutoff = 'q95'
)
plot3 <- plot1 + plot2
plot3
svg("atac_top_diffx_peak_cluster_5.svg",height=14)
print(plot3)
dev.off()

# cluster 6

Idents(final.atac.pruned) <- final.atac.pruned@meta.data$final.atac.clusters
atac.cluster.6.diffx.peaks <- FindMarkers(
  object = final.atac.pruned,
  ident.1 = "6", 
  ident.2 = setdiff(to.do,"6"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.6.diffx.peaks)

wb <- createWorkbook("atac_diffx_peak_testing_results_cluster_2")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.6.diffx.peaks, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac_diffx_peak_testing_results_cluster_6.xlsx", overwrite = TRUE)

plot1 <- VlnPlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.6.diffx.peaks)[1],
  pt.size = 0.1,
  idents = c(as.character(c(0:6,8:15)))
)

plot2 <- FeaturePlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.6.diffx.peaks)[1],
  pt.size = 0.1,
  max.cutoff = 'q95'
)
plot3 <- plot1 + plot2
plot3
svg("atac_top_diffx_peak_cluster_6.svg",height=14)
print(plot3)
dev.off()

# cluster 8

Idents(final.atac.pruned) <- final.atac.pruned@meta.data$final.atac.clusters
atac.cluster.8.diffx.peaks <- FindMarkers(
  object = final.atac.pruned,
  ident.1 = "8", 
  ident.2 = setdiff(to.do,"8"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.8.diffx.peaks)

wb <- createWorkbook("atac_diffx_peak_testing_results_cluster_2")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.8.diffx.peaks, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac_diffx_peak_testing_results_cluster_8.xlsx", overwrite = TRUE)

plot1 <- VlnPlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.8.diffx.peaks)[1],
  pt.size = 0.1,
  idents = c(as.character(c(0:6,8:15)))
)

plot2 <- FeaturePlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.8.diffx.peaks)[1],
  pt.size = 0.1,
  max.cutoff = 'q95'
)
plot3 <- plot1 + plot2
plot3
svg("atac_top_diffx_peak_cluster_8.svg",height=14)
print(plot3)
dev.off()

# cluster 9

Idents(final.atac.pruned) <- final.atac.pruned@meta.data$final.atac.clusters
atac.cluster.9.diffx.peaks <- FindMarkers(
  object = final.atac.pruned,
  ident.1 = "9", 
  ident.2 = setdiff(to.do,"9"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.9.diffx.peaks)

wb <- createWorkbook("atac_diffx_peak_testing_results_cluster_2")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.9.diffx.peaks, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac_diffx_peak_testing_results_cluster_9.xlsx", overwrite = TRUE)

plot1 <- VlnPlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.9.diffx.peaks)[1],
  pt.size = 0.1,
  idents = c(as.character(c(0:6,8:15)))
)

plot2 <- FeaturePlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.9.diffx.peaks)[1],
  pt.size = 0.1,
  max.cutoff = 'q95'
)
plot3 <- plot1 + plot2
plot3
svg("atac_top_diffx_peak_cluster_9.svg",height=14)
print(plot3)
dev.off()

# cluster 10

Idents(final.atac.pruned) <- final.atac.pruned@meta.data$final.atac.clusters
atac.cluster.10.diffx.peaks <- FindMarkers(
  object = final.atac.pruned,
  ident.1 = "10", 
  ident.2 = setdiff(to.do,"10"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.10.diffx.peaks)

wb <- createWorkbook("atac_diffx_peak_testing_results_cluster_2")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.10.diffx.peaks, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac_diffx_peak_testing_results_cluster_10.xlsx", overwrite = TRUE)

plot1 <- VlnPlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.10.diffx.peaks)[1],
  pt.size = 0.1,
  idents = c(as.character(c(0:6,8:15)))
)

plot2 <- FeaturePlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.10.diffx.peaks)[1],
  pt.size = 0.1,
  max.cutoff = 'q95'
)
plot3 <- plot1 + plot2
plot3
svg("atac_top_diffx_peak_cluster_10.svg",height=14)
print(plot3)
dev.off()

# cluster 11

Idents(final.atac.pruned) <- final.atac.pruned@meta.data$final.atac.clusters
atac.cluster.11.diffx.peaks <- FindMarkers(
  object = final.atac.pruned,
  ident.1 = "11", 
  ident.2 = setdiff(to.do,"11"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.11.diffx.peaks)

wb <- createWorkbook("atac_diffx_peak_testing_results_cluster_2")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.11.diffx.peaks, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac_diffx_peak_testing_results_cluster_11.xlsx", overwrite = TRUE)

plot1 <- VlnPlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.11.diffx.peaks)[1],
  pt.size = 0.1,
  idents = c(as.character(c(0:6,8:15)))
)

plot2 <- FeaturePlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.11.diffx.peaks)[1],
  pt.size = 0.1,
  max.cutoff = 'q95'
)
plot3 <- plot1 + plot2
plot3
svg("atac_top_diffx_peak_cluster_11.svg",height=14)
print(plot3)
dev.off()

# cluster 12

Idents(final.atac.pruned) <- final.atac.pruned@meta.data$final.atac.clusters
atac.cluster.12.diffx.peaks <- FindMarkers(
  object = final.atac.pruned,
  ident.1 = "12", 
  ident.2 = setdiff(to.do,"12"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.12.diffx.peaks)

wb <- createWorkbook("atac_diffx_peak_testing_results_cluster_2")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.12.diffx.peaks, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac_diffx_peak_testing_results_cluster_12.xlsx", overwrite = TRUE)

plot1 <- VlnPlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.12.diffx.peaks)[1],
  pt.size = 0.1,
  idents = c(as.character(c(0:6,8:15)))
)

plot2 <- FeaturePlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.12.diffx.peaks)[1],
  pt.size = 0.1,
  max.cutoff = 'q95'
)
plot3 <- plot1 + plot2
plot3
svg("atac_top_diffx_peak_cluster_12.svg",height=14)
print(plot3)
dev.off()

# cluster 13

Idents(final.atac.pruned) <- final.atac.pruned@meta.data$final.atac.clusters
atac.cluster.13.diffx.peaks <- FindMarkers(
  object = final.atac.pruned,
  ident.1 = "13", 
  ident.2 = setdiff(to.do,"13"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.13.diffx.peaks)

wb <- createWorkbook("atac_diffx_peak_testing_results_cluster_2")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.13.diffx.peaks, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac_diffx_peak_testing_results_cluster_13.xlsx", overwrite = TRUE)

plot1 <- VlnPlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.13.diffx.peaks)[1],
  pt.size = 0.1,
  idents = c(as.character(c(0:6,8:15)))
)

plot2 <- FeaturePlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.13.diffx.peaks)[1],
  pt.size = 0.1,
  max.cutoff = 'q95'
)
plot3 <- plot1 + plot2
plot3
svg("atac_top_diffx_peak_cluster_13.svg",height=14)
print(plot3)
dev.off()

# cluster 14

Idents(final.atac.pruned) <- final.atac.pruned@meta.data$final.atac.clusters
atac.cluster.14.diffx.peaks <- FindMarkers(
  object = final.atac.pruned,
  ident.1 = "14", 
  ident.2 = setdiff(to.do,"14"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.14.diffx.peaks)

wb <- createWorkbook("atac_diffx_peak_testing_results_cluster_2")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.14.diffx.peaks, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac_diffx_peak_testing_results_cluster_14.xlsx", overwrite = TRUE)

plot1 <- VlnPlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.14.diffx.peaks)[1],
  pt.size = 0.1,
  idents = c(as.character(c(0:6,8:15)))
)

plot2 <- FeaturePlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.14.diffx.peaks)[1],
  pt.size = 0.1,
  max.cutoff = 'q95'
)
plot3 <- plot1 + plot2
plot3
svg("atac_top_diffx_peak_cluster_14.svg",height=14)
print(plot3)
dev.off()

# cluster 15

Idents(final.atac.pruned) <- final.atac.pruned@meta.data$final.atac.clusters
atac.cluster.15.diffx.peaks <- FindMarkers(
  object = final.atac.pruned,
  ident.1 = "15", 
  ident.2 = setdiff(to.do,"15"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'atac_peak_region_fragments'
)
head(atac.cluster.15.diffx.peaks)

wb <- createWorkbook("atac_diffx_peak_testing_results_cluster_2")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.15.diffx.peaks, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac_diffx_peak_testing_results_cluster_15.xlsx", overwrite = TRUE)

plot1 <- VlnPlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.15.diffx.peaks)[1],
  pt.size = 0.1,
  idents = c(as.character(c(0:6,8:15)))
)

plot2 <- FeaturePlot(
  object = final.atac.pruned,
  features = rownames(atac.cluster.15.diffx.peaks)[1],
  pt.size = 0.1,
  max.cutoff = 'q95'
)
plot3 <- plot1 + plot2
plot3
svg("atac_top_diffx_peak_cluster_15.svg",height=14)
print(plot3)
dev.off()

# genomic profile plotting

levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.0.diffx.peaks)[1],
  ncol = 1
)
svg("atac_top_diffx_peak_cluster_0_genomic_profile.svg")
levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.0.diffx.peaks)[1],
  ncol = 1
)
dev.off()

levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.1.diffx.peaks)[1],
  ncol = 1
)
svg("atac_top_diffx_peak_cluster_1_genomic_profile.svg")
levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.1.diffx.peaks)[1],
  ncol = 1
)
dev.off()

levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.2.diffx.peaks)[1],
  ncol = 1
)
svg("atac_top_diffx_peak_cluster_2_genomic_profile.svg")
levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.2.diffx.peaks)[1],
  ncol = 1
)
dev.off()

levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.3.diffx.peaks)[1],
  ncol = 1
)
svg("atac_top_diffx_peak_cluster_3_genomic_profile.svg")
levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.3.diffx.peaks)[1],
  ncol = 1
)
dev.off()

levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.4.diffx.peaks)[1],
  ncol = 1
)
svg("atac_top_diffx_peak_cluster_4_genomic_profile.svg")
levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.4.diffx.peaks)[1],
  ncol = 1
)
dev.off()

levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.5.diffx.peaks)[1],
  ncol = 1
)
svg("atac_top_diffx_peak_cluster_5_genomic_profile.svg")
levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.5.diffx.peaks)[1],
  ncol = 1
)
dev.off()

levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.6.diffx.peaks)[1],
  ncol = 1
)
svg("atac_top_diffx_peak_cluster_6_genomic_profile.svg")
levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.6.diffx.peaks)[1],
  ncol = 1
)
dev.off()

levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.8.diffx.peaks)[1],
  ncol = 1
)
svg("atac_top_diffx_peak_cluster_8_genomic_profile.svg")
levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.8.diffx.peaks)[1],
  ncol = 1
)
dev.off()

levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.9.diffx.peaks)[1],
  ncol = 1
)
svg("atac_top_diffx_peak_cluster_9_genomic_profile.svg")
levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.9.diffx.peaks)[1],
  ncol = 1
)
dev.off()

levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.10.diffx.peaks)[1],
  ncol = 1
)
svg("atac_top_diffx_peak_cluster_10_genomic_profile.svg")
levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.10.diffx.peaks)[1],
  ncol = 1
)
dev.off()

levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.11.diffx.peaks)[1],
  ncol = 1
)
svg("atac_top_diffx_peak_cluster_11_genomic_profile.svg")
levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.11.diffx.peaks)[1],
  ncol = 1
)
dev.off()

levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.12.diffx.peaks)[1],
  ncol = 1
)
svg("atac_top_diffx_peak_cluster_12_genomic_profile.svg")
levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.12.diffx.peaks)[1],
  ncol = 1
)
dev.off()

levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.13.diffx.peaks)[1],
  ncol = 1
)
svg("atac_top_diffx_peak_cluster_13_genomic_profile.svg")
levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.13.diffx.peaks)[1],
  ncol = 1
)
dev.off()

levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.14.diffx.peaks)[1],
  ncol = 1
)
svg("atac_top_diffx_peak_cluster_14_genomic_profile.svg")
levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.14.diffx.peaks)[1],
  ncol = 1
)
dev.off()

levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.15.diffx.peaks)[1],
  ncol = 1
)
svg("atac_top_diffx_peak_cluster_15_genomic_profile.svg")
levels(final.atac.pruned) <- to.do
CoveragePlot(
  object = final.atac.pruned,
  region = rownames(atac.cluster.15.diffx.peaks)[1],
  ncol = 1
)
dev.off()

saveRDS(object = final.atac.pruned, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/final.atac.pruned.rds")

saveRDS(object = atac.cluster.0.diffx.peaks, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.0.diffx.peaks.rds")
saveRDS(object = atac.cluster.1.diffx.peaks, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.1.diffx.peaks.rds")
saveRDS(object = atac.cluster.2.diffx.peaks, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.2.diffx.peaks.rds")
saveRDS(object = atac.cluster.3.diffx.peaks, file =  "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.3.diffx.peaks.rds")
saveRDS(object = atac.cluster.4.diffx.peaks, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.4.diffx.peaks.rds")
saveRDS(object = atac.cluster.5.diffx.peaks, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.5.diffx.peaks.rds")
saveRDS(object = atac.cluster.6.diffx.peaks, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.6.diffx.peaks.rds")
saveRDS(object = atac.cluster.8.diffx.peaks, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.8.diffx.peaks.rds")
saveRDS(object = atac.cluster.9.diffx.peaks, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.9.diffx.peaks.rds")
saveRDS(object = atac.cluster.10.diffx.peaks, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.10.diffx.peaks.rds")
saveRDS(object = atac.cluster.11.diffx.peaks, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.11.diffx.peaks.rds")
saveRDS(object = atac.cluster.12.diffx.peaks, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.12.diffx.peaks.rds")
saveRDS(object = atac.cluster.13.diffx.peaks, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.13.diffx.peaks.rds")
saveRDS(object = atac.cluster.14.diffx.peaks, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.14.diffx.peaks.rds")
saveRDS(object = atac.cluster.15.diffx.peaks, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.15.diffx.peaks.rds")

#------------------------------------------------------------------------------
# Overrepresented motif analysis
# https://stuartlab.org/signac/articles/motif_vignette.html#adding-motif-information-to-the-seurat-object
#------------------------------------------------------------------------------

set.seed(1234)

final.atac.pruned <- readRDS("/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/final.atac.pruned.rds")
DimPlot(final.atac.pruned, label = TRUE, pt.size = 0.1)

# extract motif scoring matrix

pfm <- getMatrixSet(
  x = JASPAR2020,
  opts = list(collection = "CORE", tax_group = 'vertebrates', all_versions = FALSE)
)

# remove non standard chromosomes

final.atac.matrix.analysis <- final.atac.pruned
gr <- granges(final.atac.matrix.analysis)
seq_keep <- seqnames(gr) %in% seqnames(BSgenome.Mmusculus.UCSC.mm10) 
seq_keep <- as.vector(seq_keep)
feat.keep <- GRangesToString(grange = gr[seq_keep])
final.atac.matrix.analysis[['ATAC']] <- subset(final.atac.matrix.analysis[["ATAC"]], features = feat.keep)

# add motif information

final.atac.matrix.analysis <- AddMotifs(
  object = final.atac.matrix.analysis,
  genome = BSgenome.Mmusculus.UCSC.mm10,
  pfm = pfm
)

saveRDS(final.atac.matrix.analysis,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/final.atac.matrix.analysis.rds")

# find open peaks

open.peaks <- AccessiblePeaks(final.atac.matrix.analysis, idents = as.character(c(0:6,8:15)))

saveRDS(open.peaks,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/open.peaks.rds")

# test for diffx peaks per cluster, up only

# cluster 0

# test

Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$final.atac.clusters
atac.cluster.0.diffx.peaks.up.only <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = "0", 
  ident.2 = setdiff(to.do,"0"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'nCount_ATAC',
  only.pos = TRUE
)

saveRDS(atac.cluster.0.diffx.peaks.up.only,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.0.diffx.peaks.up.only.rds")

wb <- createWorkbook("atac.cluster.0.diffx.peaks.up.only")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.0.diffx.peaks.up.only, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.0.diffx.peaks.up.only.xlsx", overwrite = TRUE)

# filter

atac.cluster.0.diffx.peaks.up.only.filtered <- rownames(atac.cluster.0.diffx.peaks.up.only[atac.cluster.0.diffx.peaks.up.only$p_val < 0.005, ])

saveRDS(atac.cluster.0.diffx.peaks.up.only.filtered,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.0.diffx.peaks.up.only.filtered.rds")

wb <- createWorkbook("atac.cluster.0.diffx.peaks.up.only.filtered")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.0.diffx.peaks.up.only.filtered, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.0.diffx.peaks.up.only.filtered.xlsx", overwrite = TRUE)

# match the overall GC content in the peak set

meta.feature.cluster.0 <- GetAssayData(final.atac.matrix.analysis, assay = "ATAC", slot = "meta.features")

saveRDS(meta.feature.cluster.0,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/meta.feature.cluster.0.rds")

peaks.matched.cluster.0 <- MatchRegionStats(
  meta.feature = meta.feature.cluster.0[open.peaks, ],
  query.feature = meta.feature.cluster.0[atac.cluster.0.diffx.peaks.up.only.filtered, ],
  n = 50000
)

saveRDS(peaks.matched.cluster.0,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/peaks.matched.cluster.0.rds")

# test enrichment

enriched.motifs.cluster.0 <- FindMotifs(
  object = final.atac.matrix.analysis,
  features = atac.cluster.0.diffx.peaks.up.only.filtered,
  background=peaks.matched.cluster.0
)

saveRDS(enriched.motifs.cluster.0,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/enriched.motifs.cluster.0.rds")

# plot

plot1 <- MotifPlot(
  object = final.atac.matrix.analysis,
  motifs = head(rownames(enriched.motifs))
)
plot1

svg("atac_top_enriched_filtered_motifs_cluster_0.svg",width=20)
print(plot1)
dev.off()

# cluster 1

# test

Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$final.atac.clusters
atac.cluster.1.diffx.peaks.up.only <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = "1", 
  ident.2 = setdiff(to.do,"1"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'nCount_ATAC',
  only.pos = TRUE
)

saveRDS(atac.cluster.1.diffx.peaks.up.only,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.1.diffx.peaks.up.only.rds")

wb <- createWorkbook("atac.cluster.1.diffx.peaks.up.only")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.1.diffx.peaks.up.only, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.1.diffx.peaks.up.only.xlsx", overwrite = TRUE)

# filter

atac.cluster.1.diffx.peaks.up.only.filtered <- rownames(atac.cluster.1.diffx.peaks.up.only[atac.cluster.1.diffx.peaks.up.only$p_val < 0.05, ])

saveRDS(atac.cluster.1.diffx.peaks.up.only.filtered,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.1.diffx.peaks.up.only.filtered.rds")

wb <- createWorkbook("atac.cluster.1.diffx.peaks.up.only.filtered")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.1.diffx.peaks.up.only.filtered, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.1.diffx.peaks.up.only.filtered.xlsx", overwrite = TRUE)

# match the overall GC content in the peak set

meta.feature.cluster.1 <- GetAssayData(final.atac.matrix.analysis, assay = "ATAC", slot = "meta.features")

saveRDS(meta.feature.cluster.1,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/meta.feature.cluster.1.rds")

peaks.matched.cluster.1 <- MatchRegionStats(
  meta.feature = meta.feature.cluster.1[open.peaks, ],
  query.feature = meta.feature.cluster.1[atac.cluster.1.diffx.peaks.up.only.filtered, ],
  n = 50000
)

saveRDS(peaks.matched.cluster.1,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/peaks.matched.cluster.1.rds")

# test enrichment

enriched.motifs.cluster.1 <- FindMotifs(
  object = final.atac.matrix.analysis,
  features = atac.cluster.1.diffx.peaks.up.only.filtered,
  background=peaks.matched.cluster.1
)

saveRDS(enriched.motifs.cluster.1,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/enriched.motifs.cluster.1.rds")

# plot

plot1 <- MotifPlot(
  object = final.atac.matrix.analysis,
  motifs = head(rownames(enriched.motifs))
)
plot1

svg("atac_top_enriched_filtered_motifs_cluster_1.svg",width=20)
print(plot1)
dev.off()

# cluster 2

# test

Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$final.atac.clusters
atac.cluster.2.diffx.peaks.up.only <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = "2", 
  ident.2 = setdiff(to.do,"2"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'nCount_ATAC',
  only.pos = TRUE
)

saveRDS(atac.cluster.2.diffx.peaks.up.only,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.2.diffx.peaks.up.only.rds")

wb <- createWorkbook("atac.cluster.2.diffx.peaks.up.only")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.2.diffx.peaks.up.only, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.2.diffx.peaks.up.only.xlsx", overwrite = TRUE)

# filter

atac.cluster.2.diffx.peaks.up.only.filtered <- rownames(atac.cluster.2.diffx.peaks.up.only[atac.cluster.2.diffx.peaks.up.only$p_val < 0.05, ])

saveRDS(atac.cluster.2.diffx.peaks.up.only.filtered,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.2.diffx.peaks.up.only.filtered.rds")

wb <- createWorkbook("atac.cluster.2.diffx.peaks.up.only.filtered")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.2.diffx.peaks.up.only.filtered, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.2.diffx.peaks.up.only.filtered.xlsx", overwrite = TRUE)

# match the overall GC content in the peak set

meta.feature.cluster.2 <- GetAssayData(final.atac.matrix.analysis, assay = "ATAC", slot = "meta.features")

saveRDS(meta.feature.cluster.2,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/meta.feature.cluster.2.rds")

peaks.matched.cluster.2 <- MatchRegionStats(
  meta.feature = meta.feature.cluster.2[open.peaks, ],
  query.feature = meta.feature.cluster.2[atac.cluster.2.diffx.peaks.up.only.filtered, ],
  n = 50000
)

saveRDS(peaks.matched.cluster.2,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/peaks.matched.cluster.2.rds")

# test enrichment

enriched.motifs.cluster.2 <- FindMotifs(
  object = final.atac.matrix.analysis,
  features = atac.cluster.2.diffx.peaks.up.only.filtered,
  background=peaks.matched.cluster.2
)

saveRDS(enriched.motifs.cluster.2,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/enriched.motifs.cluster.2.rds")

# plot

plot1 <- MotifPlot(
  object = final.atac.matrix.analysis,
  motifs = head(rownames(enriched.motifs))
)
plot1

svg("atac_top_enriched_filtered_motifs_cluster_2.svg",width=20)
print(plot1)
dev.off()

# cluster 3

# test

Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$final.atac.clusters
atac.cluster.3.diffx.peaks.up.only <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = "3", 
  ident.2 = setdiff(to.do,"3"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'nCount_ATAC',
  only.pos = TRUE
)

saveRDS(atac.cluster.3.diffx.peaks.up.only,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.3.diffx.peaks.up.only.rds")

wb <- createWorkbook("atac.cluster.3.diffx.peaks.up.only")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.3.diffx.peaks.up.only, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.3.diffx.peaks.up.only.xlsx", overwrite = TRUE)

# filter

atac.cluster.3.diffx.peaks.up.only.filtered <- rownames(atac.cluster.3.diffx.peaks.up.only[atac.cluster.3.diffx.peaks.up.only$p_val < 0.05, ])

saveRDS(atac.cluster.3.diffx.peaks.up.only.filtered,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.3.diffx.peaks.up.only.filtered.rds")

wb <- createWorkbook("atac.cluster.3.diffx.peaks.up.only.filtered")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.3.diffx.peaks.up.only.filtered, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.3.diffx.peaks.up.only.filtered.xlsx", overwrite = TRUE)

# match the overall GC content in the peak set

meta.feature.cluster.3 <- GetAssayData(final.atac.matrix.analysis, assay = "ATAC", slot = "meta.features")

saveRDS(meta.feature.cluster.3,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/meta.feature.cluster.3.rds")

peaks.matched.cluster.3 <- MatchRegionStats(
  meta.feature = meta.feature.cluster.3[open.peaks, ],
  query.feature = meta.feature.cluster.3[atac.cluster.3.diffx.peaks.up.only.filtered, ],
  n = 50000
)

saveRDS(peaks.matched.cluster.3,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/peaks.matched.cluster.3.rds")

# test enrichment

enriched.motifs.cluster.3 <- FindMotifs(
  object = final.atac.matrix.analysis,
  features = atac.cluster.3.diffx.peaks.up.only.filtered,
  background=peaks.matched.cluster.3
)

saveRDS(enriched.motifs.cluster.3,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/enriched.motifs.cluster.3.rds")

# plot

plot1 <- MotifPlot(
  object = final.atac.matrix.analysis,
  motifs = head(rownames(enriched.motifs))
)
plot1

svg("atac_top_enriched_filtered_motifs_cluster_3.svg",width=20)
print(plot1)
dev.off()

# cluster 4

# test

Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$final.atac.clusters
atac.cluster.4.diffx.peaks.up.only <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = "4", 
  ident.2 = setdiff(to.do,"4"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'nCount_ATAC',
  only.pos = TRUE
)

saveRDS(atac.cluster.4.diffx.peaks.up.only,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.4.diffx.peaks.up.only.rds")

wb <- createWorkbook("atac.cluster.4.diffx.peaks.up.only")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.4.diffx.peaks.up.only, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.4.diffx.peaks.up.only.xlsx", overwrite = TRUE)

# filter

atac.cluster.4.diffx.peaks.up.only.filtered <- rownames(atac.cluster.4.diffx.peaks.up.only[atac.cluster.4.diffx.peaks.up.only$p_val < 0.05, ])

saveRDS(atac.cluster.4.diffx.peaks.up.only.filtered,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.4.diffx.peaks.up.only.filtered.rds")

wb <- createWorkbook("atac.cluster.4.diffx.peaks.up.only.filtered")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.4.diffx.peaks.up.only.filtered, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.4.diffx.peaks.up.only.filtered.xlsx", overwrite = TRUE)

# match the overall GC content in the peak set

meta.feature.cluster.4 <- GetAssayData(final.atac.matrix.analysis, assay = "ATAC", slot = "meta.features")

saveRDS(meta.feature.cluster.4,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/meta.feature.cluster.4.rds")

peaks.matched.cluster.4 <- MatchRegionStats(
  meta.feature = meta.feature.cluster.4[open.peaks, ],
  query.feature = meta.feature.cluster.4[atac.cluster.4.diffx.peaks.up.only.filtered, ],
  n = 50000
)

saveRDS(peaks.matched.cluster.4,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/peaks.matched.cluster.4.rds")

# test enrichment

enriched.motifs.cluster.4 <- FindMotifs(
  object = final.atac.matrix.analysis,
  features = atac.cluster.4.diffx.peaks.up.only.filtered,
  background=peaks.matched.cluster.4
)

saveRDS(enriched.motifs.cluster.4,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/enriched.motifs.cluster.4.rds")

# plot

plot1 <- MotifPlot(
  object = final.atac.matrix.analysis,
  motifs = head(rownames(enriched.motifs))
)
plot1

svg("atac_top_enriched_filtered_motifs_cluster_4.svg",width=20)
print(plot1)
dev.off()

# cluster 5

# test

Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$final.atac.clusters
atac.cluster.5.diffx.peaks.up.only <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = "5", 
  ident.2 = setdiff(to.do,"5"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'nCount_ATAC',
  only.pos = TRUE
)

saveRDS(atac.cluster.5.diffx.peaks.up.only,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.5.diffx.peaks.up.only.rds")

wb <- createWorkbook("atac.cluster.5.diffx.peaks.up.only")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.5.diffx.peaks.up.only, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.5.diffx.peaks.up.only.xlsx", overwrite = TRUE)

# filter

atac.cluster.5.diffx.peaks.up.only.filtered <- rownames(atac.cluster.5.diffx.peaks.up.only[atac.cluster.5.diffx.peaks.up.only$p_val < 0.05, ])

saveRDS(atac.cluster.5.diffx.peaks.up.only.filtered,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.5.diffx.peaks.up.only.filtered.rds")

wb <- createWorkbook("atac.cluster.5.diffx.peaks.up.only.filtered")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.5.diffx.peaks.up.only.filtered, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.5.diffx.peaks.up.only.filtered.xlsx", overwrite = TRUE)

# match the overall GC content in the peak set

meta.feature.cluster.5 <- GetAssayData(final.atac.matrix.analysis, assay = "ATAC", slot = "meta.features")

saveRDS(meta.feature.cluster.5,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/meta.feature.cluster.5.rds")

peaks.matched.cluster.5 <- MatchRegionStats(
  meta.feature = meta.feature.cluster.5[open.peaks, ],
  query.feature = meta.feature.cluster.5[atac.cluster.5.diffx.peaks.up.only.filtered, ],
  n = 50000
)

saveRDS(peaks.matched.cluster.5,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/peaks.matched.cluster.5.rds")

# test enrichment

enriched.motifs.cluster.5 <- FindMotifs(
  object = final.atac.matrix.analysis,
  features = atac.cluster.5.diffx.peaks.up.only.filtered,
  background=peaks.matched.cluster.5
)

saveRDS(enriched.motifs.cluster.5,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/enriched.motifs.cluster.5.rds")

# plot

plot1 <- MotifPlot(
  object = final.atac.matrix.analysis,
  motifs = head(rownames(enriched.motifs))
)
plot1

svg("atac_top_enriched_filtered_motifs_cluster_5.svg",width=20)
print(plot1)
dev.off()

# cluster 6

# test

Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$final.atac.clusters
atac.cluster.6.diffx.peaks.up.only <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = "6", 
  ident.2 = setdiff(to.do,"6"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'nCount_ATAC',
  only.pos = TRUE
)

saveRDS(atac.cluster.6.diffx.peaks.up.only,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.6.diffx.peaks.up.only.rds")

wb <- createWorkbook("atac.cluster.6.diffx.peaks.up.only")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.6.diffx.peaks.up.only, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.6.diffx.peaks.up.only.xlsx", overwrite = TRUE)

# filter

atac.cluster.6.diffx.peaks.up.only.filtered <- rownames(atac.cluster.6.diffx.peaks.up.only[atac.cluster.6.diffx.peaks.up.only$p_val < 0.05, ])

saveRDS(atac.cluster.6.diffx.peaks.up.only.filtered,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.6.diffx.peaks.up.only.filtered.rds")

wb <- createWorkbook("atac.cluster.6.diffx.peaks.up.only.filtered")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.6.diffx.peaks.up.only.filtered, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.6.diffx.peaks.up.only.filtered.xlsx", overwrite = TRUE)

# match the overall GC content in the peak set

meta.feature.cluster.6 <- GetAssayData(final.atac.matrix.analysis, assay = "ATAC", slot = "meta.features")

saveRDS(meta.feature.cluster.6,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/meta.feature.cluster.6.rds")

peaks.matched.cluster.6 <- MatchRegionStats(
  meta.feature = meta.feature.cluster.6[open.peaks, ],
  query.feature = meta.feature.cluster.6[atac.cluster.6.diffx.peaks.up.only.filtered, ],
  n = 50000
)

saveRDS(peaks.matched.cluster.6,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/peaks.matched.cluster.6.rds")

# test enrichment

enriched.motifs.cluster.6 <- FindMotifs(
  object = final.atac.matrix.analysis,
  features = atac.cluster.6.diffx.peaks.up.only.filtered,
  background=peaks.matched.cluster.6
)

saveRDS(enriched.motifs.cluster.6,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/enriched.motifs.cluster.6.rds")

# plot

plot1 <- MotifPlot(
  object = final.atac.matrix.analysis,
  motifs = head(rownames(enriched.motifs))
)
plot1

svg("atac_top_enriched_filtered_motifs_cluster_6.svg",width=20)
print(plot1)
dev.off()

# cluster 8

# test

Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$final.atac.clusters
atac.cluster.8.diffx.peaks.up.only <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = "8", 
  ident.2 = setdiff(to.do,"8"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'nCount_ATAC',
  only.pos = TRUE
)

saveRDS(atac.cluster.8.diffx.peaks.up.only,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.8.diffx.peaks.up.only.rds")

wb <- createWorkbook("atac.cluster.8.diffx.peaks.up.only")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.8.diffx.peaks.up.only, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.8.diffx.peaks.up.only.xlsx", overwrite = TRUE)

# filter

atac.cluster.8.diffx.peaks.up.only.filtered <- rownames(atac.cluster.8.diffx.peaks.up.only[atac.cluster.8.diffx.peaks.up.only$p_val < 0.05, ])

saveRDS(atac.cluster.8.diffx.peaks.up.only.filtered,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.8.diffx.peaks.up.only.filtered.rds")

wb <- createWorkbook("atac.cluster.8.diffx.peaks.up.only.filtered")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.8.diffx.peaks.up.only.filtered, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.8.diffx.peaks.up.only.filtered.xlsx", overwrite = TRUE)

# match the overall GC content in the peak set

meta.feature.cluster.8 <- GetAssayData(final.atac.matrix.analysis, assay = "ATAC", slot = "meta.features")

saveRDS(meta.feature.cluster.8,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/meta.feature.cluster.8.rds")

peaks.matched.cluster.8 <- MatchRegionStats(
  meta.feature = meta.feature.cluster.8[open.peaks, ],
  query.feature = meta.feature.cluster.8[atac.cluster.8.diffx.peaks.up.only.filtered, ],
  n = 50000
)

saveRDS(peaks.matched.cluster.8,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/peaks.matched.cluster.8.rds")

# test enrichment

enriched.motifs.cluster.8 <- FindMotifs(
  object = final.atac.matrix.analysis,
  features = atac.cluster.8.diffx.peaks.up.only.filtered,
  background=peaks.matched.cluster.8
)

saveRDS(enriched.motifs.cluster.8,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/enriched.motifs.cluster.8.rds")

# plot

plot1 <- MotifPlot(
  object = final.atac.matrix.analysis,
  motifs = head(rownames(enriched.motifs))
)
plot1

svg("atac_top_enriched_filtered_motifs_cluster_8.svg",width=20)
print(plot1)
dev.off()

# cluster 9

# test

Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$final.atac.clusters
atac.cluster.9.diffx.peaks.up.only <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = "9", 
  ident.2 = setdiff(to.do,"9"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'nCount_ATAC',
  only.pos = TRUE
)

saveRDS(atac.cluster.9.diffx.peaks.up.only,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.9.diffx.peaks.up.only.rds")

wb <- createWorkbook("atac.cluster.9.diffx.peaks.up.only")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.9.diffx.peaks.up.only, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.9.diffx.peaks.up.only.xlsx", overwrite = TRUE)

# filter

atac.cluster.9.diffx.peaks.up.only.filtered <- rownames(atac.cluster.9.diffx.peaks.up.only[atac.cluster.9.diffx.peaks.up.only$p_val < 0.05, ])

saveRDS(atac.cluster.9.diffx.peaks.up.only.filtered,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.9.diffx.peaks.up.only.filtered.rds")

wb <- createWorkbook("atac.cluster.9.diffx.peaks.up.only.filtered")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.9.diffx.peaks.up.only.filtered, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.9.diffx.peaks.up.only.filtered.xlsx", overwrite = TRUE)

# match the overall GC content in the peak set

meta.feature.cluster.9 <- GetAssayData(final.atac.matrix.analysis, assay = "ATAC", slot = "meta.features")

saveRDS(meta.feature.cluster.9,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/meta.feature.cluster.9.rds")

peaks.matched.cluster.9 <- MatchRegionStats(
  meta.feature = meta.feature.cluster.9[open.peaks, ],
  query.feature = meta.feature.cluster.9[atac.cluster.9.diffx.peaks.up.only.filtered, ],
  n = 50000
)

saveRDS(peaks.matched.cluster.9,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/peaks.matched.cluster.9.rds")

# test enrichment

enriched.motifs.cluster.9 <- FindMotifs(
  object = final.atac.matrix.analysis,
  features = atac.cluster.9.diffx.peaks.up.only.filtered,
  background=peaks.matched.cluster.9
)

saveRDS(enriched.motifs.cluster.9,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/enriched.motifs.cluster.9.rds")

# plot

plot1 <- MotifPlot(
  object = final.atac.matrix.analysis,
  motifs = head(rownames(enriched.motifs))
)
plot1

svg("atac_top_enriched_filtered_motifs_cluster_9.svg",width=20)
print(plot1)
dev.off()

# cluster 10

# test

Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$final.atac.clusters
atac.cluster.10.diffx.peaks.up.only <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = "10", 
  ident.2 = setdiff(to.do,"10"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'nCount_ATAC',
  only.pos = TRUE
)

saveRDS(atac.cluster.10.diffx.peaks.up.only,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.10.diffx.peaks.up.only.rds")

wb <- createWorkbook("atac.cluster.10.diffx.peaks.up.only")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.10.diffx.peaks.up.only, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.10.diffx.peaks.up.only.xlsx", overwrite = TRUE)

# filter

atac.cluster.10.diffx.peaks.up.only.filtered <- rownames(atac.cluster.10.diffx.peaks.up.only[atac.cluster.10.diffx.peaks.up.only$p_val < 0.05, ])

saveRDS(atac.cluster.10.diffx.peaks.up.only.filtered,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.10.diffx.peaks.up.only.filtered.rds")

wb <- createWorkbook("atac.cluster.10.diffx.peaks.up.only.filtered")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.10.diffx.peaks.up.only.filtered, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.10.diffx.peaks.up.only.filtered.xlsx", overwrite = TRUE)

# match the overall GC content in the peak set

meta.feature.cluster.10 <- GetAssayData(final.atac.matrix.analysis, assay = "ATAC", slot = "meta.features")

saveRDS(meta.feature.cluster.10,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/meta.feature.cluster.10.rds")

peaks.matched.cluster.10 <- MatchRegionStats(
  meta.feature = meta.feature.cluster.10[open.peaks, ],
  query.feature = meta.feature.cluster.10[atac.cluster.10.diffx.peaks.up.only.filtered, ],
  n = 50000
)

saveRDS(peaks.matched.cluster.10,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/peaks.matched.cluster.10.rds")

# test enrichment

enriched.motifs.cluster.10 <- FindMotifs(
  object = final.atac.matrix.analysis,
  features = atac.cluster.10.diffx.peaks.up.only.filtered,
  background=peaks.matched.cluster.10
)

saveRDS(enriched.motifs.cluster.10,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/enriched.motifs.cluster.10.rds")

# plot

plot1 <- MotifPlot(
  object = final.atac.matrix.analysis,
  motifs = head(rownames(enriched.motifs))
)
plot1

svg("atac_top_enriched_filtered_motifs_cluster_10.svg",width=20)
print(plot1)
dev.off()

# cluster 11

# test

Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$final.atac.clusters
atac.cluster.11.diffx.peaks.up.only <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = "11", 
  ident.2 = setdiff(to.do,"11"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'nCount_ATAC',
  only.pos = TRUE
)

saveRDS(atac.cluster.11.diffx.peaks.up.only,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.11.diffx.peaks.up.only.rds")

wb <- createWorkbook("atac.cluster.11.diffx.peaks.up.only")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.11.diffx.peaks.up.only, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.11.diffx.peaks.up.only.xlsx", overwrite = TRUE)

# filter

atac.cluster.11.diffx.peaks.up.only.filtered <- rownames(atac.cluster.11.diffx.peaks.up.only[atac.cluster.11.diffx.peaks.up.only$p_val < 0.05, ])

saveRDS(atac.cluster.11.diffx.peaks.up.only.filtered,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.11.diffx.peaks.up.only.filtered.rds")

wb <- createWorkbook("atac.cluster.11.diffx.peaks.up.only.filtered")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.11.diffx.peaks.up.only.filtered, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.11.diffx.peaks.up.only.filtered.xlsx", overwrite = TRUE)

# match the overall GC content in the peak set

meta.feature.cluster.11 <- GetAssayData(final.atac.matrix.analysis, assay = "ATAC", slot = "meta.features")

saveRDS(meta.feature.cluster.11,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/meta.feature.cluster.11.rds")

peaks.matched.cluster.11 <- MatchRegionStats(
  meta.feature = meta.feature.cluster.11[open.peaks, ],
  query.feature = meta.feature.cluster.11[atac.cluster.11.diffx.peaks.up.only.filtered, ],
  n = 50000
)

saveRDS(peaks.matched.cluster.11,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/peaks.matched.cluster.11.rds")

# test enrichment

enriched.motifs.cluster.11 <- FindMotifs(
  object = final.atac.matrix.analysis,
  features = atac.cluster.11.diffx.peaks.up.only.filtered,
  background=peaks.matched.cluster.11
)

saveRDS(enriched.motifs.cluster.11,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/enriched.motifs.cluster.11.rds")

# plot

plot1 <- MotifPlot(
  object = final.atac.matrix.analysis,
  motifs = head(rownames(enriched.motifs))
)
plot1

svg("atac_top_enriched_filtered_motifs_cluster_11.svg",width=20)
print(plot1)
dev.off()

# cluster 12

# test

Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$final.atac.clusters
atac.cluster.12.diffx.peaks.up.only <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = "12", 
  ident.2 = setdiff(to.do,"12"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'nCount_ATAC',
  only.pos = TRUE
)

saveRDS(atac.cluster.12.diffx.peaks.up.only,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.12.diffx.peaks.up.only.rds")

wb <- createWorkbook("atac.cluster.12.diffx.peaks.up.only")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.12.diffx.peaks.up.only, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.12.diffx.peaks.up.only.xlsx", overwrite = TRUE)

# filter

atac.cluster.12.diffx.peaks.up.only.filtered <- rownames(atac.cluster.12.diffx.peaks.up.only[atac.cluster.12.diffx.peaks.up.only$p_val < 0.05, ])

saveRDS(atac.cluster.12.diffx.peaks.up.only.filtered,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.12.diffx.peaks.up.only.filtered.rds")

wb <- createWorkbook("atac.cluster.12.diffx.peaks.up.only.filtered")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.12.diffx.peaks.up.only.filtered, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.12.diffx.peaks.up.only.filtered.xlsx", overwrite = TRUE)

# match the overall GC content in the peak set

meta.feature.cluster.12 <- GetAssayData(final.atac.matrix.analysis, assay = "ATAC", slot = "meta.features")

saveRDS(meta.feature.cluster.12,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/meta.feature.cluster.12.rds")

peaks.matched.cluster.12 <- MatchRegionStats(
  meta.feature = meta.feature.cluster.12[open.peaks, ],
  query.feature = meta.feature.cluster.12[atac.cluster.12.diffx.peaks.up.only.filtered, ],
  n = 50000
)

saveRDS(peaks.matched.cluster.12,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/peaks.matched.cluster.12.rds")

# test enrichment

enriched.motifs.cluster.12 <- FindMotifs(
  object = final.atac.matrix.analysis,
  features = atac.cluster.12.diffx.peaks.up.only.filtered,
  background=peaks.matched.cluster.12
)

saveRDS(enriched.motifs.cluster.12,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/enriched.motifs.cluster.12.rds")

# plot

plot1 <- MotifPlot(
  object = final.atac.matrix.analysis,
  motifs = head(rownames(enriched.motifs))
)
plot1

svg("atac_top_enriched_filtered_motifs_cluster_12.svg",width=20)
print(plot1)
dev.off()

# cluster 13

# test

Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$final.atac.clusters
atac.cluster.13.diffx.peaks.up.only <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = "13", 
  ident.2 = setdiff(to.do,"13"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'nCount_ATAC',
  only.pos = TRUE
)

saveRDS(atac.cluster.13.diffx.peaks.up.only,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.13.diffx.peaks.up.only.rds")

wb <- createWorkbook("atac.cluster.13.diffx.peaks.up.only")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.13.diffx.peaks.up.only, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.13.diffx.peaks.up.only.xlsx", overwrite = TRUE)

# filter

atac.cluster.13.diffx.peaks.up.only.filtered <- rownames(atac.cluster.13.diffx.peaks.up.only[atac.cluster.13.diffx.peaks.up.only$p_val < 0.05, ])

saveRDS(atac.cluster.13.diffx.peaks.up.only.filtered,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.13.diffx.peaks.up.only.filtered.rds")

wb <- createWorkbook("atac.cluster.13.diffx.peaks.up.only.filtered")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.13.diffx.peaks.up.only.filtered, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.13.diffx.peaks.up.only.filtered.xlsx", overwrite = TRUE)

# match the overall GC content in the peak set

meta.feature.cluster.13 <- GetAssayData(final.atac.matrix.analysis, assay = "ATAC", slot = "meta.features")

saveRDS(meta.feature.cluster.13,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/meta.feature.cluster.13.rds")

peaks.matched.cluster.13 <- MatchRegionStats(
  meta.feature = meta.feature.cluster.13[open.peaks, ],
  query.feature = meta.feature.cluster.13[atac.cluster.13.diffx.peaks.up.only.filtered, ],
  n = 50000
)

saveRDS(peaks.matched.cluster.13,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/peaks.matched.cluster.13.rds")

# test enrichment

enriched.motifs.cluster.13 <- FindMotifs(
  object = final.atac.matrix.analysis,
  features = atac.cluster.13.diffx.peaks.up.only.filtered,
  background=peaks.matched.cluster.13
)

saveRDS(enriched.motifs.cluster.13,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/enriched.motifs.cluster.13.rds")

# plot

plot1 <- MotifPlot(
  object = final.atac.matrix.analysis,
  motifs = head(rownames(enriched.motifs))
)
plot1

svg("atac_top_enriched_filtered_motifs_cluster_13.svg",width=20)
print(plot1)
dev.off()

# cluster 14

# test

Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$final.atac.clusters
atac.cluster.14.diffx.peaks.up.only <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = "14", 
  ident.2 = setdiff(to.do,"14"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'nCount_ATAC',
  only.pos = TRUE
)

saveRDS(atac.cluster.14.diffx.peaks.up.only,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.14.diffx.peaks.up.only.rds")

wb <- createWorkbook("atac.cluster.14.diffx.peaks.up.only")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.14.diffx.peaks.up.only, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.14.diffx.peaks.up.only.xlsx", overwrite = TRUE)

# filter

atac.cluster.14.diffx.peaks.up.only.filtered <- rownames(atac.cluster.14.diffx.peaks.up.only[atac.cluster.14.diffx.peaks.up.only$p_val < 0.05, ])

saveRDS(atac.cluster.14.diffx.peaks.up.only.filtered,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.14.diffx.peaks.up.only.filtered.rds")

wb <- createWorkbook("atac.cluster.14.diffx.peaks.up.only.filtered")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.14.diffx.peaks.up.only.filtered, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.14.diffx.peaks.up.only.filtered.xlsx", overwrite = TRUE)

# match the overall GC content in the peak set

meta.feature.cluster.14 <- GetAssayData(final.atac.matrix.analysis, assay = "ATAC", slot = "meta.features")

saveRDS(meta.feature.cluster.14,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/meta.feature.cluster.14.rds")

peaks.matched.cluster.14 <- MatchRegionStats(
  meta.feature = meta.feature.cluster.14[open.peaks, ],
  query.feature = meta.feature.cluster.14[atac.cluster.14.diffx.peaks.up.only.filtered, ],
  n = 50000
)

saveRDS(peaks.matched.cluster.14,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/peaks.matched.cluster.14.rds")

# test enrichment

enriched.motifs.cluster.14 <- FindMotifs(
  object = final.atac.matrix.analysis,
  features = atac.cluster.14.diffx.peaks.up.only.filtered,
  background=peaks.matched.cluster.14
)

saveRDS(enriched.motifs.cluster.14,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/enriched.motifs.cluster.14.rds")

# plot

plot1 <- MotifPlot(
  object = final.atac.matrix.analysis,
  motifs = head(rownames(enriched.motifs))
)
plot1

svg("atac_top_enriched_filtered_motifs_cluster_14.svg",width=20)
print(plot1)
dev.off()

# cluster 15

# test

Idents(final.atac.matrix.analysis) <- final.atac.matrix.analysis@meta.data$final.atac.clusters
atac.cluster.15.diffx.peaks.up.only <- FindMarkers(
  object = final.atac.matrix.analysis,
  ident.1 = "15", 
  ident.2 = setdiff(to.do,"15"), 
  min.pct = 0.05,
  test.use = 'LR',
  latent.vars = 'nCount_ATAC',
  only.pos = TRUE
)

saveRDS(atac.cluster.15.diffx.peaks.up.only,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.15.diffx.peaks.up.only.rds")

wb <- createWorkbook("atac.cluster.15.diffx.peaks.up.only")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.15.diffx.peaks.up.only, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.15.diffx.peaks.up.only.xlsx", overwrite = TRUE)

# filter

atac.cluster.15.diffx.peaks.up.only.filtered <- rownames(atac.cluster.15.diffx.peaks.up.only[atac.cluster.15.diffx.peaks.up.only$p_val < 0.05, ])

saveRDS(atac.cluster.15.diffx.peaks.up.only.filtered,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/atac.cluster.15.diffx.peaks.up.only.filtered.rds")

wb <- createWorkbook("atac.cluster.15.diffx.peaks.up.only.filtered")
addWorksheet(wb, "results")
writeData(wb, sheet = "results", atac.cluster.15.diffx.peaks.up.only.filtered, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "atac.cluster.15.diffx.peaks.up.only.filtered.xlsx", overwrite = TRUE)

# match the overall GC content in the peak set

meta.feature.cluster.15 <- GetAssayData(final.atac.matrix.analysis, assay = "ATAC", slot = "meta.features")

saveRDS(meta.feature.cluster.15,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/meta.feature.cluster.15.rds")

peaks.matched.cluster.15 <- MatchRegionStats(
  meta.feature = meta.feature.cluster.15[open.peaks, ],
  query.feature = meta.feature.cluster.15[atac.cluster.15.diffx.peaks.up.only.filtered, ],
  n = 50000
)

saveRDS(peaks.matched.cluster.15,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/peaks.matched.cluster.15.rds")

# test enrichment

enriched.motifs.cluster.15 <- FindMotifs(
  object = final.atac.matrix.analysis,
  features = atac.cluster.15.diffx.peaks.up.only.filtered,
  background=peaks.matched.cluster.15
)

saveRDS(enriched.motifs.cluster.15,"/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/enriched.motifs.cluster.15.rds")

# plot

plot1 <- MotifPlot(
  object = final.atac.matrix.analysis,
  motifs = head(rownames(enriched.motifs))
)
plot1

svg("atac_top_enriched_filtered_motifs_cluster_15.svg",width=20)
print(plot1)
dev.off()

















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#------------------------------------------------------------------------------
# Augur 20220511
# https://github.com/neurorestore/Augur?msclkid=3258e733d15111ecaae93ba88938c9df
https://www.michaelchimenti.com/2021/11/perturbation-analysis-of-spatial-single-cell-rna-seq-with-augur/#:~:text=Augur%20is%20an%20R%20package%20to%20prioritize%20cell,to%20an%20experimental%20perturbation%20within%20high-dimensional%20single-cell%20data.
#------------------------------------------------------------------------------
            
temp <- final.pruned.harmony.go$final.clusters
final.pruned.harmony.go@meta.data$cell_type <- factor(temp)
Idents(final.pruned.harmony.go) <- factor(temp)
final.pruned.harmony.go@meta.data$label <- factor(final.pruned.harmony.go@meta.data$group)

DefaultAssay(final.final.pruned.harmony.go) <- "integrated"

augur = calculate_auc(final.final.pruned.harmony.go)

### Make a dataframe of AUC results 
auc_tab <- augur$AUC
auc_tab$rank <- c(1:dim(auc_tab)[1])
temp <- as.data.frame(auc_tab)
write.table(temp,"Augur_Results.txt",sep="\t")

### Grab the cells by type and barcode 
tib <- final.final.pruned.harmony.go@meta.data$UMAP %>% as_tibble(rownames = "Barcode") %>% rename(cell_type=value)

### Join the AUC information to the barcode on cell_type 
tib <- tib %>% left_join(., auc_tab)

### Sanity check 
assertthat::are_equal(colnames(final.final.pruned.harmony.go), tib$Barcode)

### Update the seurat object with new augur metadata 
final.final.pruned.harmony.go$AUC <- round(tib$auc, 3) 
final.final.pruned.harmony.go$RANK <- tib$rank

### plot
p1 <- plot_umap(augur, final.final.pruned.harmony.go, mode = "default", palette = "Spectral")
p1 <- p1 + geom_point(size=0.1) + ggtitle("Augur Perturbation by Type (Red = Most)")
svg("augur_results_by_umap.svg")
print(p1)
dev.off()











saveRDS(object = final.pruned.harmony.go, file = "/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/final.pruned.harmony.go.rds")

save.image("Rsession_20221013.RData")

HERE HERE HERE













# 38
final.pruned.harmony.go <- final.final.curated.harmony.go
final.pruned.harmony.go@meta.data$pruned <- colnames(final.pruned.harmony.go)%in%to.remove
svg("38_cells_to_prune_umap.svg")
DimPlot(final.pruned.harmony.go, label=FALSE,group.by="pruned")
dev.off()
DimPlot(final.pruned.harmony.go, label=FALSE,group.by="pruned")

# 39
final.final.pruned.harmony.go <- final.pruned.harmony.go[,final.pruned.harmony.go@meta.data$pruned=="FALSE"]
svg("39_cluster_post_pruning_umap.svg")
DimPlot(final.final.pruned.harmony.go, label=TRUE,group.by="RNA_snn_res.1.5")
dev.off()
DimPlot(final.final.pruned.harmony.go, label=TRUE,group.by="RNA_snn_res.1.5")


save.image("Rsession_20220915.RData")











p1 <- DimPlot(harmony.go, label=FALSE, group.by="group")

col.2.use <- c("red","black")
p1 <- DimPlot(harmony.go, label=FALSE,cols=col.2.use,group.by="group")
p1


svg("umap_ion_vs_sham_20220719.svg")
print(p1)
dev.off()






#------------------------------------------------------------------------------
# Cluster
#------------------------------------------------------------------------------

all.combined.sct <- RunUMAP(all.combined.sct, reduction = "pca", dims = 1:100)
all.combined.sct <- FindNeighbors(all.combined.sct, dims = 1:100, verbose = FALSE)
all.combined.sct <- FindClusters(all.combined.sct, verbose = FALSE)
DimPlot(all.combined.sct, label=TRUE) + NoLegend()
DimPlot(all.combined.sct, label=TRUE)

temp <- all.combined.sct@meta.data$orig.ident
temp <- as.character(temp)
temp <- ifelse(temp=="ION_EP04","2019",temp)
temp <- ifelse(temp=="ION_EP06","2019",temp)
temp <- ifelse(temp=="ION_EP08","2020",temp)
temp <- ifelse(temp=="ION_S1BC","2021",temp)
temp <- ifelse(temp=="Sham_EP02","2019",temp)
temp <- ifelse(temp=="Sham_EP05","2020",temp)
temp <- ifelse(temp=="Sham_EP07","2019",temp)
temp <- ifelse(temp=="Sham_S1BC","2021",temp)
all.combined.sct@meta.data$year <- as.factor(temp)

DimPlot(all.combined.sct, label=FALSE, group.by="year")
DimPlot(all.combined.sct, reduction = "umap", split.by = "year")

temp <- all.combined.sct@meta.data$orig.ident
temp <- as.character(temp)
temp <- ifelse(temp=="ION_EP04","ION",temp)
temp <- ifelse(temp=="ION_EP06","ION",temp)
temp <- ifelse(temp=="ION_EP08","ION",temp)
temp <- ifelse(temp=="ION_S1BC","ION",temp)
temp <- ifelse(temp=="Sham_EP02","Sham",temp)
temp <- ifelse(temp=="Sham_EP05","Sham",temp)
temp <- ifelse(temp=="Sham_EP07","Sham",temp)
temp <- ifelse(temp=="Sham_S1BC","Sham",temp)
all.combined.sct@meta.data$group <- as.factor(temp)

DimPlot(all.combined.sct, label=FALSE, group.by="group")
DimPlot(all.combined.sct, reduction = "umap", split.by = "group")

p1 <- DimPlot(all.combined.sct, label=FALSE, group.by="group")

col.2.use <- c("red","black")
p1 <- DimPlot(all.combined.sct, label=FALSE,cols=col.2.use,group.by="group")
p1

svg("umap_ion_vs_sham_20220719.svg")
print(p1)
dev.off()

#------------------------------------------------------------------------------
# Custom Plots - 20220423
#------------------------------------------------------------------------------

# umap

# https://r-charts.com/color-palettes/

# blue
blue.pal <- paletteer_c("ggthemes::Blue", 3)
blue.pal

# green
green.pal <- paletteer_c("ggthemes::Green", 21)
green.pal

# orange
orange.pal <- paletteer_c("ggthemes::Orange", 3)
orange.pal

# purple
purple.pal <- paletteer_c("ggthemes::Purple", 8)
purple.pal

# red
red.pal <- c("#B70F1BFF","#F17060FF")
red.pal

# yellow
yellow.pal <- c("#FFDC00FF","#FFFF37FF")
yellow.pal

temp <- all.combined.sct@meta.data$seurat_clusters
temp <- as.character(temp)
temp <- ifelse(temp=="0","neuron :: Pcsk2",temp)
temp <- ifelse(temp=="1","neuron :: Nos1ap",temp)
temp <- ifelse(temp=="2","neuron :: Cacna1e",temp)
temp <- ifelse(temp=="3","neuron :: Kcnb2",temp)
temp <- ifelse(temp=="4","neuron :: Vgll4",temp)
temp <- ifelse(temp=="5","neuron :: Zmat4",temp)
temp <- ifelse(temp=="6","astrocyte :: Prex2",temp)
temp <- ifelse(temp=="7","gaba (PV) :: Col19a1",temp)
temp <- ifelse(temp=="8","neuron :: Pld5",temp)
temp <- ifelse(temp=="9","neuron :: Sntb2",temp)
temp <- ifelse(temp=="10","neuron :: Maml3",temp)
temp <- ifelse(temp=="11","oligo :: St18",temp)
temp <- ifelse(temp=="12","gaba (SST) :: Etl4",temp)
temp <- ifelse(temp=="13","neuron :: Ntng2",temp)
temp <- ifelse(temp=="14","neuron :: Il1rapl2",temp)
temp <- ifelse(temp=="15","neuron :: Rimbp2",temp)
temp <- ifelse(temp=="16","gaba :: Gad2",temp)
temp <- ifelse(temp=="17","gaba(VIP) :: Vip",temp)
temp <- ifelse(temp=="18","gaba (PV) :: Nxph1",temp)
temp <- ifelse(temp=="19","neuron :: Tox",temp)
temp <- ifelse(temp=="20","neuron :: 4930467D21Rik",temp)
temp <- ifelse(temp=="21","neuron :: Tshz2",temp)
temp <- ifelse(temp=="22","OPC :: Neu4",temp)
temp <- ifelse(temp=="23","microglia :: Inpp5d",temp)
temp <- ifelse(temp=="24","neuron :: Hs3st4",temp)
temp <- ifelse(temp=="25","neuron :: Gm2164",temp)
temp <- ifelse(temp=="26","gaba :: Rgs9",temp)
temp <- ifelse(temp=="27","endothelial/astrocyte :: Atp1a2",temp)
temp <- ifelse(temp=="28","endothelial :: Eya2",temp)
temp <- ifelse(temp=="29","neuron :: Olfm1",temp)
temp <- ifelse(temp=="30","endothelial :: Rgs5",temp)
temp <- ifelse(temp=="31","oligo :: Bcas1",temp)
temp <- ifelse(temp=="32","neuron :: Syt9",temp)
temp <- ifelse(temp=="33","gaba :: Nos1",temp)
temp <- ifelse(temp=="34","gaba :: Nek7",temp)
temp <- ifelse(temp=="35","neuron :: Plcxd3",temp)
temp <- ifelse(temp=="36","astrocyte/oligo :: Daam2",temp)
temp <- ifelse(temp=="37","neuron :: Dgkg",temp)
temp <- ifelse(temp=="38","microglia/macrophage :: Siglech",temp)

order.order <- sort(names(table(temp)))[c(1,
2,
3,
5,
4,
6,
13,
8,
7,
9,
10,
11,
12,
15,
14,
19,
33,
32,
24,
20,
34,
18,
25,
28,
31,
30,
21,
17,
23,
27,
26,
16,
22,
35,
29,
36,
39,
37,
38)]

all.combined.sct@meta.data$naming.to.use <- factor(temp,levels=order.order)

all.combined.sct@meta.data$UMAP <- factor(temp,levels=order.order)

col.2.use <- c(yellow.pal[c(2,1)],orange.pal,purple.pal,red.pal[c(2,1)],green.pal,blue.pal)

p <- DimPlot(all.combined.sct, label=FALSE,cols=col.2.use,group.by="UMAP")
p

svg("umap_plot_special_20220424.svg",width = 10)
print(p)
dev.off()

p <- DimPlot(all.combined.sct, label=FALSE,cols=col.2.use,group.by="UMAP",split.by="group")
p

svg("umap_ion_vs_sham_20220718.svg",width = 20)
print(p)
dev.off()

# heatmap

markers <- c("Rbfox3",
"Thy1",
"Snap25",
"Rbfox1",
"Rbfox2",
"Camk2a",
"Neurod6",
"Slc17a7",
"Nrn1",
"Gad1",
"Gad2",
"Pnoc",
"Slc32a1",
"Vip",
"Sst",
"Pvalb",
"Slc5a7",
"Mlc1",
"Gjb6",
"Aqp4",
"Acsbg1",
"Gja1",
"Aldoc",
"Gfap",
"Vim",
"Flt1",
"Cldn5",
"Tm4sf1",
"Pglyrp1",
"Rgs5",
"Itm2a",
"Bgn",
"Itgam",
"Cx3cr1",
"C1qa",
"C1qb",
"C1qc",
"Ctss",
"Bmp4",
"Opalin",
"Mog",
"Aspa",
"Mobp",
"Mbp",
"Olig1",
"Pdgfra",
"Cacng4",
"Tmem100",
"Matn4",
"Ptprz1",
"Tnr")

DefaultAssay(all.combined.sct) <- "RNA"
count.data <- GetAssayData(all.combined.sct, slot = "counts")
count.data <- as.data.frame(count.data[markers,])
count.data <- as.matrix(count.data)
cell.meta <- all.combined.sct@meta.data$naming.to.use

cell.means <- NULL
temp1 <- names(table(all.combined.sct@meta.data$naming.to.use))
for(i in 1:length(temp1)) {
	print(i)
	temp2 <- count.data[,all.combined.sct@meta.data$naming.to.use==temp1[i]]
	temp2 <- apply(temp2,1,mean,na.rm=T)
	cell.means <- cbind(cell.means,temp2)
}
dimnames(cell.means)[[2]] <- temp1

my_colour = list(cluster = c(
'astrocyte :: Prex2' =  "#FFFF37FF",
'astrocyte/oligo :: Daam2' = "#FFDC00FF",
'endothelial :: Eya2' = "#FFC685FF",
'endothelial/astrocyte :: Atp1a2' = "#EC7021FF",
'endothelial :: Rgs5' = "#9E3D22FF",
'gaba :: Gad2' = "#EEC9E5FF",
'gaba(VIP) :: Vip' = "#E2B4D4FF",
'gaba :: Nos1' = "#D2A1C1FF",
'gaba :: Nek7' = "#C38EB1FF",
'gaba :: Rgs9' = "#B37CA2FF",
'gaba (PV) :: Col19a1' = "#9D6D97FF",
'gaba (PV) :: Nxph1' = "#8A5D86FF",
'gaba (SST) :: Etl4' = "#7C4D79FF",
'microglia/macrophage :: Siglech' = "#F17060FF",
'microglia :: Inpp5d' = "#B70F1BFF",
'neuron :: Gm2164' = "#B3E0A6FF",
'neuron :: Tox' = "#A6DB97FF",
'neuron :: Syt9' = "#99D789FF",
'neuron :: Nos1ap' = "#90D180FF",
'neuron :: Hs3st4' = "#87CB79FF",
'neuron :: Tshz2' = "#7FC572FF",
'neuron :: Dgkg' = "#77BE6BFF",
'neuron :: Ntng2' = "#70B865FF",
'neuron :: Plcxd3' = "#6AB25FFF",
'neuron :: Sntb2' = "#64AC59FF",
'neuron :: Rimbp2' = "#5DA554FF",             
'neuron :: Il1rapl2' = "#559F52FF",
'neuron :: Cacna1e' = "#4E9A50FF",
'neuron :: Maml3' = "#47944EFF",
'neuron :: Pcsk2' = "#3F8D4CFF",
'neuron :: Olfm1' = "#378748FF",
'neuron :: 4930467D21Rik' = "#2F8243FF",   
'neuron :: Kcnb2' = "#2A7B40FF",
'neuron :: Vgll4' = "#27753DFF",
'neuron :: Pld5' = "#256F3DFF",
'neuron :: Zmat4' = "#24693DFF",
'OPC :: Neu4' = "#B9DDF1FF",
'oligo :: Bcas1' = "#6797C0FF",
'oligo :: St18' = "#2A5783FF"))

my_sample_col <- data.frame(cluster = order.order)
row.names(my_sample_col) <- order.order

pheatmap(as.matrix(cell.means),scale="row",fontsize_row=8,annotation_colors=my_colour,annotation_col=my_sample_col)

p <- pheatmap(as.matrix(cell.means),scale="row",fontsize_row=8,annotation_colors=my_colour,annotation_col=my_sample_col)

svg("pheatmap_plot_special_20220424.svg",height = 10, width=15)
print(p)
dev.off()

#------------------------------------------------------------------------------
# Custom Request - neuron drill down - 20220523
#------------------------------------------------------------------------------

# subset neurons

temp <- all.combined.sct@meta.data$integrated_snn_res.0.8
temp <- ifelse(temp=="0","99",temp)
temp <- ifelse(temp=="1","99",temp)
temp <- ifelse(temp=="2","99",temp)
temp <- ifelse(temp=="3","99",temp)
temp <- ifelse(temp=="4","99",temp)
temp <- ifelse(temp=="5","99",temp)
temp <- ifelse(temp=="8","99",temp)
temp <- ifelse(temp=="9","99",temp)
temp <- ifelse(temp=="10","99",temp)
temp <- ifelse(temp=="13","99",temp)
temp <- ifelse(temp=="14","99",temp)
temp <- ifelse(temp=="15","99",temp)
temp <- ifelse(temp=="19","99",temp)
temp <- ifelse(temp=="20","99",temp)
temp <- ifelse(temp=="21","99",temp)
temp <- ifelse(temp=="24","99",temp)
temp <- ifelse(temp=="25","99",temp)
temp <- ifelse(temp=="29","99",temp)
temp <- ifelse(temp=="32","99",temp)
temp <- ifelse(temp=="35","99",temp)
temp <- ifelse(temp=="37","99",temp)
drilldown.all.combined.sct <- all.combined.sct[,temp=="99"]

# Re-integrate

drilldown.all.list <- SplitObject(drilldown.all.combined.sct, split.by = "orig.ident")
drilldown.all.list <- lapply(X = drilldown.all.list, FUN = SCTransform, vars.to.regress = "percent.mt", method="glmGamPoi")
features <- SelectIntegrationFeatures(object.list = drilldown.all.list, nfeatures = 3000)
drilldown.all.list <- PrepSCTIntegration(object.list = drilldown.all.list, anchor.features = features)
all.anchors <- FindIntegrationAnchors(object.list = drilldown.all.list, normalization.method = "SCT",anchor.features = features)
drilldown.all.combined.sct <- IntegrateData(anchorset = all.anchors, normalization.method = "SCT")

# Evaluate

drilldown.all.combined.sct <- RunPCA(drilldown.all.combined.sct, verbose = FALSE, npcs = 200)
ElbowPlot(drilldown.all.combined.sct,ndims=200)

# Cluster

drilldown.all.combined.sct <- RunUMAP(drilldown.all.combined.sct, reduction = "pca", dims = 1:100)
drilldown.all.combined.sct <- FindNeighbors(drilldown.all.combined.sct, dims = 1:100, verbose = FALSE)

drilldown.all.combined.sct.res.x <- FindClusters(drilldown.all.combined.sct,resolution=c(0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,1.1,1.2,1.3,1.4,1.5),save.SNN=TRUE)

pdf("umap_resolution_evaluation_using_ndim_100.pdf")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.04")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.05")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.06")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.07")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.08")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.09")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.1")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.2")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.3")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.4")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.5")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.6")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.7")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.8")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.9")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.1")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.1.1")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.1.2")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.1.3")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.1.4")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.1.5")
dev.off()

svg("clusttree_resolution_evaluation_using_ndim_100_with_sc3_stability_overlay.svg",width=7,height=20)
clustree(drilldown.all.combined.sct.res.x,prefix="integrated_snn_res.",node_colour="sc3_stability")
dev.off()

svg("clusttree_resolution_evaluation_using_ndim_100_with_no_sc3_stability_overlay.svg",width=7,height=20)
clustree(drilldown.all.combined.sct.res.x,prefix="integrated_snn_res.")
dev.off()

save.image("Rsession_Seurat_20220524.RData")

# Conserved testing resolution 0.08

DefaultAssay(drilldown.all.combined.sct.res.x) <- "RNA"

Idents(drilldown.all.combined.sct.res.x) <- factor(drilldown.all.combined.sct.res.x@meta.data$integrated_snn_res.0.08,levels=as.character(c(0:13)))

conserved.markers.0 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "0", grouping.var="group", only.pos = TRUE)
conserved.markers.1 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "1", grouping.var="group", only.pos = TRUE)
conserved.markers.2 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "2", grouping.var="group", only.pos = TRUE)
conserved.markers.3 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "3", grouping.var="group", only.pos = TRUE)
conserved.markers.4 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "4", grouping.var="group", only.pos = TRUE)
conserved.markers.5 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "5", grouping.var="group", only.pos = TRUE)
conserved.markers.6 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "6", grouping.var="group", only.pos = TRUE)
conserved.markers.7 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "7", grouping.var="group", only.pos = TRUE)
conserved.markers.8 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "8", grouping.var="group", only.pos = TRUE)
conserved.markers.9 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "9", grouping.var="group", only.pos = TRUE)
conserved.markers.10 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "10", grouping.var="group", only.pos = TRUE)
conserved.markers.11 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "11", grouping.var="group", only.pos = TRUE)
conserved.markers.12 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "12", grouping.var="group", only.pos = TRUE)
conserved.markers.13 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "13", grouping.var="group", only.pos = TRUE)

# cluster 0
www <- conserved.markers.0
ccc <- "0"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)

cx <- as.data.frame(cx)

dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16

# www
# ION_p_val		1
# ION_avg_log2FC	2
# ION_pct.1		3
# ION_pct.2		4
# ION_p_val_adj		5
# Sham_p_val		6
# Sham_avg_log2FC	7
# Sham_pct.1		8
# Sham_pct.2		9
# Sham_p_val_adj	10
# max_pval		11
# minimump_p_val	12

www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])

dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]

conserved.markers.0.f <- cx.final

# cluster 1
www <- conserved.markers.1
ccc <- "1"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.1.f <- cx.final

# cluster 2
www <- conserved.markers.2
ccc <- "2"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.2.f <- cx.final

# cluster 3
www <- conserved.markers.3
ccc <- "3"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.3.f <- cx.final

# cluster 4
www <- conserved.markers.4
ccc <- "4"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.4.f <- cx.final

# cluster 5
www <- conserved.markers.5
ccc <- "5"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.5.f <- cx.final

# cluster 6
www <- conserved.markers.6
ccc <- "6"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.6.f <- cx.final

# cluster 7
www <- conserved.markers.7
ccc <- "7"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.7.f <- cx.final

# cluster 8
www <- conserved.markers.8
ccc <- "8"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.8.f <- cx.final

# cluster 9
www <- conserved.markers.9
ccc <- "9"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.9.f <- cx.final

# cluster 10
www <- conserved.markers.10
ccc <- "10"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.10.f <- cx.final

# cluster 11
www <- conserved.markers.11
ccc <- "11"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.11.f <- cx.final

# cluster 12
www <- conserved.markers.12
ccc <- "12"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.12.f <- cx.final

# cluster 13
www <- conserved.markers.13
ccc <- "13"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.13.f <- cx.final

# 0
temp <- conserved.markers.0$ION_avg_log2FC+conserved.markers.0$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.0)
conserved.markers.0 <- temp
dimnames(conserved.markers.0)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.0.filtered.sorted <- conserved.markers.0[conserved.markers.0$minimump_p_val<0.05,]
conserved.markers.0.filtered.sorted <- conserved.markers.0.filtered.sorted %>% 
as.data.frame()
conserved.markers.0.filtered.sorted <- conserved.markers.0.filtered.sorted[order(conserved.markers.0.filtered.sorted$minimump_p_val),]
conserved.markers.0.filtered.sorted <- conserved.markers.0.filtered.sorted[order(-conserved.markers.0.filtered.sorted$sum_avg_log2FC),]

# 1
temp <- conserved.markers.1$ION_avg_log2FC+conserved.markers.1$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.1)
conserved.markers.1 <- temp
dimnames(conserved.markers.1)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.1.filtered.sorted <- conserved.markers.1[conserved.markers.1$minimump_p_val<0.05,]
conserved.markers.1.filtered.sorted <- conserved.markers.1.filtered.sorted %>% 
as.data.frame()
conserved.markers.1.filtered.sorted <- conserved.markers.1.filtered.sorted[order(conserved.markers.1.filtered.sorted$minimump_p_val),]
conserved.markers.1.filtered.sorted <- conserved.markers.1.filtered.sorted[order(-conserved.markers.1.filtered.sorted$sum_avg_log2FC),]

# 2
temp <- conserved.markers.2$ION_avg_log2FC+conserved.markers.2$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.2)
conserved.markers.2 <- temp
dimnames(conserved.markers.2)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.2.filtered.sorted <- conserved.markers.2[conserved.markers.2$minimump_p_val<0.05,]
conserved.markers.2.filtered.sorted <- conserved.markers.2.filtered.sorted %>% 
as.data.frame()
conserved.markers.2.filtered.sorted <- conserved.markers.2.filtered.sorted[order(conserved.markers.2.filtered.sorted$minimump_p_val),]
conserved.markers.2.filtered.sorted <- conserved.markers.2.filtered.sorted[order(-conserved.markers.2.filtered.sorted$sum_avg_log2FC),]

# 3
temp <- conserved.markers.3$ION_avg_log2FC+conserved.markers.3$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.3)
conserved.markers.3 <- temp
dimnames(conserved.markers.3)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.3.filtered.sorted <- conserved.markers.3[conserved.markers.3$minimump_p_val<0.05,]
conserved.markers.3.filtered.sorted <- conserved.markers.3.filtered.sorted %>% 
as.data.frame()
conserved.markers.3.filtered.sorted <- conserved.markers.3.filtered.sorted[order(conserved.markers.3.filtered.sorted$minimump_p_val),]
conserved.markers.3.filtered.sorted <- conserved.markers.3.filtered.sorted[order(-conserved.markers.3.filtered.sorted$sum_avg_log2FC),]

# 4
temp <- conserved.markers.4$ION_avg_log2FC+conserved.markers.4$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.4)
conserved.markers.4 <- temp
dimnames(conserved.markers.4)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.4.filtered.sorted <- conserved.markers.4[conserved.markers.4$minimump_p_val<0.05,]
conserved.markers.4.filtered.sorted <- conserved.markers.4.filtered.sorted %>% 
as.data.frame()
conserved.markers.4.filtered.sorted <- conserved.markers.4.filtered.sorted[order(conserved.markers.4.filtered.sorted$minimump_p_val),]
conserved.markers.4.filtered.sorted <- conserved.markers.4.filtered.sorted[order(-conserved.markers.4.filtered.sorted$sum_avg_log2FC),]

# 5
temp <- conserved.markers.5$ION_avg_log2FC+conserved.markers.5$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.5)
conserved.markers.5 <- temp
dimnames(conserved.markers.5)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.5.filtered.sorted <- conserved.markers.5[conserved.markers.5$minimump_p_val<0.05,]
conserved.markers.5.filtered.sorted <- conserved.markers.5.filtered.sorted %>% 
as.data.frame()
conserved.markers.5.filtered.sorted <- conserved.markers.5.filtered.sorted[order(conserved.markers.5.filtered.sorted$minimump_p_val),]
conserved.markers.5.filtered.sorted <- conserved.markers.5.filtered.sorted[order(-conserved.markers.5.filtered.sorted$sum_avg_log2FC),]

# 6
temp <- conserved.markers.6$ION_avg_log2FC+conserved.markers.6$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.6)
conserved.markers.6 <- temp
dimnames(conserved.markers.6)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.6.filtered.sorted <- conserved.markers.6[conserved.markers.6$minimump_p_val<0.05,]
conserved.markers.6.filtered.sorted <- conserved.markers.6.filtered.sorted %>% 
as.data.frame()
conserved.markers.6.filtered.sorted <- conserved.markers.6.filtered.sorted[order(conserved.markers.6.filtered.sorted$minimump_p_val),]
conserved.markers.6.filtered.sorted <- conserved.markers.6.filtered.sorted[order(-conserved.markers.6.filtered.sorted$sum_avg_log2FC),]

# 7
temp <- conserved.markers.7$ION_avg_log2FC+conserved.markers.7$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.7)
conserved.markers.7 <- temp
dimnames(conserved.markers.7)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.7.filtered.sorted <- conserved.markers.7[conserved.markers.7$minimump_p_val<0.05,]
conserved.markers.7.filtered.sorted <- conserved.markers.7.filtered.sorted %>% 
as.data.frame()
conserved.markers.7.filtered.sorted <- conserved.markers.7.filtered.sorted[order(conserved.markers.7.filtered.sorted$minimump_p_val),]
conserved.markers.7.filtered.sorted <- conserved.markers.7.filtered.sorted[order(-conserved.markers.7.filtered.sorted$sum_avg_log2FC),]

# 8
temp <- conserved.markers.8$ION_avg_log2FC+conserved.markers.8$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.8)
conserved.markers.8 <- temp
dimnames(conserved.markers.8)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.8.filtered.sorted <- conserved.markers.8[conserved.markers.8$minimump_p_val<0.05,]
conserved.markers.8.filtered.sorted <- conserved.markers.8.filtered.sorted %>% 
as.data.frame()
conserved.markers.8.filtered.sorted <- conserved.markers.8.filtered.sorted[order(conserved.markers.8.filtered.sorted$minimump_p_val),]
conserved.markers.8.filtered.sorted <- conserved.markers.8.filtered.sorted[order(-conserved.markers.8.filtered.sorted$sum_avg_log2FC),]

# 9
temp <- conserved.markers.9$ION_avg_log2FC+conserved.markers.9$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.9)
conserved.markers.9 <- temp
dimnames(conserved.markers.9)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.9.filtered.sorted <- conserved.markers.9[conserved.markers.9$minimump_p_val<0.05,]
conserved.markers.9.filtered.sorted <- conserved.markers.9.filtered.sorted %>% 
as.data.frame()
conserved.markers.9.filtered.sorted <- conserved.markers.9.filtered.sorted[order(conserved.markers.9.filtered.sorted$minimump_p_val),]
conserved.markers.9.filtered.sorted <- conserved.markers.9.filtered.sorted[order(-conserved.markers.9.filtered.sorted$sum_avg_log2FC),]

# 10
temp <- conserved.markers.10$ION_avg_log2FC+conserved.markers.10$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.10)
conserved.markers.10 <- temp
dimnames(conserved.markers.10)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.10.filtered.sorted <- conserved.markers.10[conserved.markers.10$minimump_p_val<0.05,]
conserved.markers.10.filtered.sorted <- conserved.markers.10.filtered.sorted %>% 
as.data.frame()
conserved.markers.10.filtered.sorted <- conserved.markers.10.filtered.sorted[order(conserved.markers.10.filtered.sorted$minimump_p_val),]
conserved.markers.10.filtered.sorted <- conserved.markers.10.filtered.sorted[order(-conserved.markers.10.filtered.sorted$sum_avg_log2FC),]

# 11
temp <- conserved.markers.11$ION_avg_log2FC+conserved.markers.11$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.11)
conserved.markers.11 <- temp
dimnames(conserved.markers.11)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.11.filtered.sorted <- conserved.markers.11[conserved.markers.11$minimump_p_val<0.05,]
conserved.markers.11.filtered.sorted <- conserved.markers.11.filtered.sorted %>% 
as.data.frame()
conserved.markers.11.filtered.sorted <- conserved.markers.11.filtered.sorted[order(conserved.markers.11.filtered.sorted$minimump_p_val),]
conserved.markers.11.filtered.sorted <- conserved.markers.11.filtered.sorted[order(-conserved.markers.11.filtered.sorted$sum_avg_log2FC),]

# 12
temp <- conserved.markers.12$ION_avg_log2FC+conserved.markers.12$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.12)
conserved.markers.12 <- temp
dimnames(conserved.markers.12)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.12.filtered.sorted <- conserved.markers.12[conserved.markers.12$minimump_p_val<0.05,]
conserved.markers.12.filtered.sorted <- conserved.markers.12.filtered.sorted %>% 
as.data.frame()
conserved.markers.12.filtered.sorted <- conserved.markers.12.filtered.sorted[order(conserved.markers.12.filtered.sorted$minimump_p_val),]
conserved.markers.12.filtered.sorted <- conserved.markers.12.filtered.sorted[order(-conserved.markers.12.filtered.sorted$sum_avg_log2FC),]

# 13
temp <- conserved.markers.13$ION_avg_log2FC+conserved.markers.13$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.13)
conserved.markers.13 <- temp
dimnames(conserved.markers.13)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.13.filtered.sorted <- conserved.markers.13[conserved.markers.13$minimump_p_val<0.05,]
conserved.markers.13.filtered.sorted <- conserved.markers.13.filtered.sorted %>% 
as.data.frame()
conserved.markers.13.filtered.sorted <- conserved.markers.13.filtered.sorted[order(conserved.markers.13.filtered.sorted$minimump_p_val),]
conserved.markers.13.filtered.sorted <- conserved.markers.13.filtered.sorted[order(-conserved.markers.13.filtered.sorted$sum_avg_log2FC),]

wb <- createWorkbook("conserved.markers.across.ION.Sham.per.cluster")
addWorksheet(wb, "conserved.markers.0")
writeData(wb, sheet = "conserved.markers.0", conserved.markers.0.filtered.sorted, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "conserved.markers.1")
writeData(wb, sheet = "conserved.markers.1", conserved.markers.1.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.2")
writeData(wb, sheet = "conserved.markers.2", conserved.markers.2.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.3")
writeData(wb, sheet = "conserved.markers.3", conserved.markers.3.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.4")
writeData(wb, sheet = "conserved.markers.4", conserved.markers.4.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.5")
writeData(wb, sheet = "conserved.markers.5", conserved.markers.5.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.6")
writeData(wb, sheet = "conserved.markers.6", conserved.markers.6.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.7")
writeData(wb, sheet = "conserved.markers.7", conserved.markers.7.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.8")
writeData(wb, sheet = "conserved.markers.8", conserved.markers.8.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.9")
writeData(wb, sheet = "conserved.markers.9", conserved.markers.9.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.10")
writeData(wb, sheet = "conserved.markers.10", conserved.markers.10.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.11")
writeData(wb, sheet = "conserved.markers.11", conserved.markers.11.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.12")
writeData(wb, sheet = "conserved.markers.12", conserved.markers.12.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.13")
writeData(wb, sheet = "conserved.markers.13", conserved.markers.13.filtered.sorted, colNames = TRUE, rowNames = TRUE)

saveWorkbook(wb, "neuron.subset.conserved.markers.across.ION.Sham.per.cluster.xlsx", overwrite = TRUE)

markers.to.plot <- c(rownames(conserved.markers.0.filtered.sorted)[1],
			rownames(conserved.markers.1.filtered.sorted)[1],
			rownames(conserved.markers.2.filtered.sorted)[1],
			rownames(conserved.markers.3.filtered.sorted)[1],
			rownames(conserved.markers.4.filtered.sorted)[1],
			rownames(conserved.markers.5.filtered.sorted)[1],
			rownames(conserved.markers.6.filtered.sorted)[1],
			rownames(conserved.markers.7.filtered.sorted)[1],
			rownames(conserved.markers.8.filtered.sorted)[1],
			rownames(conserved.markers.9.filtered.sorted)[1],
			rownames(conserved.markers.10.filtered.sorted)[1],
			rownames(conserved.markers.11.filtered.sorted)[1],
			rownames(conserved.markers.12.filtered.sorted)[1],
			rownames(conserved.markers.13.filtered.sorted)[1])

DotPlot(drilldown.all.combined.sct.res.x, features = markers.to.plot, dot.scale = 8) + RotatedAxis()
svg("top1.conserved.markers.across.ION.Sham.per.cluster.dot.plot.svg")
DotPlot(drilldown.all.combined.sct.res.x, features = markers.to.plot, dot.scale = 8) + RotatedAxis()
dev.off()

markers.to.plot <- c(rownames(conserved.markers.0.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.1.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.2.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.3.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.4.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.5.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.6.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.7.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.8.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.9.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.10.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.11.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.12.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.13.filtered.sorted)[c(1:5)])

DotPlot(drilldown.all.combined.sct.res.x, features = unique(markers.to.plot), dot.scale = 8) + RotatedAxis()
svg("top5.conserved.markers.across.ION.Sham.per.cluster.dot.plot.svg",width=14)
DotPlot(drilldown.all.combined.sct.res.x, features = unique(markers.to.plot), dot.scale = 8) + RotatedAxis()
dev.off()

markers.to.plot <- unique(markers.to.plot)
pdf("top5.conserved.markers.across.ION.Sham.per.cluster.violin.plots.pdf")
for(i in 1:length(markers.to.plot)) {
	print(VlnPlot(drilldown.all.combined.sct.res.x, features = markers.to.plot[i], pt.size = 0, combine = FALSE))
}
dev.off()

markers.to.plot <- unique(markers.to.plot)
pdf("top5.conserved.markers.across.ION.Sham.per.cluster.umap.plots.pdf")
for(i in 1:length(markers.to.plot)) {
print(FeaturePlot(drilldown.all.combined.sct.res.x, features = markers.to.plot[i],label = TRUE))
}
dev.off()

DefaultAssay(drilldown.all.combined.sct.res.x) <- "RNA"

features <- c(rownames(conserved.markers.0.filtered.sorted)[c(1)],
rownames(conserved.markers.1.filtered.sorted)[c(1)],
rownames(conserved.markers.2.filtered.sorted)[c(1)],
rownames(conserved.markers.3.filtered.sorted)[c(1)],
rownames(conserved.markers.4.filtered.sorted)[c(1)],
rownames(conserved.markers.5.filtered.sorted)[c(1)],
rownames(conserved.markers.6.filtered.sorted)[c(1)],
rownames(conserved.markers.7.filtered.sorted)[c(1)],
rownames(conserved.markers.8.filtered.sorted)[c(1)],
rownames(conserved.markers.9.filtered.sorted)[c(1)],
rownames(conserved.markers.10.filtered.sorted)[c(1)],
rownames(conserved.markers.11.filtered.sorted)[c(1)],
rownames(conserved.markers.12.filtered.sorted)[c(1)],
rownames(conserved.markers.13.filtered.sorted)[c(1)])
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top1.conserved.markers.across.ION.Sham.per.cluster.stacked.violin.plot.svg")
print(p)
dev.off()

features <- c(rownames(conserved.markers.0.filtered.sorted)[c(1:5)],
rownames(conserved.markers.1.filtered.sorted)[c(1:5)],
rownames(conserved.markers.2.filtered.sorted)[c(1:5)],
rownames(conserved.markers.3.filtered.sorted)[c(1:5)],
rownames(conserved.markers.4.filtered.sorted)[c(1:5)],
rownames(conserved.markers.5.filtered.sorted)[c(1:5)],
rownames(conserved.markers.6.filtered.sorted)[c(1:5)],
rownames(conserved.markers.7.filtered.sorted)[c(1:5)],
rownames(conserved.markers.8.filtered.sorted)[c(1:5)],
rownames(conserved.markers.9.filtered.sorted)[c(1:5)],
rownames(conserved.markers.10.filtered.sorted)[c(1:5)],
rownames(conserved.markers.11.filtered.sorted)[c(1:5)],
rownames(conserved.markers.12.filtered.sorted)[c(1:5)],
rownames(conserved.markers.13.filtered.sorted)[c(1:5)])
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.per.cluster.stacked.violin.plot.svg",height=14)
print(p)
dev.off()

# 0
features <- rownames(conserved.markers.0.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.0.stacked.violin.plot.svg")
print(p)
dev.off()

# 1
features <- rownames(conserved.markers.1.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.1.stacked.violin.plot.svg")
print(p)
dev.off()

# 2
features <- rownames(conserved.markers.2.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.2.stacked.violin.plot.svg")
print(p)
dev.off()

# 3
features <- rownames(conserved.markers.3.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.3.stacked.violin.plot.svg")
print(p)
dev.off()

# 4
features <- rownames(conserved.markers.4.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.4.stacked.violin.plot.svg")
print(p)
dev.off()

# 5
features <- rownames(conserved.markers.1.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.1.stacked.violin.plot.svg")
print(p)
dev.off()

# 6
features <- rownames(conserved.markers.6.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.6.stacked.violin.plot.svg")
print(p)
dev.off()

# 7
features <- rownames(conserved.markers.7.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.7.stacked.violin.plot.svg")
print(p)
dev.off()

# 8
features <- rownames(conserved.markers.8.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.8.stacked.violin.plot.svg")
print(p)
dev.off()

# 9
features <- rownames(conserved.markers.9.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.9.stacked.violin.plot.svg")
print(p)
dev.off()

# 10
features <- rownames(conserved.markers.10.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.10.stacked.violin.plot.svg")
print(p)
dev.off()

# 11
features <- rownames(conserved.markers.11.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.11.stacked.violin.plot.svg")
print(p)
dev.off()

# 12
features <- rownames(conserved.markers.12.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.12.stacked.violin.plot.svg")
print(p)
dev.off()

# 13
features <- rownames(conserved.markers.13.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.13.stacked.violin.plot.svg")
print(p)
dev.off()

#######################################################
# Conserved testing resolution 0.6
#######################################################

DefaultAssay(drilldown.all.combined.sct.res.x) <- "RNA"

Idents(drilldown.all.combined.sct.res.x) <- factor(drilldown.all.combined.sct.res.x@meta.data$integrated_snn_res.0.6,levels=as.character(c(0:22)))

conserved.markers.0 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "0", grouping.var="group", only.pos = TRUE)
conserved.markers.1 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "1", grouping.var="group", only.pos = TRUE)
conserved.markers.2 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "2", grouping.var="group", only.pos = TRUE)
conserved.markers.3 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "3", grouping.var="group", only.pos = TRUE)
conserved.markers.4 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "4", grouping.var="group", only.pos = TRUE)
conserved.markers.5 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "5", grouping.var="group", only.pos = TRUE)
conserved.markers.6 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "6", grouping.var="group", only.pos = TRUE)
conserved.markers.7 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "7", grouping.var="group", only.pos = TRUE)
conserved.markers.8 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "8", grouping.var="group", only.pos = TRUE)
conserved.markers.9 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "9", grouping.var="group", only.pos = TRUE)
conserved.markers.10 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "10", grouping.var="group", only.pos = TRUE)
conserved.markers.11 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "11", grouping.var="group", only.pos = TRUE)
conserved.markers.12 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "12", grouping.var="group", only.pos = TRUE)
conserved.markers.13 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "13", grouping.var="group", only.pos = TRUE)
conserved.markers.14 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "14", grouping.var="group", only.pos = TRUE)
conserved.markers.15 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "15", grouping.var="group", only.pos = TRUE)
conserved.markers.16 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "16", grouping.var="group", only.pos = TRUE)
conserved.markers.17 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "17", grouping.var="group", only.pos = TRUE)
conserved.markers.18 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "18", grouping.var="group", only.pos = TRUE)
conserved.markers.19 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "19", grouping.var="group", only.pos = TRUE)
conserved.markers.20 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "20", grouping.var="group", only.pos = TRUE)
conserved.markers.21 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "21", grouping.var="group", only.pos = TRUE)
conserved.markers.22 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "22", grouping.var="group", only.pos = TRUE)

# cluster 0
www <- conserved.markers.0
ccc <- "0"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)

cx <- as.data.frame(cx)

dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16

# www
# ION_p_val		1
# ION_avg_log2FC	2
# ION_pct.1		3
# ION_pct.2		4
# ION_p_val_adj		5
# Sham_p_val		6
# Sham_avg_log2FC	7
# Sham_pct.1		8
# Sham_pct.2		9
# Sham_p_val_adj	10
# max_pval		11
# minimump_p_val	12

www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])

dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]

conserved.markers.0.f <- cx.final

# cluster 1
www <- conserved.markers.1
ccc <- "1"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.1.f <- cx.final

# cluster 2
www <- conserved.markers.2
ccc <- "2"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.2.f <- cx.final

# cluster 3
www <- conserved.markers.3
ccc <- "3"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.3.f <- cx.final

# cluster 4
www <- conserved.markers.4
ccc <- "4"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.4.f <- cx.final

# cluster 5
www <- conserved.markers.5
ccc <- "5"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.5.f <- cx.final

# cluster 6
www <- conserved.markers.6
ccc <- "6"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.6.f <- cx.final

# cluster 7
www <- conserved.markers.7
ccc <- "7"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.7.f <- cx.final

# cluster 8
www <- conserved.markers.8
ccc <- "8"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.8.f <- cx.final

# cluster 9
www <- conserved.markers.9
ccc <- "9"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.9.f <- cx.final

# cluster 10
www <- conserved.markers.10
ccc <- "10"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.10.f <- cx.final

# cluster 11
www <- conserved.markers.11
ccc <- "11"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.11.f <- cx.final

# cluster 12
www <- conserved.markers.12
ccc <- "12"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.12.f <- cx.final

# cluster 13
www <- conserved.markers.13
ccc <- "13"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.13.f <- cx.final

# cluster 14
www <- conserved.markers.14
ccc <- "14"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.14.f <- cx.final

# cluster 15
www <- conserved.markers.15
ccc <- "15"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.15.f <- cx.final

# cluster 16
www <- conserved.markers.16
ccc <- "16"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.16.f <- cx.final

# cluster 17
www <- conserved.markers.17
ccc <- "17"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.17.f <- cx.final

# cluster 18
www <- conserved.markers.18
ccc <- "18"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.18.f <- cx.final

# cluster 19
www <- conserved.markers.19
ccc <- "19"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.19.f <- cx.final

# cluster 20
www <- conserved.markers.20
ccc <- "20"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.20.f <- cx.final

# cluster 21
www <- conserved.markers.21
ccc <- "21"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.21.f <- cx.final

# cluster 22
www <- conserved.markers.22
ccc <- "22"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.22.f <- cx.final

# 0
temp <- conserved.markers.0$ION_avg_log2FC+conserved.markers.0$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.0)
conserved.markers.0 <- temp
dimnames(conserved.markers.0)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.0.filtered.sorted <- conserved.markers.0[conserved.markers.0$minimump_p_val<0.05,]
conserved.markers.0.filtered.sorted <- conserved.markers.0.filtered.sorted %>% 
as.data.frame()
conserved.markers.0.filtered.sorted <- conserved.markers.0.filtered.sorted[order(conserved.markers.0.filtered.sorted$minimump_p_val),]
conserved.markers.0.filtered.sorted <- conserved.markers.0.filtered.sorted[order(-conserved.markers.0.filtered.sorted$sum_avg_log2FC),]

# 1
temp <- conserved.markers.1$ION_avg_log2FC+conserved.markers.1$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.1)
conserved.markers.1 <- temp
dimnames(conserved.markers.1)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.1.filtered.sorted <- conserved.markers.1[conserved.markers.1$minimump_p_val<0.05,]
conserved.markers.1.filtered.sorted <- conserved.markers.1.filtered.sorted %>% 
as.data.frame()
conserved.markers.1.filtered.sorted <- conserved.markers.1.filtered.sorted[order(conserved.markers.1.filtered.sorted$minimump_p_val),]
conserved.markers.1.filtered.sorted <- conserved.markers.1.filtered.sorted[order(-conserved.markers.1.filtered.sorted$sum_avg_log2FC),]

# 2
temp <- conserved.markers.2$ION_avg_log2FC+conserved.markers.2$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.2)
conserved.markers.2 <- temp
dimnames(conserved.markers.2)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.2.filtered.sorted <- conserved.markers.2[conserved.markers.2$minimump_p_val<0.05,]
conserved.markers.2.filtered.sorted <- conserved.markers.2.filtered.sorted %>% 
as.data.frame()
conserved.markers.2.filtered.sorted <- conserved.markers.2.filtered.sorted[order(conserved.markers.2.filtered.sorted$minimump_p_val),]
conserved.markers.2.filtered.sorted <- conserved.markers.2.filtered.sorted[order(-conserved.markers.2.filtered.sorted$sum_avg_log2FC),]

# 3
temp <- conserved.markers.3$ION_avg_log2FC+conserved.markers.3$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.3)
conserved.markers.3 <- temp
dimnames(conserved.markers.3)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.3.filtered.sorted <- conserved.markers.3[conserved.markers.3$minimump_p_val<0.05,]
conserved.markers.3.filtered.sorted <- conserved.markers.3.filtered.sorted %>% 
as.data.frame()
conserved.markers.3.filtered.sorted <- conserved.markers.3.filtered.sorted[order(conserved.markers.3.filtered.sorted$minimump_p_val),]
conserved.markers.3.filtered.sorted <- conserved.markers.3.filtered.sorted[order(-conserved.markers.3.filtered.sorted$sum_avg_log2FC),]

# 4
temp <- conserved.markers.4$ION_avg_log2FC+conserved.markers.4$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.4)
conserved.markers.4 <- temp
dimnames(conserved.markers.4)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.4.filtered.sorted <- conserved.markers.4[conserved.markers.4$minimump_p_val<0.05,]
conserved.markers.4.filtered.sorted <- conserved.markers.4.filtered.sorted %>% 
as.data.frame()
conserved.markers.4.filtered.sorted <- conserved.markers.4.filtered.sorted[order(conserved.markers.4.filtered.sorted$minimump_p_val),]
conserved.markers.4.filtered.sorted <- conserved.markers.4.filtered.sorted[order(-conserved.markers.4.filtered.sorted$sum_avg_log2FC),]

# 5
temp <- conserved.markers.5$ION_avg_log2FC+conserved.markers.5$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.5)
conserved.markers.5 <- temp
dimnames(conserved.markers.5)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.5.filtered.sorted <- conserved.markers.5[conserved.markers.5$minimump_p_val<0.05,]
conserved.markers.5.filtered.sorted <- conserved.markers.5.filtered.sorted %>% 
as.data.frame()
conserved.markers.5.filtered.sorted <- conserved.markers.5.filtered.sorted[order(conserved.markers.5.filtered.sorted$minimump_p_val),]
conserved.markers.5.filtered.sorted <- conserved.markers.5.filtered.sorted[order(-conserved.markers.5.filtered.sorted$sum_avg_log2FC),]

# 6
temp <- conserved.markers.6$ION_avg_log2FC+conserved.markers.6$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.6)
conserved.markers.6 <- temp
dimnames(conserved.markers.6)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.6.filtered.sorted <- conserved.markers.6[conserved.markers.6$minimump_p_val<0.05,]
conserved.markers.6.filtered.sorted <- conserved.markers.6.filtered.sorted %>% 
as.data.frame()
conserved.markers.6.filtered.sorted <- conserved.markers.6.filtered.sorted[order(conserved.markers.6.filtered.sorted$minimump_p_val),]
conserved.markers.6.filtered.sorted <- conserved.markers.6.filtered.sorted[order(-conserved.markers.6.filtered.sorted$sum_avg_log2FC),]

# 7
temp <- conserved.markers.7$ION_avg_log2FC+conserved.markers.7$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.7)
conserved.markers.7 <- temp
dimnames(conserved.markers.7)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.7.filtered.sorted <- conserved.markers.7[conserved.markers.7$minimump_p_val<0.05,]
conserved.markers.7.filtered.sorted <- conserved.markers.7.filtered.sorted %>% 
as.data.frame()
conserved.markers.7.filtered.sorted <- conserved.markers.7.filtered.sorted[order(conserved.markers.7.filtered.sorted$minimump_p_val),]
conserved.markers.7.filtered.sorted <- conserved.markers.7.filtered.sorted[order(-conserved.markers.7.filtered.sorted$sum_avg_log2FC),]

# 8
temp <- conserved.markers.8$ION_avg_log2FC+conserved.markers.8$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.8)
conserved.markers.8 <- temp
dimnames(conserved.markers.8)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.8.filtered.sorted <- conserved.markers.8[conserved.markers.8$minimump_p_val<0.05,]
conserved.markers.8.filtered.sorted <- conserved.markers.8.filtered.sorted %>% 
as.data.frame()
conserved.markers.8.filtered.sorted <- conserved.markers.8.filtered.sorted[order(conserved.markers.8.filtered.sorted$minimump_p_val),]
conserved.markers.8.filtered.sorted <- conserved.markers.8.filtered.sorted[order(-conserved.markers.8.filtered.sorted$sum_avg_log2FC),]

# 9
temp <- conserved.markers.9$ION_avg_log2FC+conserved.markers.9$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.9)
conserved.markers.9 <- temp
dimnames(conserved.markers.9)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.9.filtered.sorted <- conserved.markers.9[conserved.markers.9$minimump_p_val<0.05,]
conserved.markers.9.filtered.sorted <- conserved.markers.9.filtered.sorted %>% 
as.data.frame()
conserved.markers.9.filtered.sorted <- conserved.markers.9.filtered.sorted[order(conserved.markers.9.filtered.sorted$minimump_p_val),]
conserved.markers.9.filtered.sorted <- conserved.markers.9.filtered.sorted[order(-conserved.markers.9.filtered.sorted$sum_avg_log2FC),]

# 10
temp <- conserved.markers.10$ION_avg_log2FC+conserved.markers.10$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.10)
conserved.markers.10 <- temp
dimnames(conserved.markers.10)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.10.filtered.sorted <- conserved.markers.10[conserved.markers.10$minimump_p_val<0.05,]
conserved.markers.10.filtered.sorted <- conserved.markers.10.filtered.sorted %>% 
as.data.frame()
conserved.markers.10.filtered.sorted <- conserved.markers.10.filtered.sorted[order(conserved.markers.10.filtered.sorted$minimump_p_val),]
conserved.markers.10.filtered.sorted <- conserved.markers.10.filtered.sorted[order(-conserved.markers.10.filtered.sorted$sum_avg_log2FC),]

# 11
temp <- conserved.markers.11$ION_avg_log2FC+conserved.markers.11$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.11)
conserved.markers.11 <- temp
dimnames(conserved.markers.11)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.11.filtered.sorted <- conserved.markers.11[conserved.markers.11$minimump_p_val<0.05,]
conserved.markers.11.filtered.sorted <- conserved.markers.11.filtered.sorted %>% 
as.data.frame()
conserved.markers.11.filtered.sorted <- conserved.markers.11.filtered.sorted[order(conserved.markers.11.filtered.sorted$minimump_p_val),]
conserved.markers.11.filtered.sorted <- conserved.markers.11.filtered.sorted[order(-conserved.markers.11.filtered.sorted$sum_avg_log2FC),]

# 12
temp <- conserved.markers.12$ION_avg_log2FC+conserved.markers.12$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.12)
conserved.markers.12 <- temp
dimnames(conserved.markers.12)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.12.filtered.sorted <- conserved.markers.12[conserved.markers.12$minimump_p_val<0.05,]
conserved.markers.12.filtered.sorted <- conserved.markers.12.filtered.sorted %>% 
as.data.frame()
conserved.markers.12.filtered.sorted <- conserved.markers.12.filtered.sorted[order(conserved.markers.12.filtered.sorted$minimump_p_val),]
conserved.markers.12.filtered.sorted <- conserved.markers.12.filtered.sorted[order(-conserved.markers.12.filtered.sorted$sum_avg_log2FC),]

# 13
temp <- conserved.markers.13$ION_avg_log2FC+conserved.markers.13$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.13)
conserved.markers.13 <- temp
dimnames(conserved.markers.13)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.13.filtered.sorted <- conserved.markers.13[conserved.markers.13$minimump_p_val<0.05,]
conserved.markers.13.filtered.sorted <- conserved.markers.13.filtered.sorted %>% 
as.data.frame()
conserved.markers.13.filtered.sorted <- conserved.markers.13.filtered.sorted[order(conserved.markers.13.filtered.sorted$minimump_p_val),]
conserved.markers.13.filtered.sorted <- conserved.markers.13.filtered.sorted[order(-conserved.markers.13.filtered.sorted$sum_avg_log2FC),]

# 14
temp <- conserved.markers.14$ION_avg_log2FC+conserved.markers.14$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.14)
conserved.markers.14 <- temp
dimnames(conserved.markers.14)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.14.filtered.sorted <- conserved.markers.14[conserved.markers.14$minimump_p_val<0.05,]
conserved.markers.14.filtered.sorted <- conserved.markers.14.filtered.sorted %>% 
as.data.frame()
conserved.markers.14.filtered.sorted <- conserved.markers.14.filtered.sorted[order(conserved.markers.14.filtered.sorted$minimump_p_val),]
conserved.markers.14.filtered.sorted <- conserved.markers.14.filtered.sorted[order(-conserved.markers.14.filtered.sorted$sum_avg_log2FC),]

# 15
temp <- conserved.markers.15$ION_avg_log2FC+conserved.markers.15$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.15)
conserved.markers.15 <- temp
dimnames(conserved.markers.15)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.15.filtered.sorted <- conserved.markers.15[conserved.markers.15$minimump_p_val<0.05,]
conserved.markers.15.filtered.sorted <- conserved.markers.15.filtered.sorted %>% 
as.data.frame()
conserved.markers.15.filtered.sorted <- conserved.markers.15.filtered.sorted[order(conserved.markers.15.filtered.sorted$minimump_p_val),]
conserved.markers.15.filtered.sorted <- conserved.markers.15.filtered.sorted[order(-conserved.markers.15.filtered.sorted$sum_avg_log2FC),]

# 16
temp <- conserved.markers.16$ION_avg_log2FC+conserved.markers.16$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.16)
conserved.markers.16 <- temp
dimnames(conserved.markers.16)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.16.filtered.sorted <- conserved.markers.16[conserved.markers.16$minimump_p_val<0.05,]
conserved.markers.16.filtered.sorted <- conserved.markers.16.filtered.sorted %>% 
as.data.frame()
conserved.markers.16.filtered.sorted <- conserved.markers.16.filtered.sorted[order(conserved.markers.16.filtered.sorted$minimump_p_val),]
conserved.markers.16.filtered.sorted <- conserved.markers.16.filtered.sorted[order(-conserved.markers.16.filtered.sorted$sum_avg_log2FC),]

# 17
temp <- conserved.markers.17$ION_avg_log2FC+conserved.markers.17$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.17)
conserved.markers.17 <- temp
dimnames(conserved.markers.17)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.17.filtered.sorted <- conserved.markers.17[conserved.markers.17$minimump_p_val<0.05,]
conserved.markers.17.filtered.sorted <- conserved.markers.17.filtered.sorted %>% 
as.data.frame()
conserved.markers.17.filtered.sorted <- conserved.markers.17.filtered.sorted[order(conserved.markers.17.filtered.sorted$minimump_p_val),]
conserved.markers.17.filtered.sorted <- conserved.markers.17.filtered.sorted[order(-conserved.markers.17.filtered.sorted$sum_avg_log2FC),]

# 18
temp <- conserved.markers.18$ION_avg_log2FC+conserved.markers.18$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.18)
conserved.markers.18 <- temp
dimnames(conserved.markers.18)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.18.filtered.sorted <- conserved.markers.18[conserved.markers.18$minimump_p_val<0.05,]
conserved.markers.18.filtered.sorted <- conserved.markers.18.filtered.sorted %>% 
as.data.frame()
conserved.markers.18.filtered.sorted <- conserved.markers.18.filtered.sorted[order(conserved.markers.18.filtered.sorted$minimump_p_val),]
conserved.markers.18.filtered.sorted <- conserved.markers.18.filtered.sorted[order(-conserved.markers.18.filtered.sorted$sum_avg_log2FC),]

# 19
temp <- conserved.markers.19$ION_avg_log2FC+conserved.markers.19$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.19)
conserved.markers.19 <- temp
dimnames(conserved.markers.19)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.19.filtered.sorted <- conserved.markers.19[conserved.markers.19$minimump_p_val<0.05,]
conserved.markers.19.filtered.sorted <- conserved.markers.19.filtered.sorted %>% 
as.data.frame()
conserved.markers.19.filtered.sorted <- conserved.markers.19.filtered.sorted[order(conserved.markers.19.filtered.sorted$minimump_p_val),]
conserved.markers.19.filtered.sorted <- conserved.markers.19.filtered.sorted[order(-conserved.markers.19.filtered.sorted$sum_avg_log2FC),]

# 20
temp <- conserved.markers.20$ION_avg_log2FC+conserved.markers.20$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.20)
conserved.markers.20 <- temp
dimnames(conserved.markers.20)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.20.filtered.sorted <- conserved.markers.20[conserved.markers.20$minimump_p_val<0.05,]
conserved.markers.20.filtered.sorted <- conserved.markers.20.filtered.sorted %>% 
as.data.frame()
conserved.markers.20.filtered.sorted <- conserved.markers.20.filtered.sorted[order(conserved.markers.20.filtered.sorted$minimump_p_val),]
conserved.markers.20.filtered.sorted <- conserved.markers.20.filtered.sorted[order(-conserved.markers.20.filtered.sorted$sum_avg_log2FC),]

# 21
temp <- conserved.markers.21$ION_avg_log2FC+conserved.markers.21$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.21)
conserved.markers.21 <- temp
dimnames(conserved.markers.21)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.21.filtered.sorted <- conserved.markers.21[conserved.markers.21$minimump_p_val<0.05,]
conserved.markers.21.filtered.sorted <- conserved.markers.21.filtered.sorted %>% 
as.data.frame()
conserved.markers.21.filtered.sorted <- conserved.markers.21.filtered.sorted[order(conserved.markers.21.filtered.sorted$minimump_p_val),]
conserved.markers.21.filtered.sorted <- conserved.markers.21.filtered.sorted[order(-conserved.markers.21.filtered.sorted$sum_avg_log2FC),]

# 22
temp <- conserved.markers.22$ION_avg_log2FC+conserved.markers.22$Sham_avg_log2FC
temp <- cbind(temp,conserved.markers.22)
conserved.markers.22 <- temp
dimnames(conserved.markers.22)[[2]][1] <- "sum_avg_log2FC"
conserved.markers.22.filtered.sorted <- conserved.markers.22[conserved.markers.22$minimump_p_val<0.05,]
conserved.markers.22.filtered.sorted <- conserved.markers.22.filtered.sorted %>% 
as.data.frame()
conserved.markers.22.filtered.sorted <- conserved.markers.22.filtered.sorted[order(conserved.markers.22.filtered.sorted$minimump_p_val),]
conserved.markers.22.filtered.sorted <- conserved.markers.22.filtered.sorted[order(-conserved.markers.22.filtered.sorted$sum_avg_log2FC),]

wb <- createWorkbook("conserved.markers.across.ION.Sham.per.cluster")
addWorksheet(wb, "conserved.markers.0")
writeData(wb, sheet = "conserved.markers.0", conserved.markers.0.filtered.sorted, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "conserved.markers.1")
writeData(wb, sheet = "conserved.markers.1", conserved.markers.1.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.2")
writeData(wb, sheet = "conserved.markers.2", conserved.markers.2.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.3")
writeData(wb, sheet = "conserved.markers.3", conserved.markers.3.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.4")
writeData(wb, sheet = "conserved.markers.4", conserved.markers.4.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.5")
writeData(wb, sheet = "conserved.markers.5", conserved.markers.5.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.6")
writeData(wb, sheet = "conserved.markers.6", conserved.markers.6.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.7")
writeData(wb, sheet = "conserved.markers.7", conserved.markers.7.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.8")
writeData(wb, sheet = "conserved.markers.8", conserved.markers.8.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.9")
writeData(wb, sheet = "conserved.markers.9", conserved.markers.9.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.10")
writeData(wb, sheet = "conserved.markers.10", conserved.markers.10.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.11")
writeData(wb, sheet = "conserved.markers.11", conserved.markers.11.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.12")
writeData(wb, sheet = "conserved.markers.12", conserved.markers.12.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.13")
writeData(wb, sheet = "conserved.markers.13", conserved.markers.13.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.14")
writeData(wb, sheet = "conserved.markers.14", conserved.markers.14.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.15")
writeData(wb, sheet = "conserved.markers.15", conserved.markers.15.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.16")
writeData(wb, sheet = "conserved.markers.16", conserved.markers.16.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.17")
writeData(wb, sheet = "conserved.markers.17", conserved.markers.17.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.18")
writeData(wb, sheet = "conserved.markers.18", conserved.markers.18.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.19")
writeData(wb, sheet = "conserved.markers.19", conserved.markers.19.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.20")
writeData(wb, sheet = "conserved.markers.20", conserved.markers.20.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.21")
writeData(wb, sheet = "conserved.markers.21", conserved.markers.21.filtered.sorted, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.22")
writeData(wb, sheet = "conserved.markers.22", conserved.markers.22.filtered.sorted, colNames = TRUE, rowNames = TRUE)

saveWorkbook(wb, "neuron.subset.conserved.markers.across.ION.Sham.per.cluster.xlsx", overwrite = TRUE)

markers.to.plot <- c(rownames(conserved.markers.0.filtered.sorted)[1],
			rownames(conserved.markers.1.filtered.sorted)[1],
			rownames(conserved.markers.2.filtered.sorted)[1],
			rownames(conserved.markers.3.filtered.sorted)[1],
			rownames(conserved.markers.4.filtered.sorted)[1],
			rownames(conserved.markers.5.filtered.sorted)[1],
			rownames(conserved.markers.6.filtered.sorted)[1],
			rownames(conserved.markers.7.filtered.sorted)[1],
			rownames(conserved.markers.8.filtered.sorted)[1],
			rownames(conserved.markers.9.filtered.sorted)[1],
			rownames(conserved.markers.10.filtered.sorted)[1],
			rownames(conserved.markers.11.filtered.sorted)[1],
			rownames(conserved.markers.12.filtered.sorted)[1],
			rownames(conserved.markers.13.filtered.sorted)[1],
			rownames(conserved.markers.14.filtered.sorted)[1],
			rownames(conserved.markers.15.filtered.sorted)[1],
			rownames(conserved.markers.16.filtered.sorted)[1],
			rownames(conserved.markers.17.filtered.sorted)[1],
			rownames(conserved.markers.18.filtered.sorted)[1],
			rownames(conserved.markers.19.filtered.sorted)[1],
			rownames(conserved.markers.20.filtered.sorted)[1],
			rownames(conserved.markers.21.filtered.sorted)[1],
			rownames(conserved.markers.22.filtered.sorted)[1])

DotPlot(drilldown.all.combined.sct.res.x, features = markers.to.plot, dot.scale = 8) + RotatedAxis()
svg("top1.conserved.markers.across.ION.Sham.per.cluster.dot.plot.svg")
DotPlot(drilldown.all.combined.sct.res.x, features = markers.to.plot, dot.scale = 8) + RotatedAxis()
dev.off()

markers.to.plot <- c(rownames(conserved.markers.0.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.1.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.2.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.3.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.4.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.5.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.6.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.7.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.8.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.9.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.10.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.11.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.12.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.13.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.14.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.15.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.16.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.17.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.18.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.19.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.20.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.21.filtered.sorted)[c(1:5)],
			rownames(conserved.markers.22.filtered.sorted)[c(1:5)])

DotPlot(drilldown.all.combined.sct.res.x, features = unique(markers.to.plot), dot.scale = 8) + RotatedAxis()
svg("top5.conserved.markers.across.ION.Sham.per.cluster.dot.plot.svg",width=14)
DotPlot(drilldown.all.combined.sct.res.x, features = unique(markers.to.plot), dot.scale = 8) + RotatedAxis()
dev.off()

markers.to.plot <- unique(markers.to.plot)
pdf("top5.conserved.markers.across.ION.Sham.per.cluster.violin.plots.pdf")
for(i in 1:length(markers.to.plot)) {
	print(VlnPlot(drilldown.all.combined.sct.res.x, features = markers.to.plot[i], pt.size = 0, combine = FALSE))
}
dev.off()

markers.to.plot <- unique(markers.to.plot)
pdf("top5.conserved.markers.across.ION.Sham.per.cluster.umap.plots.pdf")
for(i in 1:length(markers.to.plot)) {
print(FeaturePlot(drilldown.all.combined.sct.res.x, features = markers.to.plot[i],label = TRUE))
}
dev.off()

DefaultAssay(drilldown.all.combined.sct.res.x) <- "RNA"

features <- c(rownames(conserved.markers.0.filtered.sorted)[c(1)],
rownames(conserved.markers.1.filtered.sorted)[c(1)],
rownames(conserved.markers.2.filtered.sorted)[c(1)],
rownames(conserved.markers.3.filtered.sorted)[c(1)],
rownames(conserved.markers.4.filtered.sorted)[c(1)],
rownames(conserved.markers.5.filtered.sorted)[c(1)],
rownames(conserved.markers.6.filtered.sorted)[c(1)],
rownames(conserved.markers.7.filtered.sorted)[c(1)],
rownames(conserved.markers.8.filtered.sorted)[c(1)],
rownames(conserved.markers.9.filtered.sorted)[c(1)],
rownames(conserved.markers.10.filtered.sorted)[c(1)],
rownames(conserved.markers.11.filtered.sorted)[c(1)],
rownames(conserved.markers.12.filtered.sorted)[c(1)],
rownames(conserved.markers.13.filtered.sorted)[c(1)],
rownames(conserved.markers.14.filtered.sorted)[c(1)],
rownames(conserved.markers.15.filtered.sorted)[c(1)],
rownames(conserved.markers.16.filtered.sorted)[c(1)],
rownames(conserved.markers.17.filtered.sorted)[c(1)],
rownames(conserved.markers.18.filtered.sorted)[c(1)],
rownames(conserved.markers.19.filtered.sorted)[c(1)],
rownames(conserved.markers.20.filtered.sorted)[c(1)],
rownames(conserved.markers.21.filtered.sorted)[c(1)],
rownames(conserved.markers.22.filtered.sorted)[c(1)])
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top1.conserved.markers.across.ION.Sham.per.cluster.stacked.violin.plot.svg")
print(p)
dev.off()

features <- c(rownames(conserved.markers.0.filtered.sorted)[c(1:5)],
rownames(conserved.markers.1.filtered.sorted)[c(1:5)],
rownames(conserved.markers.2.filtered.sorted)[c(1:5)],
rownames(conserved.markers.3.filtered.sorted)[c(1:5)],
rownames(conserved.markers.4.filtered.sorted)[c(1:5)],
rownames(conserved.markers.5.filtered.sorted)[c(1:5)],
rownames(conserved.markers.6.filtered.sorted)[c(1:5)],
rownames(conserved.markers.7.filtered.sorted)[c(1:5)],
rownames(conserved.markers.8.filtered.sorted)[c(1:5)],
rownames(conserved.markers.9.filtered.sorted)[c(1:5)],
rownames(conserved.markers.10.filtered.sorted)[c(1:5)],
rownames(conserved.markers.11.filtered.sorted)[c(1:5)],
rownames(conserved.markers.12.filtered.sorted)[c(1:5)],
rownames(conserved.markers.13.filtered.sorted)[c(1:5)],
rownames(conserved.markers.14.filtered.sorted)[c(1:5)],
rownames(conserved.markers.15.filtered.sorted)[c(1:5)],
rownames(conserved.markers.16.filtered.sorted)[c(1:5)],
rownames(conserved.markers.17.filtered.sorted)[c(1:5)],
rownames(conserved.markers.18.filtered.sorted)[c(1:5)],
rownames(conserved.markers.19.filtered.sorted)[c(1:5)],
rownames(conserved.markers.20.filtered.sorted)[c(1:5)],
rownames(conserved.markers.21.filtered.sorted)[c(1:5)],
rownames(conserved.markers.22.filtered.sorted)[c(1:5)])
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.per.cluster.stacked.violin.plot.svg",height=14)
print(p)
dev.off()

# 0
features <- rownames(conserved.markers.0.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.0.stacked.violin.plot.svg")
print(p)
dev.off()

# 1
features <- rownames(conserved.markers.1.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.1.stacked.violin.plot.svg")
print(p)
dev.off()

# 2
features <- rownames(conserved.markers.2.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.2.stacked.violin.plot.svg")
print(p)
dev.off()

# 3
features <- rownames(conserved.markers.3.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.3.stacked.violin.plot.svg")
print(p)
dev.off()

# 4
features <- rownames(conserved.markers.4.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.4.stacked.violin.plot.svg")
print(p)
dev.off()

# 5
features <- rownames(conserved.markers.1.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.1.stacked.violin.plot.svg")
print(p)
dev.off()

# 6
features <- rownames(conserved.markers.6.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.6.stacked.violin.plot.svg")
print(p)
dev.off()

# 7
features <- rownames(conserved.markers.7.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.7.stacked.violin.plot.svg")
print(p)
dev.off()

# 8
features <- rownames(conserved.markers.8.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.8.stacked.violin.plot.svg")
print(p)
dev.off()

# 9
features <- rownames(conserved.markers.9.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.9.stacked.violin.plot.svg")
print(p)
dev.off()

# 10
features <- rownames(conserved.markers.10.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.10.stacked.violin.plot.svg")
print(p)
dev.off()

# 11
features <- rownames(conserved.markers.11.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.11.stacked.violin.plot.svg")
print(p)
dev.off()

# 12
features <- rownames(conserved.markers.12.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.12.stacked.violin.plot.svg")
print(p)
dev.off()

# 13
features <- rownames(conserved.markers.13.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.13.stacked.violin.plot.svg")
print(p)
dev.off()

# 14
features <- rownames(conserved.markers.14.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.14.stacked.violin.plot.svg")
print(p)
dev.off()

# 15
features <- rownames(conserved.markers.15.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.15.stacked.violin.plot.svg")
print(p)
dev.off()

# 16
features <- rownames(conserved.markers.16.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.16.stacked.violin.plot.svg")
print(p)
dev.off()

# 17
features <- rownames(conserved.markers.17.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.17.stacked.violin.plot.svg")
print(p)
dev.off()

# 18
features <- rownames(conserved.markers.18.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.18.stacked.violin.plot.svg")
print(p)
dev.off()

# 19
features <- rownames(conserved.markers.19.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.19.stacked.violin.plot.svg")
print(p)
dev.off()

# 20
features <- rownames(conserved.markers.20.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.20.stacked.violin.plot.svg")
print(p)
dev.off()

# 21
features <- rownames(conserved.markers.21.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.21.stacked.violin.plot.svg")
print(p)
dev.off()

# 22
features <- rownames(conserved.markers.22.filtered.sorted)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.22.stacked.violin.plot.svg")
print(p)
dev.off()

#------------------------------------------------------------------------------
# Augur 20220511
# https://github.com/neurorestore/Augur?msclkid=3258e733d15111ecaae93ba88938c9df
https://www.michaelchimenti.com/2021/11/perturbation-analysis-of-spatial-single-cell-rna-seq-with-augur/#:~:text=Augur%20is%20an%20R%20package%20to%20prioritize%20cell,to%20an%20experimental%20perturbation%20within%20high-dimensional%20single-cell%20data.
#------------------------------------------------------------------------------
            
temp <- all.combined.sct@meta.data$seurat_clusters
temp <- as.character(temp)
temp <- ifelse(temp=="0","neuron :: Pcsk2",temp)
temp <- ifelse(temp=="1","neuron :: Nos1ap",temp)
temp <- ifelse(temp=="2","neuron :: Cacna1e",temp)
temp <- ifelse(temp=="3","neuron :: Kcnb2",temp)
temp <- ifelse(temp=="4","neuron :: Vgll4",temp)
temp <- ifelse(temp=="5","neuron :: Zmat4",temp)
temp <- ifelse(temp=="6","astrocyte :: Prex2",temp)
temp <- ifelse(temp=="7","gaba (PV) :: Col19a1",temp)
temp <- ifelse(temp=="8","neuron :: Pld5",temp)
temp <- ifelse(temp=="9","neuron :: Sntb2",temp)
temp <- ifelse(temp=="10","neuron :: Maml3",temp)
temp <- ifelse(temp=="11","oligo :: St18",temp)
temp <- ifelse(temp=="12","gaba (SST) :: Etl4",temp)
temp <- ifelse(temp=="13","neuron :: Ntng2",temp)
temp <- ifelse(temp=="14","neuron :: Il1rapl2",temp)
temp <- ifelse(temp=="15","neuron :: Rimbp2",temp)
temp <- ifelse(temp=="16","gaba :: Gad2",temp)
temp <- ifelse(temp=="17","gaba(VIP) :: Vip",temp)
temp <- ifelse(temp=="18","gaba (PV) :: Nxph1",temp)
temp <- ifelse(temp=="19","neuron :: Tox",temp)
temp <- ifelse(temp=="20","neuron :: 4930467D21Rik",temp)
temp <- ifelse(temp=="21","neuron :: Tshz2",temp)
temp <- ifelse(temp=="22","OPC :: Neu4",temp)
temp <- ifelse(temp=="23","microglia :: Inpp5d",temp)
temp <- ifelse(temp=="24","neuron :: Hs3st4",temp)
temp <- ifelse(temp=="25","neuron :: Gm2164",temp)
temp <- ifelse(temp=="26","gaba :: Rgs9",temp)
temp <- ifelse(temp=="27","endothelial/astrocyte :: Atp1a2",temp)
temp <- ifelse(temp=="28","endothelial :: Eya2",temp)
temp <- ifelse(temp=="29","neuron :: Olfm1",temp)
temp <- ifelse(temp=="30","endothelial :: Rgs5",temp)
temp <- ifelse(temp=="31","oligo :: Bcas1",temp)
temp <- ifelse(temp=="32","neuron :: Syt9",temp)
temp <- ifelse(temp=="33","gaba :: Nos1",temp)
temp <- ifelse(temp=="34","gaba :: Nek7",temp)
temp <- ifelse(temp=="35","neuron :: Plcxd3",temp)
temp <- ifelse(temp=="36","astrocyte/oligo :: Daam2",temp)
temp <- ifelse(temp=="37","neuron :: Dgkg",temp)
temp <- ifelse(temp=="38","microglia/macrophage :: Siglech",temp)

all.combined.sct@meta.data$cell_type <- factor(temp)
Idents(all.combined.sct) <- factor(temp)
all.combined.sct@meta.data$label <- factor(all.combined.sct@meta.data$group)

DefaultAssay(all.combined.sct) <- "integrated"

augur = calculate_auc(all.combined.sct)

### Make a dataframe of AUC results 
auc_tab <- augur$AUC
auc_tab$rank <- c(1:dim(auc_tab)[1])
temp <- as.data.frame(auc_tab)
write.table(temp,"Augur_Results.txt",sep="\t")

### Grab the cells by type and barcode 
tib <- all.combined.sct$cell_type %>% as_tibble(rownames = "Barcode") %>% rename(cell_type=value)

### Join the AUC information to the barcode on cell_type 
tib <- tib %>% left_join(., auc_tab)

### Sanity check 
assertthat::are_equal(colnames(all.combined.sct), tib$Barcode)

### Update the seurat object with new augur metadata 
all.combined.sct$AUC <- round(tib$auc, 3) 
all.combined.sct$RANK <- tib$rank

### plot
p1 <- plot_umap(augur, all.combined.sct, mode = "default", palette = "Spectral")
p1 <- p1 + geom_point(size=0.1) + ggtitle("Augur Perturbation by Type (Red = Most)")
p1

save.image(file="Rsession_Seurat_20220511.RData")

#------------------------------------------------------------------------------
# Custom UMAP Color Overlays
#------------------------------------------------------------------------------

# request 1

temp <- as.character(all.combined.sct@meta.data$seurat_clusters)
temp <- ifelse(temp %in% as.character(c(0, 1, 2, 3, 4, 5, 8, 9, 10, 13, 14, 15, 19, 20, 21, 24, 25, 29, 32, 35, 37)),"excitatory neurons",temp)
temp <- ifelse(temp %in% as.character(c(7, 12, 16, 17, 18, 26, 33, 34)),"inhibitory neurons",temp)
temp <- ifelse(temp %in% as.character(c(6, 11, 22, 23, 27, 28, 30, 31, 36, 38)),"glia",temp)
all.combined.sct@meta.data$emily.coding.1 <- as.factor(temp)

p <- DimPlot(all.combined.sct, label=FALSE, group.by="emily.coding.1")
p <- p + scale_color_manual(values=c("red","grey","black"))
p <- p + ggtitle("")
p
svg("umap_plot_special_request_1.svg",width = 10)
print(p)
dev.off()

# request 2

temp <- as.character(all.combined.sct@meta.data$seurat_clusters)
temp <- ifelse(temp %in% as.character(c(0, 2, 10, 37)),"Layer 2-6",temp)
temp <- ifelse(temp %in% as.character(c(3, 4, 5, 8, 20, 29, 32, 35)),"Layer 4",temp)
temp <- ifelse(temp %in% as.character(c(14)),"Layer 4/5",temp)
temp <- ifelse(temp %in% as.character(c(9, 15, 19, 25)),"Layer 5",temp)
temp <- ifelse(temp %in% as.character(c(1, 13, 21, 24)),"Layer 5/6",temp)
temp <- ifelse(temp %in% as.character(c(6, 7, 11, 12, 16, 17, 18, 22, 23, 26, 27, 28, 30, 31, 33, 34, 36, 38)),"other",temp)
all.combined.sct@meta.data$emily.coding.2 <- as.factor(temp)

p <- DimPlot(all.combined.sct, label=FALSE, group.by="emily.coding.2")
p <- p + scale_color_manual(values=c("black","red","purple","blue","green","grey"))
p <- p + ggtitle("")
p

svg("umap_plot_special_request_2.svg",width = 10)
print(p)
dev.off()

#------------------------------------------------------------------------------
# Test
# https://satijalab.org/seurat/articles/integration_introduction.html
#------------------------------------------------------------------------------

DefaultAssay(all.combined.sct) <- "RNA"

conserved.markers.0 <- FindConservedMarkers(all.combined.sct, ident.1 = "0", grouping.var="group", only.pos = TRUE)
conserved.markers.1 <- FindConservedMarkers(all.combined.sct, ident.1 = "1", grouping.var="group", only.pos = TRUE)
conserved.markers.2 <- FindConservedMarkers(all.combined.sct, ident.1 = "2", grouping.var="group", only.pos = TRUE)
conserved.markers.3 <- FindConservedMarkers(all.combined.sct, ident.1 = "3", grouping.var="group", only.pos = TRUE)
conserved.markers.4 <- FindConservedMarkers(all.combined.sct, ident.1 = "4", grouping.var="group", only.pos = TRUE)
conserved.markers.5 <- FindConservedMarkers(all.combined.sct, ident.1 = "5", grouping.var="group", only.pos = TRUE)
conserved.markers.6 <- FindConservedMarkers(all.combined.sct, ident.1 = "6", grouping.var="group", only.pos = TRUE)
conserved.markers.7 <- FindConservedMarkers(all.combined.sct, ident.1 = "7", grouping.var="group", only.pos = TRUE)
conserved.markers.8 <- FindConservedMarkers(all.combined.sct, ident.1 = "8", grouping.var="group", only.pos = TRUE)
conserved.markers.9 <- FindConservedMarkers(all.combined.sct, ident.1 = "9", grouping.var="group", only.pos = TRUE)
conserved.markers.10 <- FindConservedMarkers(all.combined.sct, ident.1 = "10", grouping.var="group", only.pos = TRUE)
conserved.markers.11 <- FindConservedMarkers(all.combined.sct, ident.1 = "11", grouping.var="group", only.pos = TRUE)
conserved.markers.12 <- FindConservedMarkers(all.combined.sct, ident.1 = "12", grouping.var="group", only.pos = TRUE)
conserved.markers.13 <- FindConservedMarkers(all.combined.sct, ident.1 = "13", grouping.var="group", only.pos = TRUE)
conserved.markers.14 <- FindConservedMarkers(all.combined.sct, ident.1 = "14", grouping.var="group", only.pos = TRUE)
conserved.markers.15 <- FindConservedMarkers(all.combined.sct, ident.1 = "15", grouping.var="group", only.pos = TRUE)
conserved.markers.16 <- FindConservedMarkers(all.combined.sct, ident.1 = "16", grouping.var="group", only.pos = TRUE)
conserved.markers.17 <- FindConservedMarkers(all.combined.sct, ident.1 = "17", grouping.var="group", only.pos = TRUE)
conserved.markers.18 <- FindConservedMarkers(all.combined.sct, ident.1 = "18", grouping.var="group", only.pos = TRUE)
conserved.markers.19 <- FindConservedMarkers(all.combined.sct, ident.1 = "19", grouping.var="group", only.pos = TRUE)
conserved.markers.20 <- FindConservedMarkers(all.combined.sct, ident.1 = "20", grouping.var="group", only.pos = TRUE)
conserved.markers.21 <- FindConservedMarkers(all.combined.sct, ident.1 = "21", grouping.var="group", only.pos = TRUE)
conserved.markers.22 <- FindConservedMarkers(all.combined.sct, ident.1 = "22", grouping.var="group", only.pos = TRUE)
conserved.markers.23 <- FindConservedMarkers(all.combined.sct, ident.1 = "23", grouping.var="group", only.pos = TRUE)
conserved.markers.24 <- FindConservedMarkers(all.combined.sct, ident.1 = "24", grouping.var="group", only.pos = TRUE)
conserved.markers.25 <- FindConservedMarkers(all.combined.sct, ident.1 = "25", grouping.var="group", only.pos = TRUE)
conserved.markers.26 <- FindConservedMarkers(all.combined.sct, ident.1 = "26", grouping.var="group", only.pos = TRUE)
conserved.markers.27 <- FindConservedMarkers(all.combined.sct, ident.1 = "27", grouping.var="group", only.pos = TRUE)
conserved.markers.28 <- FindConservedMarkers(all.combined.sct, ident.1 = "28", grouping.var="group", only.pos = TRUE)
conserved.markers.29 <- FindConservedMarkers(all.combined.sct, ident.1 = "29", grouping.var="group", only.pos = TRUE)
conserved.markers.30 <- FindConservedMarkers(all.combined.sct, ident.1 = "30", grouping.var="group", only.pos = TRUE)
conserved.markers.31 <- FindConservedMarkers(all.combined.sct, ident.1 = "31", grouping.var="group", only.pos = TRUE)
conserved.markers.32 <- FindConservedMarkers(all.combined.sct, ident.1 = "32", grouping.var="group", only.pos = TRUE)
conserved.markers.33 <- FindConservedMarkers(all.combined.sct, ident.1 = "33", grouping.var="group", only.pos = TRUE)
conserved.markers.34 <- FindConservedMarkers(all.combined.sct, ident.1 = "34", grouping.var="group", only.pos = TRUE)
conserved.markers.35 <- FindConservedMarkers(all.combined.sct, ident.1 = "35", grouping.var="group", only.pos = TRUE)
conserved.markers.36 <- FindConservedMarkers(all.combined.sct, ident.1 = "36", grouping.var="group", only.pos = TRUE)
conserved.markers.37 <- FindConservedMarkers(all.combined.sct, ident.1 = "37", grouping.var="group", only.pos = TRUE)
conserved.markers.38 <- FindConservedMarkers(all.combined.sct, ident.1 = "38", grouping.var="group", only.pos = TRUE)

# https://github.com/satijalab/seurat/blob/master/R/differential_expression.R
# https://github.com/satijalab/seurat/issues/741

# cluster 0
www <- conserved.markers.0
ccc <- "0"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)

cx <- as.data.frame(cx)

dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16

# www
# ION_p_val		1
# ION_avg_log2FC	2
# ION_pct.1		3
# ION_pct.2		4
# ION_p_val_adj		5
# Sham_p_val		6
# Sham_avg_log2FC	7
# Sham_pct.1		8
# Sham_pct.2		9
# Sham_p_val_adj	10
# max_pval		11
# minimump_p_val	12

www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])

dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]

conserved.markers.0.f <- cx.final

# cluster 1
www <- conserved.markers.1
ccc <- "1"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.1.f <- cx.final

# cluster 2
www <- conserved.markers.2
ccc <- "2"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.2.f <- cx.final

# cluster 3
www <- conserved.markers.3
ccc <- "3"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.3.f <- cx.final

# cluster 4
www <- conserved.markers.4
ccc <- "4"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.4.f <- cx.final

# cluster 5
www <- conserved.markers.5
ccc <- "5"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.5.f <- cx.final

# cluster 6
www <- conserved.markers.6
ccc <- "6"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.6.f <- cx.final

# cluster 7
www <- conserved.markers.7
ccc <- "7"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.7.f <- cx.final

# cluster 8
www <- conserved.markers.8
ccc <- "8"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.8.f <- cx.final

# cluster 9
www <- conserved.markers.9
ccc <- "9"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.9.f <- cx.final

# cluster 10
www <- conserved.markers.10
ccc <- "10"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.10.f <- cx.final

# cluster 11
www <- conserved.markers.11
ccc <- "11"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.11.f <- cx.final

# cluster 12
www <- conserved.markers.12
ccc <- "12"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.12.f <- cx.final

# cluster 13
www <- conserved.markers.13
ccc <- "13"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.13.f <- cx.final

# cluster 14
www <- conserved.markers.14
ccc <- "14"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.14.f <- cx.final

# cluster 15
www <- conserved.markers.15
ccc <- "15"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.15.f <- cx.final

# cluster 16
www <- conserved.markers.16
ccc <- "16"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.16.f <- cx.final

# cluster 17
www <- conserved.markers.17
ccc <- "17"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.17.f <- cx.final

# cluster 18
www <- conserved.markers.18
ccc <- "18"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.18.f <- cx.final

# cluster 19
www <- conserved.markers.19
ccc <- "19"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.19.f <- cx.final

# cluster 20
www <- conserved.markers.20
ccc <- "20"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.20.f <- cx.final

# cluster 21
www <- conserved.markers.21
ccc <- "21"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.21.f <- cx.final

# cluster 22
www <- conserved.markers.22
ccc <- "22"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.22.f <- cx.final

# cluster 23
www <- conserved.markers.23
ccc <- "23"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.23.f <- cx.final

# cluster 24
www <- conserved.markers.24
ccc <- "24"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.24.f <- cx.final

# cluster 25
www <- conserved.markers.25
ccc <- "25"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.25.f <- cx.final

# cluster 26
www <- conserved.markers.26
ccc <- "26"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.26.f <- cx.final

# cluster 27
www <- conserved.markers.27
ccc <- "27"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.27.f <- cx.final

# cluster 28
www <- conserved.markers.28
ccc <- "28"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.28.f <- cx.final

# cluster 29
www <- conserved.markers.29
ccc <- "29"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.29.f <- cx.final

# cluster 30
www <- conserved.markers.30
ccc <- "30"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.30.f <- cx.final

# cluster 31
www <- conserved.markers.31
ccc <- "31"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.31.f <- cx.final

# cluster 32
www <- conserved.markers.32
ccc <- "32"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.32.f <- cx.final

# cluster 33
www <- conserved.markers.33
ccc <- "33"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.33.f <- cx.final

# cluster 34
www <- conserved.markers.34
ccc <- "34"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.34.f <- cx.final

# cluster 35
www <- conserved.markers.35
ccc <- "35"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.35.f <- cx.final

# cluster 36
www <- conserved.markers.36
ccc <- "36"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.36.f <- cx.final

# cluster 37
www <- conserved.markers.37
ccc <- "37"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- Idents(all.combined.sct)
	w <- as.character(w)
	w <- w != ccc
	grab.non.0.ion <- all.combined.sct[,w]
	grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
	grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
	grab.non.0.ion <- as.matrix(grab.non.0.ion)
	grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.non.0.ion <- grab.non.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
	grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
	grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
	grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
	grab.non.0.ion.total <- rep("NA",dim(www)[1])
	grab.non.0.ion.n <- rep("NA",dim(www)[1])
	grab.non.0.ion.mean <- rep("NA",dim(www)[1])
	grab.non.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- Idents(all.combined.sct)
	w <- as.character(w)
	w <- w != ccc
	grab.non.0.sham <- all.combined.sct[,w]
	grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
	grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
	grab.non.0.sham <- as.matrix(grab.non.0.sham)
	grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.non.0.sham <- grab.non.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
	grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
	grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
	grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
	grab.non.0.sham.total <- rep("NA",dim(www)[1])
	grab.non.0.sham.n <- rep("NA",dim(www)[1])
	grab.non.0.sham.mean <- rep("NA",dim(www)[1])
	grab.non.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
temp <- dimnames(www)[[2]]
temp1 <- grep("Sham",temp)
temp2 <- grep("Ion",temp)
if(length(temp1)>0 & length(temp2)>0) {
	dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
			       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
			       "ION_in_Cluster_expressed_percent",
			       "ION_not_in_Cluster_expressed_percent",
			       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
			       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
			       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
			       "Sham_in_Cluster_expressed_percent",
			       "Sham_not_in_Cluster_expressed_percent",
			       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
			       "Maximum_pvalue_observed",
			       "Minimum_pvalue_observed")
}
if(length(temp1)>0 & length(temp2)==0) {
	temp3 <- rep("NA",dim(www)[1])
	www <- cbind(temp3,temp3,temp3,temp3,temp3,www,temp3,temp3)
	dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
			       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
			       "ION_in_Cluster_expressed_percent",
			       "ION_not_in_Cluster_expressed_percent",
			       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
			       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
			       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
			       "Sham_in_Cluster_expressed_percent",
			       "Sham_not_in_Cluster_expressed_percent",
			       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
			       "Maximum_pvalue_observed",
			       "Minimum_pvalue_observed")
}
if(length(temp1)==0 & length(temp2)>0) {
	temp3 <- rep("NA",dim(www)[1])
	www <- cbind(www,temp3,temp3,temp3,temp3,temp3,tmep3,temp3)
	dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
			       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
			       "ION_in_Cluster_expressed_percent",
			       "ION_not_in_Cluster_expressed_percent",
			       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
			       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
			       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
			       "Sham_in_Cluster_expressed_percent",
			       "Sham_not_in_Cluster_expressed_percent",
			       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
			       "Maximum_pvalue_observed",
			       "Minimum_pvalue_observed")
}

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.37.f <- cx.final

# cluster 38
www <- conserved.markers.38
ccc <- "38"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- all.combined.sct[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(all.combined.sct, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(all.combined.sct)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- all.combined.sct[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.38.f <- cx.final

wb <- createWorkbook("conserved.markers.across.ION.Sham.per.cluster")
addWorksheet(wb, "conserved.markers.0")
writeData(wb, sheet = "conserved.markers.0", conserved.markers.0.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "conserved.markers.1")
writeData(wb, sheet = "conserved.markers.1", conserved.markers.1.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.2")
writeData(wb, sheet = "conserved.markers.2", conserved.markers.2.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.3")
writeData(wb, sheet = "conserved.markers.3", conserved.markers.3.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.4")
writeData(wb, sheet = "conserved.markers.4", conserved.markers.4.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.5")
writeData(wb, sheet = "conserved.markers.5", conserved.markers.5.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.6")
writeData(wb, sheet = "conserved.markers.6", conserved.markers.6.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.7")
writeData(wb, sheet = "conserved.markers.7", conserved.markers.7.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.8")
writeData(wb, sheet = "conserved.markers.8", conserved.markers.8.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.9")
writeData(wb, sheet = "conserved.markers.9", conserved.markers.9.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.10")
writeData(wb, sheet = "conserved.markers.10", conserved.markers.10.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.11")
writeData(wb, sheet = "conserved.markers.11", conserved.markers.11.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.12")
writeData(wb, sheet = "conserved.markers.12", conserved.markers.12.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.13")
writeData(wb, sheet = "conserved.markers.13", conserved.markers.13.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.14")
writeData(wb, sheet = "conserved.markers.14", conserved.markers.14.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.15")
writeData(wb, sheet = "conserved.markers.15", conserved.markers.15.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.16")
writeData(wb, sheet = "conserved.markers.16", conserved.markers.16.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.17")
writeData(wb, sheet = "conserved.markers.17", conserved.markers.17.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.18")
writeData(wb, sheet = "conserved.markers.18", conserved.markers.18.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.19")
writeData(wb, sheet = "conserved.markers.19", conserved.markers.19.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.20")
writeData(wb, sheet = "conserved.markers.20", conserved.markers.20.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.21")
writeData(wb, sheet = "conserved.markers.21", conserved.markers.21.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.22")
writeData(wb, sheet = "conserved.markers.22", conserved.markers.22.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.23")
writeData(wb, sheet = "conserved.markers.23", conserved.markers.23.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.24")
writeData(wb, sheet = "conserved.markers.24", conserved.markers.24.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.25")
writeData(wb, sheet = "conserved.markers.25", conserved.markers.25.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.26")
writeData(wb, sheet = "conserved.markers.26", conserved.markers.26.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.27")
writeData(wb, sheet = "conserved.markers.27", conserved.markers.27.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.28")
writeData(wb, sheet = "conserved.markers.28", conserved.markers.28.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.29")
writeData(wb, sheet = "conserved.markers.29", conserved.markers.29.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.30")
writeData(wb, sheet = "conserved.markers.30", conserved.markers.30.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.31")
writeData(wb, sheet = "conserved.markers.31", conserved.markers.31.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.32")
writeData(wb, sheet = "conserved.markers.32", conserved.markers.32.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.33")
writeData(wb, sheet = "conserved.markers.33", conserved.markers.33.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.34")
writeData(wb, sheet = "conserved.markers.34", conserved.markers.34.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.35")
writeData(wb, sheet = "conserved.markers.35", conserved.markers.35.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.36")
writeData(wb, sheet = "conserved.markers.36", conserved.markers.36.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.37")
writeData(wb, sheet = "conserved.markers.37", conserved.markers.37.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "conserved.markers.38")
writeData(wb, sheet = "conserved.markers.38", conserved.markers.38.f, colNames = TRUE, rowNames = TRUE)
saveWorkbook(wb, "conserved.markers.across.ION.Sham.per.cluster.xlsx", overwrite = TRUE)
rm(wb)

markers.to.plot <- c(rownames(conserved.markers.0)[1],
			rownames(conserved.markers.1)[1],
			rownames(conserved.markers.2)[1],
			rownames(conserved.markers.3)[1],
			rownames(conserved.markers.4)[1],
			rownames(conserved.markers.5)[1],
			rownames(conserved.markers.6)[1],
			rownames(conserved.markers.7)[1],
			rownames(conserved.markers.8)[1],
			rownames(conserved.markers.9)[1],
			rownames(conserved.markers.10)[1],
			rownames(conserved.markers.11)[1],
			rownames(conserved.markers.12)[1],
			rownames(conserved.markers.13)[1],
			rownames(conserved.markers.14)[1],
			rownames(conserved.markers.15)[1],
			rownames(conserved.markers.16)[1],
			rownames(conserved.markers.17)[1],
			rownames(conserved.markers.18)[1],
			rownames(conserved.markers.19)[1],
			rownames(conserved.markers.20)[1],
			rownames(conserved.markers.21)[1],
			rownames(conserved.markers.22)[1],
			rownames(conserved.markers.23)[1],
			rownames(conserved.markers.24)[1],
			rownames(conserved.markers.25)[1],
			rownames(conserved.markers.26)[1],
			rownames(conserved.markers.27)[1],
			rownames(conserved.markers.28)[1],
			rownames(conserved.markers.29)[1],
			rownames(conserved.markers.30)[1],
			rownames(conserved.markers.31)[1],
			rownames(conserved.markers.32)[1],
			rownames(conserved.markers.33)[1],
			rownames(conserved.markers.34)[1],
			rownames(conserved.markers.35)[1],
			rownames(conserved.markers.36)[1],
			rownames(conserved.markers.37)[1],
			rownames(conserved.markers.38)[1])

markers.to.plot <- unique(sort(markers.to.plot))

DotPlot(all.combined.sct, features = markers.to.plot, dot.scale = 8) + RotatedAxis()

pdf("conserved.markers.across.ION.Sham.per.cluster.violin.plots.pdf")
for(i in 1:length(markers.to.plot)) {
	print(VlnPlot(all.combined.sct, features = markers.to.plot[i], pt.size = 0, combine = FALSE))
}
dev.off()

pdf("conserved.markers.across.ION.Sham.per.cluster.umap.plots.pdf")
for(i in 1:length(markers.to.plot)) {
	print(FeaturePlot(all.combined.sct, features = markers.to.plot[i]))
}
dev.off()

#------------------------------------------------------------------------------
# plot top 5 markers
# https://github.com/ycl6/StackedVlnPlot#:~:text=Given%20a%20data.frame%20object%20and%20a%20vector%20of,be%20created%20with%20the%20ggplot2%20package.%20Prepare%20data.frame
#------------------------------------------------------------------------------

DefaultAssay(all.combined.sct) <- "RNA"

# cluster 0

features <- c("Camk2a",
"Unc5d",
"Pcsk2",
"Rasgrf2",
"Cux2")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_0.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_0.svg",height=10)
print(p)
dev.off()

# cluster 1

features <- c("Tmem178",
"Zfpm2",
"Nos1ap",
"Foxp2",
"Garnl3")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_1.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_1.svg",height=10)
print(p)
dev.off()

# cluster 2

features <- c("Epha6",
"Rfx3",
"Adgrl3",
"Dgkb",
"Cacna1e")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_2.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_2.svg",height=10)
print(p)
dev.off()

# cluster 3

features <- c("Ptprd",
"Celf2",
"Nrg1",
"Sgcz",
"Nlgn1")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_3.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_3.svg",height=10)
print(p)
dev.off()

# cluster 4

features <- c("Adam33",
"Rspo1",
"Gm15584",
"Vgll4")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_4.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_4.svg",height=10)
print(p)
dev.off()

# cluster 5

features <- c("Zmat4",
"Nell1os",
"Rspo1",
"Adam33",
"Whrn")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_5.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_5.svg",height=10)
print(p)
dev.off()

# cluster 6

features <- c("Gpc5",
"Zbtb20",
"Slc1a2",
"Glis3",
"Maml2")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_6.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_6.svg",height=10)
print(p)
dev.off()

# cluster 7

features <- c("Runx2",
"Fmn1",
"6330411D24Rik",
"Tmem108",
"Cemip")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_7.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_7.svg",height=10)
print(p)
dev.off()

# cluster 8

features <- c("Pld5",
"Gm42953",
"Gm40331",
"Gm16599",
"Tanc1")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_8.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_8.svg",height=10)
print(p)
dev.off()

# cluster 9

features <- c("4933432K03Rik",
"Blnk",
"Ptpru",
"Rspo2",
"Arhgap31")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_9.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_9.svg",height=10)
print(p)
dev.off()

# cluster 10

features <- c("Mapk4",
"Maml3",
"Baz1a",
"Tnfaip6",
"Arl15")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_10.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_10.svg",height=10)
print(p)
dev.off()

# cluster 11

features <- c("Plp1",
"Mal",
"Tmeff2",
"Pde4b",
"Mobp")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_11.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_11.svg",height=10)
print(p)
dev.off()

# cluster 12

features <- c("Mgat4c",
"Etl4",
"Sst",
"Gria1",
"Nkain3")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_12.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_12.svg",height=10)
print(p)
dev.off()

# cluster 13

features <- c("Gfra1",
"Olfm3",
"Ntng2",
"Tmem163",
"Ptprt")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_13.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_13.svg",height=10)
print(p)
dev.off()

# cluster 14

features <- c("Il1rapl2",
"Pde1a",
"Gm10635",
"Deptor",
"AC129186.1")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_14.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_14.svg",height=10)
print(p)
dev.off()

# cluster 15

features <- c("Slc26a4",
"Lgr5",
"Rspo2",
"Nkain2",
"C1ql3")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_15.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_15.svg",height=10)
print(p)
dev.off()

# cluster 16

features <- c("Fgf13",
"Reln",
"Ptprm",
"Zfp536",
"A830018L16Rik")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_16.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_16.svg",height=10)
print(p)
dev.off()

# cluster 17

features <- c("Vip",
"Adarb2",
"Tac2",
"Slc44a5",
"Crh")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_17.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_17.svg",height=10)
print(p)
dev.off()

# cluster 18

features <- c("Galntl6",
"Cntnap5c",
"Nxph1",
"Vwc2",
"Gm26905")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_18.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_18.svg",height=10)
print(p)
dev.off()

# cluster 19

features <- c("Pex5l",
"Tox",
"Dscaml1",
"4930419G24Rik",
"Pcsk5")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_19.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_19.svg",height=10)
print(p)
dev.off()

# cluster 20

features <- c("4930467D21Rik",
"Naa11",
"Hgf",
"Pld5",
"Col26a1")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_20.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_20.svg",height=10)
print(p)
dev.off()

# cluster 21

features <- c("Tshz2",
"Gm26883",
"Dkk2",
"Lcp1",
"Slc17a8")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_21.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_21.svg",height=10)
print(p)
dev.off()

# cluster 22

features <- c("Lhfpl3",
"Ptprz1",
"Epn2",
"Vcan",
"Abtb2")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_22.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_22.svg",height=10)
print(p)
dev.off()

# cluster 23

features <- c("Hexb",
"C1qb",
"Tgfbr1",
"Lrmda",
"C1qa")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_23.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_23.svg",height=10)
print(p)
dev.off()

# cluster 24

features <- c("Cdh18",
"Hs3st4",
"Svil",
"Gng12",
"Sulf1")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_24.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_24.svg",height=10)
print(p)
dev.off()

# cluster 25

features <- c("Vwc2l",
"Gm2164",
"Vat1l",
"Sv2c",
"Erg")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_25.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_25.svg",height=10)
print(p)
dev.off()

# cluster 26

features <- c("Meis2",
"Dach1",
"Gm10754",
"Rarb",
"Adcy5")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_26.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_26.svg",height=10)
print(p)
dev.off()

# cluster 27

features <- c("Ptgds",
"Apod",
"Slc6a20a",
"Slc7a11",
"Atp1a2")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_27.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_27.svg",height=10)
print(p)
dev.off()

# cluster 28

features <- c("Mgp",
"Bnc2",
"Fbxl7",
"Slc47a1",
"Gm6260")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_28.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_28.svg",height=10)
print(p)
dev.off()

# cluster 29

features <- c("Tmem132a",
"Itm2c",
"Calr",
"Psap",
"Nptx1")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_29.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_29.svg",height=10)
print(p)
dev.off()

# cluster 30

features <- c("Flt1",
"Cldn5",
"Vtn",
"Rgs5",
"Ptprb")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_30.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_30.svg",height=10)
print(p)
dev.off()

# cluster 31

features <- c("9630013A20Rik",
"Tcf7l2",
"Bcas1",
"Cnksr3",
"Enpp6")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_31.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_31.svg",height=10)
print(p)
dev.off()

# cluster 32

features <- c("Chrnb3",
"Egflam",
"Syt9",
"Scml2",
"AC156026.1")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_32.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_32.svg",height=10)
print(p)
dev.off()

# cluster 33

features <- c("Nos1",
"Tacr1",
"Chodl",
"Ntn1",
"Crhbp")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_33.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_33.svg",height=10)
print(p)
dev.off()

# cluster 34

features <- c("Unc5b",
"Epb41l4a",
"Gpr176",
"Nek7",
"Mctp2")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_34.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_34.svg",height=10)
print(p)
dev.off()

# cluster 35

features <- c("Ndst4",
"Plcxd3",
"Ppfibp1",
"Cacng5",
"Fam19a2")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_35.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_35.svg",height=10)
print(p)
dev.off()

# cluster 36

features <- c("Prdm16",
"Daam2",
"Rfx4",
"Htra1",
"Mertk")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_36.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_36.svg",height=10)
print(p)
dev.off()

# cluster 38

features <- c("Sall1",
"Runx1",
"Arhgap45",
"Siglech",
"Adap2")
p <- VlnPlot(all.combined.sct,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("Violin_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_38.svg",width=10)
print(p)
dev.off()
p <- DotPlot(all.combined.sct,features=features)+RotatedAxis()
p <- p + ylab("Cluster") + xlab("Gene")
svg("Dot_Plot_Top5_Markers_By_Pvalue_Then_Fold_For_Cluster_38.svg",height=10)
print(p)
dev.off()

#------------------------------------------------------------------------------
# Compare
# https://satijalab.org/seurat/articles/integration_introduction.html
#------------------------------------------------------------------------------

grab.0 <- subset(all.combined.sct, idents = "0")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.0.ion.vs.sham.markers)[c(1:12)]
avg.0.cells <- as.data.frame(log1p(AverageExpression(grab.0, verbose = FALSE)$RNA))
avg.0.cells$gene <- rownames(avg.0.cells)
p <- ggplot(avg.0.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 0")
pdf("differential.markers.between.ION.Sham.for.cluster.0.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.0, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.0, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 0"))
dev.off()
rm(grab.0)

grab.1 <- subset(all.combined.sct, idents = "1")
Idents(grab.1) <- grab.1@meta.data$group
cluster.1.ion.vs.sham.markers <- FindMarkers(grab.1, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.1.ion.vs.sham.markers)[c(1:12)]
avg.1.cells <- as.data.frame(log1p(AverageExpression(grab.1, verbose = FALSE)$RNA))
avg.1.cells$gene <- rownames(avg.1.cells)
p <- ggplot(avg.1.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 1")
pdf("differential.markers.between.ION.Sham.for.cluster.1.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.1, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.1, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 1"))
dev.off()
rm(grab.1)

grab.2 <- subset(all.combined.sct, idents = "2")
Idents(grab.2) <- grab.2@meta.data$group
cluster.2.ion.vs.sham.markers <- FindMarkers(grab.2, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.2.ion.vs.sham.markers)[c(1:12)]
avg.2.cells <- as.data.frame(log1p(AverageExpression(grab.2, verbose = FALSE)$RNA))
avg.2.cells$gene <- rownames(avg.2.cells)
p <- ggplot(avg.2.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 2")
pdf("differential.markers.between.ION.Sham.for.cluster.2.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.2, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.2, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 2"))
dev.off()
rm(grab.2)

grab.3 <- subset(all.combined.sct, idents = "3")
Idents(grab.3) <- grab.3@meta.data$group
cluster.3.ion.vs.sham.markers <- FindMarkers(grab.3, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.3.ion.vs.sham.markers)[c(1:12)]
avg.3.cells <- as.data.frame(log1p(AverageExpression(grab.3, verbose = FALSE)$RNA))
avg.3.cells$gene <- rownames(avg.3.cells)
p <- ggplot(avg.3.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 3")
pdf("differential.markers.between.ION.Sham.for.cluster.3.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.3, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.3, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 3"))
dev.off()
rm(grab.3)

grab.4 <- subset(all.combined.sct, idents = "4")
Idents(grab.4) <- grab.4@meta.data$group
cluster.4.ion.vs.sham.markers <- FindMarkers(grab.4, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.4.ion.vs.sham.markers)[c(1:12)]
avg.4.cells <- as.data.frame(log1p(AverageExpression(grab.4, verbose = FALSE)$RNA))
avg.4.cells$gene <- rownames(avg.4.cells)
p <- ggplot(avg.4.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 4")
pdf("differential.markers.between.ION.Sham.for.cluster.4.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.4, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.4, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 4"))
dev.off()
rm(grab.4)

grab.5 <- subset(all.combined.sct, idents = "5")
Idents(grab.5) <- grab.5@meta.data$group
cluster.5.ion.vs.sham.markers <- FindMarkers(grab.5, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.5.ion.vs.sham.markers)[c(1:12)]
avg.5.cells <- as.data.frame(log1p(AverageExpression(grab.5, verbose = FALSE)$RNA))
avg.5.cells$gene <- rownames(avg.5.cells)
p <- ggplot(avg.5.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 5")
pdf("differential.markers.between.ION.Sham.for.cluster.5.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.5, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.5, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 5"))
dev.off()
rm(grab.5)

grab.6 <- subset(all.combined.sct, idents = "6")
Idents(grab.6) <- grab.6@meta.data$group
cluster.6.ion.vs.sham.markers <- FindMarkers(grab.6, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.6.ion.vs.sham.markers)[c(1:12)]
avg.6.cells <- as.data.frame(log1p(AverageExpression(grab.6, verbose = FALSE)$RNA))
avg.6.cells$gene <- rownames(avg.6.cells)
p <- ggplot(avg.6.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 6")
pdf("differential.markers.between.ION.Sham.for.cluster.6.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.6, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.6, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 6"))
dev.off()
rm(grab.6)

grab.7 <- subset(all.combined.sct, idents = "7")
Idents(grab.7) <- grab.7@meta.data$group
cluster.7.ion.vs.sham.markers <- FindMarkers(grab.7, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.7.ion.vs.sham.markers)[c(1:12)]
avg.7.cells <- as.data.frame(log1p(AverageExpression(grab.7, verbose = FALSE)$RNA))
avg.7.cells$gene <- rownames(avg.7.cells)
p <- ggplot(avg.7.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 7")
pdf("differential.markers.between.ION.Sham.for.cluster.7.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.7, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.7, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 7"))
dev.off()
rm(grab.7)

grab.8 <- subset(all.combined.sct, idents = "8")
Idents(grab.8) <- grab.8@meta.data$group
cluster.8.ion.vs.sham.markers <- FindMarkers(grab.8, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.8.ion.vs.sham.markers)[c(1:12)]
avg.8.cells <- as.data.frame(log1p(AverageExpression(grab.8, verbose = FALSE)$RNA))
avg.8.cells$gene <- rownames(avg.8.cells)
p <- ggplot(avg.8.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 8")
pdf("differential.markers.between.ION.Sham.for.cluster.8.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.8, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.8, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 8"))
dev.off()
rm(grab.8)

grab.9 <- subset(all.combined.sct, idents = "9")
Idents(grab.9) <- grab.9@meta.data$group
cluster.9.ion.vs.sham.markers <- FindMarkers(grab.9, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.9.ion.vs.sham.markers)[c(1:12)]
avg.9.cells <- as.data.frame(log1p(AverageExpression(grab.9, verbose = FALSE)$RNA))
avg.9.cells$gene <- rownames(avg.9.cells)
p <- ggplot(avg.9.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 9")
pdf("differential.markers.between.ION.Sham.for.cluster.9.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.9, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.9, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 9"))
dev.off()
rm(grab.9)

grab.10 <- subset(all.combined.sct, idents = "10")
Idents(grab.10) <- grab.10@meta.data$group
cluster.10.ion.vs.sham.markers <- FindMarkers(grab.10, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.10.ion.vs.sham.markers)[c(1:12)]
avg.10.cells <- as.data.frame(log1p(AverageExpression(grab.10, verbose = FALSE)$RNA))
avg.10.cells$gene <- rownames(avg.10.cells)
p <- ggplot(avg.10.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 10")
pdf("differential.markers.between.ION.Sham.for.cluster.10.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.10, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.10, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 10"))
dev.off()
rm(grab.10)

grab.11 <- subset(all.combined.sct, idents = "11")
Idents(grab.11) <- grab.11@meta.data$group
cluster.11.ion.vs.sham.markers <- FindMarkers(grab.11, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.11.ion.vs.sham.markers)[c(1:12)]
avg.11.cells <- as.data.frame(log1p(AverageExpression(grab.11, verbose = FALSE)$RNA))
avg.11.cells$gene <- rownames(avg.11.cells)
p <- ggplot(avg.11.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 11")
pdf("differential.markers.between.ION.Sham.for.cluster.11.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.11, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.11, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 11"))
dev.off()
rm(grab.11)

grab.12 <- subset(all.combined.sct, idents = "12")
Idents(grab.12) <- grab.12@meta.data$group
cluster.12.ion.vs.sham.markers <- FindMarkers(grab.12, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.12.ion.vs.sham.markers)[c(1:12)]
avg.12.cells <- as.data.frame(log1p(AverageExpression(grab.12, verbose = FALSE)$RNA))
avg.12.cells$gene <- rownames(avg.12.cells)
p <- ggplot(avg.12.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 12")
pdf("differential.markers.between.ION.Sham.for.cluster.12.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.12, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.12, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 12"))
dev.off()
rm(grab.12)

grab.13 <- subset(all.combined.sct, idents = "13")
Idents(grab.13) <- grab.13@meta.data$group
cluster.13.ion.vs.sham.markers <- FindMarkers(grab.13, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.13.ion.vs.sham.markers)[c(1:12)]
avg.13.cells <- as.data.frame(log1p(AverageExpression(grab.13, verbose = FALSE)$RNA))
avg.13.cells$gene <- rownames(avg.13.cells)
p <- ggplot(avg.13.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 13")
pdf("differential.markers.between.ION.Sham.for.cluster.13.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.13, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.13, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 13"))
dev.off()
rm(grab.13)

grab.14 <- subset(all.combined.sct, idents = "14")
Idents(grab.14) <- grab.14@meta.data$group
cluster.14.ion.vs.sham.markers <- FindMarkers(grab.14, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.14.ion.vs.sham.markers)[c(1:12)]
avg.14.cells <- as.data.frame(log1p(AverageExpression(grab.14, verbose = FALSE)$RNA))
avg.14.cells$gene <- rownames(avg.14.cells)
p <- ggplot(avg.14.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 14")
pdf("differential.markers.between.ION.Sham.for.cluster.14.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.14, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.14, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 14"))
dev.off()
rm(grab.14)

grab.15 <- subset(all.combined.sct, idents = "15")
Idents(grab.15) <- grab.15@meta.data$group
cluster.15.ion.vs.sham.markers <- FindMarkers(grab.15, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.15.ion.vs.sham.markers)[c(1:12)]
avg.15.cells <- as.data.frame(log1p(AverageExpression(grab.15, verbose = FALSE)$RNA))
avg.15.cells$gene <- rownames(avg.15.cells)
p <- ggplot(avg.15.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 15")
pdf("differential.markers.between.ION.Sham.for.cluster.15.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.15, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.15, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 15"))
dev.off()
rm(grab.15)

grab.16 <- subset(all.combined.sct, idents = "16")
Idents(grab.16) <- grab.16@meta.data$group
cluster.16.ion.vs.sham.markers <- FindMarkers(grab.16, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.16.ion.vs.sham.markers)[c(1:12)]
avg.16.cells <- as.data.frame(log1p(AverageExpression(grab.16, verbose = FALSE)$RNA))
avg.16.cells$gene <- rownames(avg.16.cells)
p <- ggplot(avg.16.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 16")
pdf("differential.markers.between.ION.Sham.for.cluster.16.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.16, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.16, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 16"))
dev.off()
rm(grab.16)

grab.17 <- subset(all.combined.sct, idents = "17")
Idents(grab.17) <- grab.17@meta.data$group
cluster.17.ion.vs.sham.markers <- FindMarkers(grab.17, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.17.ion.vs.sham.markers)[c(1:12)]
avg.17.cells <- as.data.frame(log1p(AverageExpression(grab.17, verbose = FALSE)$RNA))
avg.17.cells$gene <- rownames(avg.17.cells)
p <- ggplot(avg.17.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 17")
pdf("differential.markers.between.ION.Sham.for.cluster.17.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.17, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.17, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 17"))
dev.off()
rm(grab.17)

grab.18 <- subset(all.combined.sct, idents = "18")
Idents(grab.18) <- grab.18@meta.data$group
cluster.18.ion.vs.sham.markers <- FindMarkers(grab.18, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.18.ion.vs.sham.markers)[c(1:12)]
avg.18.cells <- as.data.frame(log1p(AverageExpression(grab.18, verbose = FALSE)$RNA))
avg.18.cells$gene <- rownames(avg.18.cells)
p <- ggplot(avg.18.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 18")
pdf("differential.markers.between.ION.Sham.for.cluster.18.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.18, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.18, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 18"))
dev.off()
rm(grab.18)

grab.19 <- subset(all.combined.sct, idents = "19")
Idents(grab.19) <- grab.19@meta.data$group
cluster.19.ion.vs.sham.markers <- FindMarkers(grab.19, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.19.ion.vs.sham.markers)[c(1:12)]
avg.19.cells <- as.data.frame(log1p(AverageExpression(grab.19, verbose = FALSE)$RNA))
avg.19.cells$gene <- rownames(avg.19.cells)
p <- ggplot(avg.19.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 19")
pdf("differential.markers.between.ION.Sham.for.cluster.19.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.19, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.19, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 19"))
dev.off()
rm(grab.19)

grab.20 <- subset(all.combined.sct, idents = "20")
Idents(grab.20) <- grab.20@meta.data$group
cluster.20.ion.vs.sham.markers <- FindMarkers(grab.20, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.20.ion.vs.sham.markers)[c(1:12)]
avg.20.cells <- as.data.frame(log1p(AverageExpression(grab.20, verbose = FALSE)$RNA))
avg.20.cells$gene <- rownames(avg.20.cells)
p <- ggplot(avg.20.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 20")
pdf("differential.markers.between.ION.Sham.for.cluster.20.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.20, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.20, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 20"))
dev.off()
rm(grab.20)

grab.21 <- subset(all.combined.sct, idents = "21")
Idents(grab.21) <- grab.21@meta.data$group
cluster.21.ion.vs.sham.markers <- FindMarkers(grab.21, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.21.ion.vs.sham.markers)[c(1:12)]
avg.21.cells <- as.data.frame(log1p(AverageExpression(grab.21, verbose = FALSE)$RNA))
avg.21.cells$gene <- rownames(avg.21.cells)
p <- ggplot(avg.21.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 21")
pdf("differential.markers.between.ION.Sham.for.cluster.21.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.21, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.21, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 21"))
dev.off()
rm(grab.21)

grab.22 <- subset(all.combined.sct, idents = "22")
Idents(grab.22) <- grab.22@meta.data$group
cluster.22.ion.vs.sham.markers <- FindMarkers(grab.22, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.22.ion.vs.sham.markers)[c(1:12)]
avg.22.cells <- as.data.frame(log1p(AverageExpression(grab.22, verbose = FALSE)$RNA))
avg.22.cells$gene <- rownames(avg.22.cells)
p <- ggplot(avg.22.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 22")
pdf("differential.markers.between.ION.Sham.for.cluster.22.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.22, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.22, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 22"))
dev.off()
rm(grab.22)

grab.23 <- subset(all.combined.sct, idents = "23")
Idents(grab.23) <- grab.23@meta.data$group
cluster.23.ion.vs.sham.markers <- FindMarkers(grab.23, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.23.ion.vs.sham.markers)[c(1:12)]
avg.23.cells <- as.data.frame(log1p(AverageExpression(grab.23, verbose = FALSE)$RNA))
avg.23.cells$gene <- rownames(avg.23.cells)
p <- ggplot(avg.23.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 23")
pdf("differential.markers.between.ION.Sham.for.cluster.23.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.23, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.23, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 23"))
dev.off()
rm(grab.23)

grab.24 <- subset(all.combined.sct, idents = "24")
Idents(grab.24) <- grab.24@meta.data$group
cluster.24.ion.vs.sham.markers <- FindMarkers(grab.24, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.24.ion.vs.sham.markers)[c(1:12)]
avg.24.cells <- as.data.frame(log1p(AverageExpression(grab.24, verbose = FALSE)$RNA))
avg.24.cells$gene <- rownames(avg.24.cells)
p <- ggplot(avg.24.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 24")
pdf("differential.markers.between.ION.Sham.for.cluster.24.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.24, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.24, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 24"))
dev.off()
rm(grab.24)

grab.25 <- subset(all.combined.sct, idents = "25")
Idents(grab.25) <- grab.25@meta.data$group
cluster.25.ion.vs.sham.markers <- FindMarkers(grab.25, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.25.ion.vs.sham.markers)[c(1:12)]
avg.25.cells <- as.data.frame(log1p(AverageExpression(grab.25, verbose = FALSE)$RNA))
avg.25.cells$gene <- rownames(avg.25.cells)
p <- ggplot(avg.25.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 25")
pdf("differential.markers.between.ION.Sham.for.cluster.25.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.25, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.25, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 25"))
dev.off()
rm(grab.25)

grab.26 <- subset(all.combined.sct, idents = "26")
Idents(grab.26) <- grab.26@meta.data$group
cluster.26.ion.vs.sham.markers <- FindMarkers(grab.26, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.26.ion.vs.sham.markers)[c(1:12)]
avg.26.cells <- as.data.frame(log1p(AverageExpression(grab.26, verbose = FALSE)$RNA))
avg.26.cells$gene <- rownames(avg.26.cells)
p <- ggplot(avg.26.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 26")
pdf("differential.markers.between.ION.Sham.for.cluster.26.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.26, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.26, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 26"))
dev.off()
rm(grab.26)

grab.27 <- subset(all.combined.sct, idents = "27")
Idents(grab.27) <- grab.27@meta.data$group
cluster.27.ion.vs.sham.markers <- FindMarkers(grab.27, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.27.ion.vs.sham.markers)[c(1:12)]
avg.27.cells <- as.data.frame(log1p(AverageExpression(grab.27, verbose = FALSE)$RNA))
avg.27.cells$gene <- rownames(avg.27.cells)
p <- ggplot(avg.27.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 27")
pdf("differential.markers.between.ION.Sham.for.cluster.27.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.27, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.27, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 27"))
dev.off()
rm(grab.27)

grab.28 <- subset(all.combined.sct, idents = "28")
Idents(grab.28) <- grab.28@meta.data$group
cluster.28.ion.vs.sham.markers <- FindMarkers(grab.28, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.28.ion.vs.sham.markers)[c(1:12)]
avg.28.cells <- as.data.frame(log1p(AverageExpression(grab.28, verbose = FALSE)$RNA))
avg.28.cells$gene <- rownames(avg.28.cells)
p <- ggplot(avg.28.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 28")
pdf("differential.markers.between.ION.Sham.for.cluster.28.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.28, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.28, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 28"))
dev.off()
rm(grab.28)

grab.29 <- subset(all.combined.sct, idents = "29")
Idents(grab.29) <- grab.29@meta.data$group
cluster.29.ion.vs.sham.markers <- FindMarkers(grab.29, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.29.ion.vs.sham.markers)[c(1:12)]
avg.29.cells <- as.data.frame(log1p(AverageExpression(grab.29, verbose = FALSE)$RNA))
avg.29.cells$gene <- rownames(avg.29.cells)
p <- ggplot(avg.29.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 29")
pdf("differential.markers.between.ION.Sham.for.cluster.29.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.29, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.29, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 29"))
dev.off()
rm(grab.29)

grab.30 <- subset(all.combined.sct, idents = "30")
Idents(grab.30) <- grab.30@meta.data$group
cluster.30.ion.vs.sham.markers <- FindMarkers(grab.30, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.30.ion.vs.sham.markers)[c(1:12)]
avg.30.cells <- as.data.frame(log1p(AverageExpression(grab.30, verbose = FALSE)$RNA))
avg.30.cells$gene <- rownames(avg.30.cells)
p <- ggplot(avg.30.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 30")
pdf("differential.markers.between.ION.Sham.for.cluster.30.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.30, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.30, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 30"))
dev.off()
rm(grab.30)

grab.31 <- subset(all.combined.sct, idents = "31")
Idents(grab.31) <- grab.31@meta.data$group
cluster.31.ion.vs.sham.markers <- FindMarkers(grab.31, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.31.ion.vs.sham.markers)[c(1:12)]
avg.31.cells <- as.data.frame(log1p(AverageExpression(grab.31, verbose = FALSE)$RNA))
avg.31.cells$gene <- rownames(avg.31.cells)
p <- ggplot(avg.31.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 31")
pdf("differential.markers.between.ION.Sham.for.cluster.31.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.31, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.31, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 31"))
dev.off()
rm(grab.31)

grab.32 <- subset(all.combined.sct, idents = "32")
Idents(grab.32) <- grab.32@meta.data$group
cluster.32.ion.vs.sham.markers <- FindMarkers(grab.32, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.32.ion.vs.sham.markers)[c(1:12)]
avg.32.cells <- as.data.frame(log1p(AverageExpression(grab.32, verbose = FALSE)$RNA))
avg.32.cells$gene <- rownames(avg.32.cells)
p <- ggplot(avg.32.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 32")
pdf("differential.markers.between.ION.Sham.for.cluster.32.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.32, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.32, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 32"))
dev.off()
rm(grab.32)

grab.33 <- subset(all.combined.sct, idents = "33")
Idents(grab.33) <- grab.33@meta.data$group
cluster.33.ion.vs.sham.markers <- FindMarkers(grab.33, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.33.ion.vs.sham.markers)[c(1:12)]
avg.33.cells <- as.data.frame(log1p(AverageExpression(grab.33, verbose = FALSE)$RNA))
avg.33.cells$gene <- rownames(avg.33.cells)
p <- ggplot(avg.33.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 33")
pdf("differential.markers.between.ION.Sham.for.cluster.33.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.33, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.33, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 33"))
dev.off()
rm(grab.33)

grab.34 <- subset(all.combined.sct, idents = "34")
Idents(grab.34) <- grab.34@meta.data$group
cluster.34.ion.vs.sham.markers <- FindMarkers(grab.34, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.34.ion.vs.sham.markers)[c(1:12)]
avg.34.cells <- as.data.frame(log1p(AverageExpression(grab.34, verbose = FALSE)$RNA))
avg.34.cells$gene <- rownames(avg.34.cells)
p <- ggplot(avg.34.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 34")
pdf("differential.markers.between.ION.Sham.for.cluster.34.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.34, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.34, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 34"))
dev.off()
rm(grab.34)

grab.35 <- subset(all.combined.sct, idents = "35")
Idents(grab.35) <- grab.35@meta.data$group
cluster.35.ion.vs.sham.markers <- FindMarkers(grab.35, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.35.ion.vs.sham.markers)[c(1:12)]
avg.35.cells <- as.data.frame(log1p(AverageExpression(grab.35, verbose = FALSE)$RNA))
avg.35.cells$gene <- rownames(avg.35.cells)
p <- ggplot(avg.35.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 35")
pdf("differential.markers.between.ION.Sham.for.cluster.35.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.35, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.35, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 35"))
dev.off()
rm(grab.35)

grab.36 <- subset(all.combined.sct, idents = "36")
Idents(grab.36) <- grab.36@meta.data$group
cluster.36.ion.vs.sham.markers <- FindMarkers(grab.36, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.36.ion.vs.sham.markers)[c(1:12)]
avg.36.cells <- as.data.frame(log1p(AverageExpression(grab.36, verbose = FALSE)$RNA))
avg.36.cells$gene <- rownames(avg.36.cells)
p <- ggplot(avg.36.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 36")
pdf("differential.markers.between.ION.Sham.for.cluster.36.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.36, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.36, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 36"))
dev.off()
rm(grab.36)

grab.37 <- subset(all.combined.sct, idents = "37")
Idents(grab.37) <- grab.37@meta.data$group
cluster.37.ion.vs.sham.markers <- FindMarkers(grab.37, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.37.ion.vs.sham.markers)[c(1:12)]
avg.37.cells <- as.data.frame(log1p(AverageExpression(grab.37, verbose = FALSE)$RNA))
avg.37.cells$gene <- rownames(avg.37.cells)
p <- ggplot(avg.37.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 37")
pdf("differential.markers.between.ION.Sham.for.cluster.37.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.37, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.37, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 37"))
dev.off()
rm(grab.37)

grab.38 <- subset(all.combined.sct, idents = "38")
Idents(grab.38) <- grab.38@meta.data$group
cluster.38.ion.vs.sham.markers <- FindMarkers(grab.38, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.38.ion.vs.sham.markers)[c(1:12)]
avg.38.cells <- as.data.frame(log1p(AverageExpression(grab.38, verbose = FALSE)$RNA))
avg.38.cells$gene <- rownames(avg.38.cells)
p <- ggplot(avg.38.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 38")
pdf("differential.markers.between.ION.Sham.for.cluster.38.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.38, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.38, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 38"))
dev.off()
rm(grab.38)

# cluster 0
www <- cluster.0.ion.vs.sham.markers
ccc <- "0"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.0.ion.vs.sham.markers.f <- cx.final

# cluster 1
www <- cluster.1.ion.vs.sham.markers
ccc <- "1"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.1.ion.vs.sham.markers.f <- cx.final

# cluster 2
www <- cluster.2.ion.vs.sham.markers
ccc <- "2"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.2.ion.vs.sham.markers.f <- cx.final

# cluster 3
www <- cluster.3.ion.vs.sham.markers
ccc <- "3"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.3.ion.vs.sham.markers.f <- cx.final

# cluster 4
www <- cluster.4.ion.vs.sham.markers
ccc <- "4"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.4.ion.vs.sham.markers.f <- cx.final

# cluster 5
www <- cluster.5.ion.vs.sham.markers
ccc <- "5"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.5.ion.vs.sham.markers.f <- cx.final

# cluster 6
www <- cluster.6.ion.vs.sham.markers
ccc <- "6"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.6.ion.vs.sham.markers.f <- cx.final

# cluster 7
www <- cluster.7.ion.vs.sham.markers
ccc <- "7"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.7.ion.vs.sham.markers.f <- cx.final

# cluster 8
www <- cluster.8.ion.vs.sham.markers
ccc <- "8"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.8.ion.vs.sham.markers.f <- cx.final

# cluster 9
www <- cluster.9.ion.vs.sham.markers
ccc <- "9"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.9.ion.vs.sham.markers.f <- cx.final

# cluster 10
www <- cluster.10.ion.vs.sham.markers
ccc <- "10"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.10.ion.vs.sham.markers.f <- cx.final

# cluster 11
www <- cluster.11.ion.vs.sham.markers
ccc <- "11"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.11.ion.vs.sham.markers.f <- cx.final

# cluster 12
www <- cluster.12.ion.vs.sham.markers
ccc <- "12"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.12.ion.vs.sham.markers.f <- cx.final

# cluster 13
www <- cluster.13.ion.vs.sham.markers
ccc <- "13"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.13.ion.vs.sham.markers.f <- cx.final

# cluster 14
www <- cluster.14.ion.vs.sham.markers
ccc <- "14"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.14.ion.vs.sham.markers.f <- cx.final

# cluster 15
www <- cluster.15.ion.vs.sham.markers
ccc <- "15"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.15.ion.vs.sham.markers.f <- cx.final

# cluster 16
www <- cluster.16.ion.vs.sham.markers
ccc <- "16"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.16.ion.vs.sham.markers.f <- cx.final

# cluster 17
www <- cluster.17.ion.vs.sham.markers
ccc <- "17"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.17.ion.vs.sham.markers.f <- cx.final

# cluster 18
www <- cluster.18.ion.vs.sham.markers
ccc <- "18"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.18.ion.vs.sham.markers.f <- cx.final

# cluster 19
www <- cluster.19.ion.vs.sham.markers
ccc <- "19"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.19.ion.vs.sham.markers.f <- cx.final

# cluster 20
www <- cluster.20.ion.vs.sham.markers
ccc <- "20"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.20.ion.vs.sham.markers.f <- cx.final

# cluster 21
www <- cluster.21.ion.vs.sham.markers
ccc <- "21"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.21.ion.vs.sham.markers.f <- cx.final

# cluster 22
www <- cluster.22.ion.vs.sham.markers
ccc <- "22"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.22.ion.vs.sham.markers.f <- cx.final

# cluster 23
www <- cluster.23.ion.vs.sham.markers
ccc <- "23"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.23.ion.vs.sham.markers.f <- cx.final

# cluster 24
www <- cluster.24.ion.vs.sham.markers
ccc <- "24"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.24.ion.vs.sham.markers.f <- cx.final

# cluster 25
www <- cluster.25.ion.vs.sham.markers
ccc <- "25"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.25.ion.vs.sham.markers.f <- cx.final

# cluster 26
www <- cluster.26.ion.vs.sham.markers
ccc <- "26"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.26.ion.vs.sham.markers.f <- cx.final

# cluster 27
www <- cluster.27.ion.vs.sham.markers
ccc <- "27"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.27.ion.vs.sham.markers.f <- cx.final

# cluster 28
www <- cluster.28.ion.vs.sham.markers
ccc <- "28"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.28.ion.vs.sham.markers.f <- cx.final

# cluster 29
www <- cluster.29.ion.vs.sham.markers
ccc <- "29"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.29.ion.vs.sham.markers.f <- cx.final

# cluster 30
www <- cluster.30.ion.vs.sham.markers
ccc <- "30"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.30.ion.vs.sham.markers.f <- cx.final

# cluster 31
www <- cluster.31.ion.vs.sham.markers
ccc <- "31"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.31.ion.vs.sham.markers.f <- cx.final

# cluster 32
www <- cluster.32.ion.vs.sham.markers
ccc <- "32"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.32.ion.vs.sham.markers.f <- cx.final

# cluster 33
www <- cluster.33.ion.vs.sham.markers
ccc <- "33"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.33.ion.vs.sham.markers.f <- cx.final

# cluster 34
www <- cluster.34.ion.vs.sham.markers
ccc <- "34"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.34.ion.vs.sham.markers.f <- cx.final

# cluster 35
www <- cluster.35.ion.vs.sham.markers
ccc <- "35"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.35.ion.vs.sham.markers.f <- cx.final

# cluster 36
www <- cluster.36.ion.vs.sham.markers
ccc <- "36"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.36.ion.vs.sham.markers.f <- cx.final

# cluster 37
www <- cluster.37.ion.vs.sham.markers
ccc <- "37"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.37.ion.vs.sham.markers.f <- cx.final

# cluster 38
www <- cluster.38.ion.vs.sham.markers
ccc <- "38"
grab.0.ion <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(all.combined.sct, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.38.ion.vs.sham.markers.f <- cx.final

wb <- createWorkbook("differential.markers.between.ION.Sham.per.cluster")
addWorksheet(wb, "0.ion.vs.sham.markers")
writeData(wb, sheet = "0.ion.vs.sham.markers", cluster.0.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "1.ion.vs.sham.markers")
writeData(wb, sheet = "1.ion.vs.sham.markers", cluster.1.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "2.ion.vs.sham.markers")
writeData(wb, sheet = "2.ion.vs.sham.markers", cluster.2.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "3.ion.vs.sham.markers")
writeData(wb, sheet = "3.ion.vs.sham.markers", cluster.3.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "4.ion.vs.sham.markers")
writeData(wb, sheet = "4.ion.vs.sham.markers", cluster.4.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "5.ion.vs.sham.markers")
writeData(wb, sheet = "5.ion.vs.sham.markers", cluster.5.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "6.ion.vs.sham.markers")
writeData(wb, sheet = "6.ion.vs.sham.markers", cluster.6.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "7.ion.vs.sham.markers")
writeData(wb, sheet = "7.ion.vs.sham.markers", cluster.7.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "8.ion.vs.sham.markers")
writeData(wb, sheet = "8.ion.vs.sham.markers", cluster.8.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "9.ion.vs.sham.markers")
writeData(wb, sheet = "9.ion.vs.sham.markers", cluster.9.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "10.ion.vs.sham.markers")
writeData(wb, sheet = "10.ion.vs.sham.markers", cluster.10.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "11.ion.vs.sham.markers")
writeData(wb, sheet = "11.ion.vs.sham.markers", cluster.11.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "12.ion.vs.sham.markers")
writeData(wb, sheet = "12.ion.vs.sham.markers", cluster.12.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "13.ion.vs.sham.markers")
writeData(wb, sheet = "13.ion.vs.sham.markers", cluster.13.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "14.ion.vs.sham.markers")
writeData(wb, sheet = "14.ion.vs.sham.markers", cluster.14.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "15.ion.vs.sham.markers")
writeData(wb, sheet = "15.ion.vs.sham.markers", cluster.15.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "16.ion.vs.sham.markers")
writeData(wb, sheet = "16.ion.vs.sham.markers", cluster.16.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "17.ion.vs.sham.markers")
writeData(wb, sheet = "17.ion.vs.sham.markers", cluster.17.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "18.ion.vs.sham.markers")
writeData(wb, sheet = "18.ion.vs.sham.markers", cluster.18.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "19.ion.vs.sham.markers")
writeData(wb, sheet = "19.ion.vs.sham.markers", cluster.19.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "20.ion.vs.sham.markers")
writeData(wb, sheet = "20.ion.vs.sham.markers", cluster.20.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "21.ion.vs.sham.markers")
writeData(wb, sheet = "21.ion.vs.sham.markers", cluster.21.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "22.ion.vs.sham.markers")
writeData(wb, sheet = "22.ion.vs.sham.markers", cluster.22.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "23.ion.vs.sham.markers")
writeData(wb, sheet = "23.ion.vs.sham.markers", cluster.23.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "24.ion.vs.sham.markers")
writeData(wb, sheet = "24.ion.vs.sham.markers", cluster.24.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "25.ion.vs.sham.markers")
writeData(wb, sheet = "25.ion.vs.sham.markers", cluster.25.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "26.ion.vs.sham.markers")
writeData(wb, sheet = "26.ion.vs.sham.markers", cluster.26.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "27.ion.vs.sham.markers")
writeData(wb, sheet = "27.ion.vs.sham.markers", cluster.27.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "28.ion.vs.sham.markers")
writeData(wb, sheet = "28.ion.vs.sham.markers", cluster.28.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "29.ion.vs.sham.markers")
writeData(wb, sheet = "29.ion.vs.sham.markers", cluster.29.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "30.ion.vs.sham.markers")
writeData(wb, sheet = "30.ion.vs.sham.markers", cluster.30.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "31.ion.vs.sham.markers")
writeData(wb, sheet = "31.ion.vs.sham.markers", cluster.31.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "32.ion.vs.sham.markers")
writeData(wb, sheet = "32.ion.vs.sham.markers", cluster.32.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "33.ion.vs.sham.markers")
writeData(wb, sheet = "33.ion.vs.sham.markers", cluster.33.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "34.ion.vs.sham.markers")
writeData(wb, sheet = "34.ion.vs.sham.markers", cluster.34.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "35.ion.vs.sham.markers")
writeData(wb, sheet = "35.ion.vs.sham.markers", cluster.35.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "36.ion.vs.sham.markers")
writeData(wb, sheet = "36.ion.vs.sham.markers", cluster.36.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
#addWorksheet(wb, "37.ion.vs.sham.markers")
#writeData(wb, sheet = "37.ion.vs.sham.markers", cluster.37.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "38.ion.vs.sham.markers")
writeData(wb, sheet = "38.ion.vs.sham.markers", cluster.38.ion.vs.sham.markers.f, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "differential.markers.between.ION.Sham.per.cluster.xlsx", overwrite = TRUE)
rm(wb)

save.image(file="Rsession_Seurat_20211130.RData")

#------------------------------------------------------------------------------
# Summarize
#------------------------------------------------------------------------------

# bar plot - n cells per cluster

n.clusters <- length(table(all.combined.sct@meta.data$seurat_clusters))
level.order <- as.character(c(0:(n.clusters-1)))
temp <- table(all.combined.sct@meta.data$seurat_clusters)
temp <- as.data.frame(cbind(names(temp),as.numeric(as.character(temp))))
dimnames(temp)[[2]] <- c("Cluster","nCells")
temp$Cluster <- factor(temp$Cluster,levels=level.order)
temp$nCells <- as.numeric(as.character(temp$nCells))
svg("barplot_cluster_nCells.svg")
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Cluster)) +  geom_bar(stat = "identity") + xlab("Cluster"))
dev.off()
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Cluster)) +  geom_bar(stat = "identity") + xlab("Cluster"))

# bar plot - color by sample - stacked

level.order <- as.character(c(0:(n.clusters-1)))
temp <- all.combined.sct@meta.data
temp <- as.data.frame(temp[,c(1,8)])
temptemp <- apply(temp,1,paste,collapse="_",sep="_")
temptemptemp <- table(temptemp)
temp <- cbind(names(temptemptemp),as.numeric(temptemptemp))
temptemp <- str_split(as.character(temp[,1]),"_")
temptemp <- as.data.frame(temptemp)
temptemp <- t(temptemp)
temp <- cbind(temp,temptemp)
temptemp <- temp[,c(3:4)]
temptemp <- apply(temptemp,1,paste,collapse="_",sep="_")
temp <- cbind(temp,temptemp)
rownames(temp) <- temp[,1]
temp[,1] <- temp[,6]
temp <- temp[,-c(6)]
temp <- temp[,c(1,3,4,5,2)]
temp <- temp[,-c(3)]
dimnames(temp)[[2]] <- c("Sample","Group","Cluster","nCells")
temp <- as.data.frame(temp)
temp$Cluster <- factor(as.numeric(as.character(temp$Cluster)),levels=level.order)
temp$nCells <- as.numeric(as.character(temp$nCells))
svg("barplot_cluster_sample.svg")
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells'))
dev.off()
ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells')

# bar plot - color by sample - proportion

svg("barplot_cluster_sample_proportion.svg")
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('Proportion'))
dev.off()
ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('Proportion')

# bar plot - color by group - stacked

svg("barplot_cluster_group.svg")
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Group)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells'))
dev.off()
ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Group)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells')

# bar plot - color by group - proportion

svg("barplot_cluster_group_proportion.svg")
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Group)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('Proportion'))
dev.off()
ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Group)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('Proportion')

#------------------------------------------------------------------------------
# step8 perform automated annotation
#------------------------------------------------------------------------------

aba2020 <- read.csv("aba_mouse_cortex_2020_trimmed_means.csv",row.names=1)
aba2020.query <- CreateSeuratObject(aba2020)
DefaultAssay(all.combined.sct) <- "integrated"
aba2020.anchors <- FindTransferAnchors(reference = all.combined.sct, query = aba2020.query, dims = 1:100, reference.reduction = "pca",normalization.method="SCT")
aba2020.predictions <- TransferData(anchorset = aba2020.anchors, refdata = all.combined.sct$seurat_clusters,dims = 1:100)
aba2020.query <- AddMetaData(aba2020.query, metadata = aba2020.predictions)

aba2019 <- read.csv("aba_mouse_cortex_2019_trimmed_means.csv",row.names=1)
aba2019.query <- CreateSeuratObject(aba2019)
DefaultAssay(all.combined.sct) <- "integrated"
aba2019.anchors <- FindTransferAnchors(reference = all.combined.sct, query = aba2019.query, dims = 1:100, reference.reduction = "pca",normalization.method="SCT")
aba2019.predictions <- TransferData(anchorset = aba2019.anchors, refdata = all.combined.sct$seurat_clusters,dims = 1:100)
aba2019.query <- AddMetaData(aba2019.query, metadata = aba2019.predictions)

wb <- createWorkbook("aba.predictions")
addWorksheet(wb, "aba2020.predictions")
writeData(wb, sheet = "aba2020.predictions", aba2020.predictions, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "aba2019.predictions")
writeData(wb, sheet = "aba2019.predictions", aba2019.predictions, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "aba.predictions.xlsx", overwrite = TRUE)
rm(wb)

all.combined.sct <- RunUMAP(all.combined.sct, reduction = "pca", dims = 1:100, return.model = TRUE)
aba2019.query <- MapQuery(anchorset = aba2019.anchors, reference = all.combined.sct, query = aba2019.query,
    refdata = list(celltype = "celltype"), reference.reduction = "pca", reduction.model = "umap")
p1 <- DimPlot(all.combined.sct, reduction = "umap", group.by = "celltype", label = TRUE, label.size = 3,
    repel = TRUE) + NoLegend() + ggtitle("Reference annotations")
p2 <- DimPlot(aba2019.query, reduction = "ref.umap", group.by = "predicted.celltype", label = TRUE,
    label.size = 3, repel = TRUE) + NoLegend() + ggtitle("Query transferred labels")
p1 + p2

#------------------------------------------------------------------------------
# step8_alternate_automated_annotation
#------------------------------------------------------------------------------

allen.mop.2020 = readRDS("/data/johnsonko/SideProject/Raj/scRNA_Seq_Project_20221007/allen_mop_2020.rds")

reference <- LoadReference(path = "https://seurat.nygenome.org/azimuth/references/v1.0.0/mouse_motorcortex")

DefaultAssay(all.combined.sct) <- "integrated"

anchors <- FindTransferAnchors(
  reference = reference$map,
  query = all.combined.sct,
  k.filter = NA,
  reference.neighbors = "refdr.annoy.neighbors",
  reference.assay = "refAssay",
  query.assay = "integrated",
  reference.reduction = "refDR",
  normalization.method = "SCT",
  features = intersect(rownames(x = reference$map), VariableFeatures(object = all.combined.sct)),
  dims = 1:50,
  n.trees = 20,
  mapping.score.k = 100
)

refdata <- lapply(X = "subclass", function(x) {
  reference$map[[x, drop = TRUE]]
})
names(x = refdata) <- "subclass"
if (FALSE) {
  refdata[["impADT"]] <- GetAssayData(
    object = reference$map[['ADT']],
    slot = 'data'
  )
}

all.combined.sct <- TransferData(
  reference = reference$map,
  query = all.combined.sct,
  dims = 1:50,
  anchorset = anchors,
  refdata = refdata,
  n.trees = 20,
  store.weights = TRUE
)

temp.cluster <- all.combined.sct@meta.data$integrated_snn_res.0.8
temp.cohort <- all.combined.sct@meta.data$origin
temp.ann <- all.combined.sct@meta.data$predicted.subclass
final.preds.out.1 <- cbind(colnames(all.combined.sct),temp.cohort,temp.cluster,temp.ann)
final.preds.out.1 <- as.data.frame(final.preds.out.1)
write.table(final.preds.out.1,"final.preds.out.azimuth.cortex.txt",sep="\t")

# cluster plots

max.pred <- NULL
for (i in 1:length(unique(final.preds.out.1$temp.cluster))) {
	svg(paste(c("Automated_Annotation_Cluster_",i,".svg"),collapse="",sep=""))
	par(mfrow=c(1,1),mar=c(10, 4, 5, 2))
	barplot(table(final.preds.out.1[final.preds.out.1$temp.cluster==i,3])/sum(table(final.preds.out.1[final.preds.out.1$temp.cluster==i,3])),ylab="Membership Proportion",las = 2,space=0,cex.names = 0.7,main="Azimuth::Cortex") / abline(h=0)
	dev.off()
	temp <- table(final.preds.out.1[final.preds.out.1$temp.cluster==i,3])/sum(table(final.preds.out.1[final.preds.out.1$temp.cluster==i,3]))
	temp <- names(rev(sort(temp))[1])
	max.pred <- c(max.pred,temp)
}
write.table(max.pred,"summary.final.preds.clusters.azimuth.cortex.txt",sep="\t")

rm(to.predict)
rm(reference)

#------------------------------------------------------------------------------
# Special Gene Looks
#------------------------------------------------------------------------------

# GLUT

goi.glut <- c("Slc17a7",
		"Otof",
		"Npn2",
		"Baz1a",
		"Trhr",
		"Satb1",
		"Satb2",
		"Cux2",
		"Rorb",
		"Rspo1",
		"Etv1",
		"Fezf2",
		"Cdh13",
		"Cdh9",
		"Npnt",
		"Foxo1",
		"Col12a1",
		"Sla2",
		"Rxfp1",
		"Stard8",
		"Tbr1",
		"Osr1",
		"Sulf1",
		"Fst",
		"Syt6",
		"Clic6",
		"Slc17a8")

markers.to.plot <- unique(sort(goi.glut))

svg("glut_genes_dotplot.svg")
DotPlot(all.combined.sct, features = markers.to.plot, dot.scale = 8) + RotatedAxis()
dev.off()
DotPlot(all.combined.sct, features = markers.to.plot, dot.scale = 8) + RotatedAxis()

pdf("glut_genes_violin_plots.pdf")
for(i in 1:length(markers.to.plot)) {
	print(VlnPlot(all.combined.sct, features = markers.to.plot[i], pt.size = 0, combine = FALSE))
}
dev.off()

pdf("glut_genes_umap_plots.pdf.pdf")
for(i in 1:length(markers.to.plot)) {
	print(FeaturePlot(all.combined.sct, features = markers.to.plot[i]))
}
dev.off()

# GABA

goi.gaba <- c("Gad1",
		"Gad2",
		"Slc32a1",
		"Vip",
		"Sst",
		"Pvalb")

markers.to.plot <- unique(sort(goi.gaba))

svg("gaba_genes_dotplot.svg")
DotPlot(all.combined.sct, features = markers.to.plot, dot.scale = 8) + RotatedAxis()
dev.off()
DotPlot(all.combined.sct, features = markers.to.plot, dot.scale = 8) + RotatedAxis()

pdf("gaba_genes_violin_plots.pdf")
for(i in 1:length(markers.to.plot)) {
	print(VlnPlot(all.combined.sct, features = markers.to.plot[i], pt.size = 0, combine = FALSE))
}
dev.off()

pdf("gaba_genes_umap_plots.pdf.pdf")
for(i in 1:length(markers.to.plot)) {
	print(FeaturePlot(all.combined.sct, features = markers.to.plot[i]))
}
dev.off()

# GLIA

goi.glia <- c("Aqp4",
		"Aldoc",
		"Mbp",
		"Olig1",
		"Pdgfra",
		"Cldn5",
		"Fitm2",
		"Fitm1",
		"Cx3cr1",
		"Itgam",
		"Vtn",
		"Ctss",
		"Mrc1",
		"C1qa")

markers.to.plot <- unique(sort(goi.glia))

svg("glia_genes_dotplot.svg")
DotPlot(all.combined.sct, features = markers.to.plot, dot.scale = 8) + RotatedAxis()
dev.off()
DotPlot(all.combined.sct, features = markers.to.plot, dot.scale = 8) + RotatedAxis()

pdf("glia_genes_violin_plots.pdf")
for(i in 1:length(markers.to.plot)) {
	print(VlnPlot(all.combined.sct, features = markers.to.plot[i], pt.size = 0, combine = FALSE))
}
dev.off()

pdf("glia_genes_umap_plots.pdf.pdf")
for(i in 1:length(markers.to.plot)) {
	print(FeaturePlot(all.combined.sct, features = markers.to.plot[i]))
}
dev.off()

#------------------------------------------------------------------------------
# Neuron Drill Down Look
#------------------------------------------------------------------------------

# subset

temp1 <- all.combined.sct@meta.data$seurat_clusters==3
temp2 <- all.combined.sct@meta.data$seurat_clusters==4
temp3 <- all.combined.sct@meta.data$seurat_clusters==5
temp4 <- all.combined.sct@meta.data$seurat_clusters==8
temp5 <- all.combined.sct@meta.data$seurat_clusters==14
temp6 <- all.combined.sct@meta.data$seurat_clusters==20
temp7 <- all.combined.sct@meta.data$seurat_clusters==29

temp8 <- temp1+temp2
temp8 <- temp8+temp3
temp8 <- temp8+temp4
temp8 <- temp8+temp5
temp8 <- temp8+temp6
temp8 <- temp8+temp7
temp8 <- temp8==1

drilldown.all.combined.sct <- all.combined.sct[,temp8]

# Re-integrate

drilldown.all.list <- SplitObject(drilldown.all.combined.sct, split.by = "orig.ident")
drilldown.all.list <- lapply(X = drilldown.all.list, FUN = SCTransform, vars.to.regress = "percent.mt", method="glmGamPoi")
features <- SelectIntegrationFeatures(object.list = drilldown.all.list, nfeatures = 3000)
drilldown.all.list <- PrepSCTIntegration(object.list = drilldown.all.list, anchor.features = features)
all.anchors <- FindIntegrationAnchors(object.list = drilldown.all.list, normalization.method = "SCT",anchor.features = features)
drilldown.all.combined.sct <- IntegrateData(anchorset = all.anchors, normalization.method = "SCT")

# Evaluate

drilldown.all.combined.sct <- RunPCA(drilldown.all.combined.sct, verbose = FALSE, npcs = 200)
ElbowPlot(drilldown.all.combined.sct,ndims=200)

# Cluster

drilldown.all.combined.sct <- RunUMAP(drilldown.all.combined.sct, reduction = "pca", dims = 1:100)
drilldown.all.combined.sct <- FindNeighbors(drilldown.all.combined.sct, dims = 1:100, verbose = FALSE)

drilldown.all.combined.sct.res.x <- FindClusters(drilldown.all.combined.sct,resolution=c(0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,1.1,1.2,1.3,1.4,1.5),save.SNN=TRUE)

pdf("umap_resolution_evaluation_using_ndim_50.pdf")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.04")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.05")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.06")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.07")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.08")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.09")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.1")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.2")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.3")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.4")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.5")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.6")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.7")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.8")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.0.9")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.1")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.1.1")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.1.2")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.1.3")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.1.4")
DimPlot(drilldown.all.combined.sct.res.x, label=TRUE,group.by="integrated_snn_res.1.5")
dev.off()

svg("clusttree_resolution_evaluation_using_ndim_100_with_sc3_stability_overlay.svg",width=7,height=20)
clustree(drilldown.all.combined.sct.res.x,prefix="integrated_snn_res.",node_colour="sc3_stability")
dev.off()

svg("clusttree_resolution_evaluation_using_ndim_100_with_no_c3_stability_overlay.svg",width=7,height=20)
clustree(drilldown.all.combined.sct.res.x,prefix="integrated_snn_res.")
dev.off()

#------------------------------------------------------------------------------
# Neuron Drill Down Look - Resolution 0.4
#------------------------------------------------------------------------------

drilldown.all.combined.sct.res.0.4 <- FindClusters(drilldown.all.combined.sct,resolution=0.4)

svg("neuron_drilldown_resolution_0.4_umap_plot.svg")
DimPlot(drilldown.all.combined.sct.res.0.4, label=TRUE,group.by="integrated_snn_res.0.4")
dev.off()
DimPlot(drilldown.all.combined.sct.res.0.4, label=TRUE,group.by="integrated_snn_res.0.4")

DefaultAssay(drilldown.all.combined.sct.res.0.4) <- "RNA"
conserved.markers.0 <- FindConservedMarkers(drilldown.all.combined.sct.res.0.4, ident.1 = "0", grouping.var="group", only.pos = TRUE)
conserved.markers.1 <- FindConservedMarkers(drilldown.all.combined.sct.res.0.4, ident.1 = "1", grouping.var="group", only.pos = TRUE)
conserved.markers.2 <- FindConservedMarkers(drilldown.all.combined.sct.res.0.4, ident.1 = "2", grouping.var="group", only.pos = TRUE)
conserved.markers.3 <- FindConservedMarkers(drilldown.all.combined.sct.res.0.4, ident.1 = "3", grouping.var="group", only.pos = TRUE)
conserved.markers.4 <- FindConservedMarkers(drilldown.all.combined.sct.res.0.4, ident.1 = "4", grouping.var="group", only.pos = TRUE)
conserved.markers.5 <- FindConservedMarkers(drilldown.all.combined.sct.res.0.4, ident.1 = "5", grouping.var="group", only.pos = TRUE)
conserved.markers.6 <- FindConservedMarkers(drilldown.all.combined.sct.res.0.4, ident.1 = "6", grouping.var="group", only.pos = TRUE)
conserved.markers.7 <- FindConservedMarkers(drilldown.all.combined.sct.res.0.4, ident.1 = "7", grouping.var="group", only.pos = TRUE)
conserved.markers.8 <- FindConservedMarkers(drilldown.all.combined.sct.res.0.4, ident.1 = "8", grouping.var="group", only.pos = TRUE)

# conserved marker testing - cluster 0

www <- conserved.markers.0
ccc <- "0"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.0.4)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.0.4[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)

grab.0.sham <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.0.4)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.0.4[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)

cx <- as.data.frame(cx)

dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16

# www
# ION_p_val		1
# ION_avg_log2FC	2
# ION_pct.1		3
# ION_pct.2		4
# ION_p_val_adj		5
# Sham_p_val		6
# Sham_avg_log2FC	7
# Sham_pct.1		8
# Sham_pct.2		9
# Sham_p_val_adj	10
# max_pval		11
# minimump_p_val	12

www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])

dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]

conserved.markers.0.f <- cx.final

# conserved marker testing - cluster 1

www <- conserved.markers.1
ccc <- "1"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.0.4)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.0.4[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)

grab.0.sham <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.0.4)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.0.4[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)

cx <- as.data.frame(cx)

dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16

# www
# ION_p_val		1
# ION_avg_log2FC	2
# ION_pct.1		3
# ION_pct.2		4
# ION_p_val_adj		5
# Sham_p_val		6
# Sham_avg_log2FC	7
# Sham_pct.1		8
# Sham_pct.2		9
# Sham_p_val_adj	10
# max_pval		11
# minimump_p_val	12

www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])

dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]

conserved.markers.1.f <- cx.final

# conserved marker testing - cluster 2

www <- conserved.markers.2
ccc <- "2"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.0.4)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.0.4[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)

grab.0.sham <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.0.4)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.0.4[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)

cx <- as.data.frame(cx)

dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16

# www
# ION_p_val		1
# ION_avg_log2FC	2
# ION_pct.1		3
# ION_pct.2		4
# ION_p_val_adj		5
# Sham_p_val		6
# Sham_avg_log2FC	7
# Sham_pct.1		8
# Sham_pct.2		9
# Sham_p_val_adj	10
# max_pval		11
# minimump_p_val	12

www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])

dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]

conserved.markers.2.f <- cx.final

# conserved marker testing - cluster 3

www <- conserved.markers.3
ccc <- "3"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.0.4)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.0.4[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)

grab.0.sham <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.0.4)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.0.4[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)

cx <- as.data.frame(cx)

dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16

# www
# ION_p_val		1
# ION_avg_log2FC	2
# ION_pct.1		3
# ION_pct.2		4
# ION_p_val_adj		5
# Sham_p_val		6
# Sham_avg_log2FC	7
# Sham_pct.1		8
# Sham_pct.2		9
# Sham_p_val_adj	10
# max_pval		11
# minimump_p_val	12

www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])

dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]

conserved.markers.3.f <- cx.final

# conserved marker testing - cluster 4

www <- conserved.markers.4
ccc <- "4"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.0.4)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.0.4[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)

grab.0.sham <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.0.4)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.0.4[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)

cx <- as.data.frame(cx)

dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16

# www
# ION_p_val		1
# ION_avg_log2FC	2
# ION_pct.1		3
# ION_pct.2		4
# ION_p_val_adj		5
# Sham_p_val		6
# Sham_avg_log2FC	7
# Sham_pct.1		8
# Sham_pct.2		9
# Sham_p_val_adj	10
# max_pval		11
# minimump_p_val	12

www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])

dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]

conserved.markers.4.f <- cx.final

# conserved marker testing - cluster 5

www <- conserved.markers.5
ccc <- "5"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.0.4)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.0.4[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)

grab.0.sham <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.0.4)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.0.4[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)

cx <- as.data.frame(cx)

dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16

# www
# ION_p_val		1
# ION_avg_log2FC	2
# ION_pct.1		3
# ION_pct.2		4
# ION_p_val_adj		5
# Sham_p_val		6
# Sham_avg_log2FC	7
# Sham_pct.1		8
# Sham_pct.2		9
# Sham_p_val_adj	10
# max_pval		11
# minimump_p_val	12

www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])

dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]

conserved.markers.5.f <- cx.final

# conserved marker testing - cluster 6

www <- conserved.markers.6
ccc <- "6"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.0.4)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.0.4[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)

grab.0.sham <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.0.4)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.0.4[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)

cx <- as.data.frame(cx)

dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16

# www
# ION_p_val		1
# ION_avg_log2FC	2
# ION_pct.1		3
# ION_pct.2		4
# ION_p_val_adj		5
# Sham_p_val		6
# Sham_avg_log2FC	7
# Sham_pct.1		8
# Sham_pct.2		9
# Sham_p_val_adj	10
# max_pval		11
# minimump_p_val	12

www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])

dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]

conserved.markers.6.f <- cx.final

# conserved marker testing - cluster 7

www <- conserved.markers.7
ccc <- "7"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.0.4)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.0.4[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)

grab.0.sham <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.0.4)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.0.4[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)

cx <- as.data.frame(cx)

dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16

# www
# ION_p_val		1
# ION_avg_log2FC	2
# ION_pct.1		3
# ION_pct.2		4
# ION_p_val_adj		5
# Sham_p_val		6
# Sham_avg_log2FC	7
# Sham_pct.1		8
# Sham_pct.2		9
# Sham_p_val_adj	10
# max_pval		11
# minimump_p_val	12

www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])

dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]

conserved.markers.7.f <- cx.final

# conserved marker testing - cluster 8

www <- conserved.markers.8
ccc <- "8"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.0.4)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.0.4[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)

grab.0.sham <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.0.4)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.0.4[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)

cx <- as.data.frame(cx)

dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16

# www
# ION_p_val		1
# ION_avg_log2FC	2
# ION_pct.1		3
# ION_pct.2		4
# ION_p_val_adj		5
# Sham_p_val		6
# Sham_avg_log2FC	7
# Sham_pct.1		8
# Sham_pct.2		9
# Sham_p_val_adj	10
# max_pval		11
# minimump_p_val	12

www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])

dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]

conserved.markers.8.f <- cx.final

# conserved cluster export

wb <- createWorkbook("neuron_drilldown_resolution_0.4_conserved.markers.across.ION.Sham.between.clusters")
addWorksheet(wb, "cluster.0")
writeData(wb, sheet = "cluster.0", conserved.markers.0.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "cluster.1")
writeData(wb, sheet = "cluster.1", conserved.markers.1.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.2")
writeData(wb, sheet = "cluster.2", conserved.markers.2.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.3")
writeData(wb, sheet = "cluster.3", conserved.markers.3.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.4")
writeData(wb, sheet = "cluster.4", conserved.markers.4.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.5")
writeData(wb, sheet = "cluster.5", conserved.markers.5.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.6")
writeData(wb, sheet = "cluster.6", conserved.markers.6.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.7")
writeData(wb, sheet = "cluster.7", conserved.markers.7.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.8")
writeData(wb, sheet = "cluster.8", conserved.markers.8.f, colNames = TRUE, rowNames = TRUE)
saveWorkbook(wb, "neuron_drilldown_resolution_0.4_conserved.markers.across.ION.Sham.between.clusters.xlsx", overwrite = TRUE)
rm(wb)

# ion vs sham within marker testing - cluster 0

grab.0 <- subset(drilldown.all.combined.sct.res.0.4, idents = "0")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "0"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.0.ion.vs.sham.markers.f <- cx.final

# ion vs sham within marker testing - cluster 1

grab.0 <- subset(drilldown.all.combined.sct.res.0.4, idents = "1")
Idents(grab.0) <- grab.0@meta.data$group
cluster.1.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.1.ion.vs.sham.markers
ccc <- "1"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.1.ion.vs.sham.markers.f <- cx.final

# ion vs sham within marker testing - cluster 2

grab.0 <- subset(drilldown.all.combined.sct.res.0.4, idents = "2")
Idents(grab.0) <- grab.0@meta.data$group
cluster.2.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.2.ion.vs.sham.markers
ccc <- "2"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.2.ion.vs.sham.markers.f <- cx.final

# ion vs sham within marker testing - cluster 3

grab.0 <- subset(drilldown.all.combined.sct.res.0.4, idents = "3")
Idents(grab.0) <- grab.0@meta.data$group
cluster.3.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.3.ion.vs.sham.markers
ccc <- "3"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.3.ion.vs.sham.markers.f <- cx.final

# ion vs sham within marker testing - cluster 4

grab.0 <- subset(drilldown.all.combined.sct.res.0.4, idents = "4")
Idents(grab.0) <- grab.0@meta.data$group
cluster.4.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.4.ion.vs.sham.markers
ccc <- "4"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.4.ion.vs.sham.markers.f <- cx.final

# ion vs sham within marker testing - cluster 5

grab.0 <- subset(drilldown.all.combined.sct.res.0.4, idents = "5")
Idents(grab.0) <- grab.0@meta.data$group
cluster.5.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.5.ion.vs.sham.markers
ccc <- "5"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.5.ion.vs.sham.markers.f <- cx.final

# ion vs sham within marker testing - cluster 6

grab.0 <- subset(drilldown.all.combined.sct.res.0.4, idents = "6")
Idents(grab.0) <- grab.0@meta.data$group
cluster.6.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.6.ion.vs.sham.markers
ccc <- "6"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.6.ion.vs.sham.markers.f <- cx.final

# ion vs sham within marker testing - cluster 7

grab.0 <- subset(drilldown.all.combined.sct.res.0.4, idents = "7")
Idents(grab.0) <- grab.0@meta.data$group
cluster.7.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.7.ion.vs.sham.markers
ccc <- "7"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.7.ion.vs.sham.markers.f <- cx.final

# ion vs sham within marker testing - cluster 8

grab.0 <- subset(drilldown.all.combined.sct.res.0.4, idents = "8")
Idents(grab.0) <- grab.0@meta.data$group
cluster.8.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.8.ion.vs.sham.markers
ccc <- "8"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.4, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.8.ion.vs.sham.markers.f <- cx.final

# ion vs sham marker cluster export

wb <- createWorkbook("neuron_drilldown_resolution_0.4.markers.between.ION.Sham.within.cluster")
addWorksheet(wb, "cluster.0")
writeData(wb, sheet = "cluster.0", cluster.0.ion.vs.sham.markers.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.1")
writeData(wb, sheet = "cluster.1", cluster.1.ion.vs.sham.markers.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.2")
writeData(wb, sheet = "cluster.2", cluster.2.ion.vs.sham.markers.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.3")
writeData(wb, sheet = "cluster.3", cluster.3.ion.vs.sham.markers.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.4")
writeData(wb, sheet = "cluster.4", cluster.4.ion.vs.sham.markers.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.5")
writeData(wb, sheet = "cluster.5", cluster.5.ion.vs.sham.markers.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.6")
writeData(wb, sheet = "cluster.6", cluster.6.ion.vs.sham.markers.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.7")
writeData(wb, sheet = "cluster.7", cluster.7.ion.vs.sham.markers.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.8")
writeData(wb, sheet = "cluster.8", cluster.8.ion.vs.sham.markers.f, colNames = TRUE, rowNames = TRUE)
saveWorkbook(wb, "neuron_drilldown_resolution_0.4.markers.between.ION.Sham.within.cluster.xlsx", overwrite = TRUE)
rm(wb)

#------------------------------------------------------------------------------
# Special Gene Looks
#------------------------------------------------------------------------------

goi <- c("Slc17a7",
"Otof",
"Npn2",
"Baz1a",
"Trhr",
"Satb1",
"Cux2",
"Rorb",
"Rspo1",
"Etv1",
"Fezf2",
"Cdh13",
"Cdh9",
"Npnt",
"Foxo1",
"Col12a1",
"Sla2",
"Rxfp1",
"Stard8",
"Tbr1",
"Osr1",
"Sulf1",
"Fst",
"Syt6",
"Clic6",
"Slc17a8",
"Gad1",
"Gad2",
"Aqp4",
"Aldoc",
"Mbp",
"Olig1",
"Pdgfra",
"Cldn5",
"Fitm1",
"Cx3cr1",
"Itgam",
"Vtn",
"Ctss",
"Mrc1",
"C1qa")

c <- unique(sort(goi))

svg("goi_genes_dotplot.svg",width=20)
DotPlot(drilldown.all.combined.sct.res.0.4, features = markers.to.plot, dot.scale = 8) + RotatedAxis()
dev.off()
DotPlot(drilldown.all.combined.sct.res.0.4, features = markers.to.plot, dot.scale = 8) + RotatedAxis()

pdf("goi_genes_violin_plots.pdf")
for(i in 1:length(markers.to.plot)) {
	print(VlnPlot(drilldown.all.combined.sct.res.0.4, features = markers.to.plot[i], pt.size = 0, combine = FALSE))
}
dev.off()

pdf("goi_genes_umap_plots.pdf.pdf")
for(i in 1:length(markers.to.plot)) {
	print(FeaturePlot(drilldown.all.combined.sct.res.0.4, features = markers.to.plot[i]))
}
dev.off()

#------------------------------------------------------------------------------
# Summarize
#------------------------------------------------------------------------------

# bar plot - n cells per cluster

n.clusters <- length(table(drilldown.all.combined.sct.res.0.4@meta.data$integrated_snn_res.0.4))
level.order <- as.character(c(0:(n.clusters-1)))
temp <- table(drilldown.all.combined.sct.res.0.4@meta.data$integrated_snn_res.0.4)
temp <- as.data.frame(cbind(names(temp),as.numeric(as.character(temp))))
dimnames(temp)[[2]] <- c("Cluster","nCells")
temp$Cluster <- factor(temp$Cluster,levels=level.order)
temp$nCells <- as.numeric(as.character(temp$nCells))
svg("barplot_cluster_nCells.svg")
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Cluster)) +  geom_bar(stat = "identity") + xlab("Cluster"))
dev.off()
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Cluster)) +  geom_bar(stat = "identity") + xlab("Cluster"))

# bar plot - color by sample - stacked

level.order <- as.character(c(0:(n.clusters-1)))
temp <- drilldown.all.combined.sct.res.0.4@meta.data
temp <- as.data.frame(temp[,c(1,11)])
temptemp <- apply(temp,1,paste,collapse="_",sep="_")
temptemptemp <- table(temptemp)
temp <- cbind(names(temptemptemp),as.numeric(temptemptemp))
temptemp <- str_split(as.character(temp[,1]),"_")
temptemp <- as.data.frame(temptemp)
temptemp <- t(temptemp)
temp <- cbind(temp,temptemp)
temptemp <- temp[,c(3:4)]
temptemp <- apply(temptemp,1,paste,collapse="_",sep="_")
temp <- cbind(temp,temptemp)
rownames(temp) <- temp[,1]
temp[,1] <- temp[,6]
temp <- temp[,-c(6)]
temp <- temp[,c(1,3,4,5,2)]
temp <- temp[,-c(3)]
dimnames(temp)[[2]] <- c("Sample","Group","Cluster","nCells")
temp <- as.data.frame(temp)
temp$Cluster <- factor(as.numeric(as.character(temp$Cluster)),levels=level.order)
temp$nCells <- as.numeric(as.character(temp$nCells))
svg("barplot_cluster_sample.svg")
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells'))
dev.off()
ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells')

# bar plot - color by sample - proportion

svg("barplot_cluster_sample_proportion.svg")
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('Proportion'))
dev.off()
ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('Proportion')

# bar plot - color by group - stacked

svg("barplot_cluster_group.svg")
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Group)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells'))
dev.off()
ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Group)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells')

# bar plot - color by group - proportion

svg("barplot_cluster_group_proportion.svg")
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Group)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('Proportion'))
dev.off()
ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Group)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('Proportion')

#------------------------------------------------------------------------------
# Top differential genes between ION vs Sham per cluster
#------------------------------------------------------------------------------

DefaultAssay(drilldown.all.combined.sct.res.0.4) <- "RNA"

grab.0 <- subset(drilldown.all.combined.sct.res.0.4, idents = "0")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.0.ion.vs.sham.markers)[c(1:12)]
avg.0.cells <- as.data.frame(log1p(AverageExpression(grab.0, verbose = FALSE)$RNA))
avg.0.cells$gene <- rownames(avg.0.cells)
p <- ggplot(avg.0.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 0")
pdf("differential.markers.between.ION.Sham.for.cluster.0.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.0, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.0, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 0"))
dev.off()
rm(grab.0)

grab.1 <- subset(drilldown.all.combined.sct.res.0.4, idents = "1")
Idents(grab.1) <- grab.1@meta.data$group
cluster.1.ion.vs.sham.markers <- FindMarkers(grab.1, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.1.ion.vs.sham.markers)[c(1:12)]
avg.1.cells <- as.data.frame(log1p(AverageExpression(grab.1, verbose = FALSE)$RNA))
avg.1.cells$gene <- rownames(avg.1.cells)
p <- ggplot(avg.1.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 1")
pdf("differential.markers.between.ION.Sham.for.cluster.1.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.1, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.1, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 1"))
dev.off()
rm(grab.1)

grab.2 <- subset(drilldown.all.combined.sct.res.0.4, idents = "2")
Idents(grab.2) <- grab.2@meta.data$group
cluster.2.ion.vs.sham.markers <- FindMarkers(grab.2, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.2.ion.vs.sham.markers)[c(1:12)]
avg.2.cells <- as.data.frame(log1p(AverageExpression(grab.2, verbose = FALSE)$RNA))
avg.2.cells$gene <- rownames(avg.2.cells)
p <- ggplot(avg.2.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 2")
pdf("differential.markers.between.ION.Sham.for.cluster.2.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.2, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.2, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 2"))
dev.off()
rm(grab.2)

grab.3 <- subset(drilldown.all.combined.sct.res.0.4, idents = "3")
Idents(grab.3) <- grab.3@meta.data$group
cluster.3.ion.vs.sham.markers <- FindMarkers(grab.3, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.3.ion.vs.sham.markers)[c(1:12)]
avg.3.cells <- as.data.frame(log1p(AverageExpression(grab.3, verbose = FALSE)$RNA))
avg.3.cells$gene <- rownames(avg.3.cells)
p <- ggplot(avg.3.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 3")
pdf("differential.markers.between.ION.Sham.for.cluster.3.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.3, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.3, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 3"))
dev.off()
rm(grab.3)

grab.4 <- subset(drilldown.all.combined.sct.res.0.4, idents = "4")
Idents(grab.4) <- grab.4@meta.data$group
cluster.4.ion.vs.sham.markers <- FindMarkers(grab.4, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.4.ion.vs.sham.markers)[c(1:12)]
avg.4.cells <- as.data.frame(log1p(AverageExpression(grab.4, verbose = FALSE)$RNA))
avg.4.cells$gene <- rownames(avg.4.cells)
p <- ggplot(avg.4.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 4")
pdf("differential.markers.between.ION.Sham.for.cluster.4.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.4, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.4, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 4"))
dev.off()
rm(grab.4)

grab.5 <- subset(drilldown.all.combined.sct.res.0.4, idents = "5")
Idents(grab.5) <- grab.5@meta.data$group
cluster.5.ion.vs.sham.markers <- FindMarkers(grab.5, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.5.ion.vs.sham.markers)[c(1:12)]
avg.5.cells <- as.data.frame(log1p(AverageExpression(grab.5, verbose = FALSE)$RNA))
avg.5.cells$gene <- rownames(avg.5.cells)
p <- ggplot(avg.5.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 5")
pdf("differential.markers.between.ION.Sham.for.cluster.5.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.5, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.5, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 5"))
dev.off()
rm(grab.5)

grab.6 <- subset(drilldown.all.combined.sct.res.0.4, idents = "6")
Idents(grab.6) <- grab.6@meta.data$group
cluster.6.ion.vs.sham.markers <- FindMarkers(grab.6, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.6.ion.vs.sham.markers)[c(1:12)]
avg.6.cells <- as.data.frame(log1p(AverageExpression(grab.6, verbose = FALSE)$RNA))
avg.6.cells$gene <- rownames(avg.6.cells)
p <- ggplot(avg.6.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 6")
pdf("differential.markers.between.ION.Sham.for.cluster.6.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.6, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.6, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 6"))
dev.off()
rm(grab.6)

grab.7 <- subset(drilldown.all.combined.sct.res.0.4, idents = "7")
Idents(grab.7) <- grab.7@meta.data$group
cluster.7.ion.vs.sham.markers <- FindMarkers(grab.7, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.7.ion.vs.sham.markers)[c(1:12)]
avg.7.cells <- as.data.frame(log1p(AverageExpression(grab.7, verbose = FALSE)$RNA))
avg.7.cells$gene <- rownames(avg.7.cells)
p <- ggplot(avg.7.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 7")
pdf("differential.markers.between.ION.Sham.for.cluster.7.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.7, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.7, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 7"))
dev.off()
rm(grab.7)

grab.8 <- subset(drilldown.all.combined.sct.res.0.4, idents = "8")
Idents(grab.8) <- grab.8@meta.data$group
cluster.8.ion.vs.sham.markers <- FindMarkers(grab.8, ident.1 = "ION", ident.2 = "Sham")
genes.to.label <- rownames(cluster.8.ion.vs.sham.markers)[c(1:12)]
avg.8.cells <- as.data.frame(log1p(AverageExpression(grab.8, verbose = FALSE)$RNA))
avg.8.cells$gene <- rownames(avg.8.cells)

p <- ggplot(avg.8.cells, aes(Sham,ION)) + geom_point() + ggtitle("Cluster 8")
pdf("differential.markers.between.ION.Sham.for.cluster.8.pdf")
print(LabelPoints(p, points = genes.to.label, repel = TRUE,xnudge=0,ynudge=0))
print(VlnPlot(grab.8, features = genes.to.label, split.by = "group",pt.size = 0, combine = TRUE))
print(DotPlot(grab.8, features = genes.to.label, dot.scale = 8) + RotatedAxis() + ggtitle("Cluster 8"))
dev.off()
rm(grab.8)

# https://stackoverflow.com/questions/15624656/label-points-in-geom-point

#------------------------------------------------------------------------------
# Neuron Drill Down Look - Resolution 0.1
#------------------------------------------------------------------------------

drilldown.all.combined.sct.res.0.1 <- FindClusters(drilldown.all.combined.sct,resolution=0.1)

svg("neuron_drilldown_resolution_0.1_umap_plot.svg")
DimPlot(drilldown.all.combined.sct.res.0.1, label=TRUE,group.by="integrated_snn_res.0.1")
dev.off()
DimPlot(drilldown.all.combined.sct.res.0.1, label=TRUE,group.by="integrated_snn_res.0.1")

DefaultAssay(drilldown.all.combined.sct.res.0.1) <- "RNA"
conserved.markers.0 <- FindConservedMarkers(drilldown.all.combined.sct.res.0.1, ident.1 = "0", grouping.var="group", only.pos = TRUE)
conserved.markers.1 <- FindConservedMarkers(drilldown.all.combined.sct.res.0.1, ident.1 = "1", grouping.var="group", only.pos = TRUE)
conserved.markers.2 <- FindConservedMarkers(drilldown.all.combined.sct.res.0.1, ident.1 = "2", grouping.var="group", only.pos = TRUE)
conserved.markers.3 <- FindConservedMarkers(drilldown.all.combined.sct.res.0.1, ident.1 = "3", grouping.var="group", only.pos = TRUE)
conserved.markers.4 <- FindConservedMarkers(drilldown.all.combined.sct.res.0.1, ident.1 = "4", grouping.var="group", only.pos = TRUE)
conserved.markers.5 <- FindConservedMarkers(drilldown.all.combined.sct.res.0.1, ident.1 = "5", grouping.var="group", only.pos = TRUE)

# conserved marker testing - cluster 0

www <- conserved.markers.0
ccc <- "0"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.0.1)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.0.1[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)

grab.0.sham <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.0.1)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.0.1[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)

cx <- as.data.frame(cx)

dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16

# www
# ION_p_val		1
# ION_avg_log2FC	2
# ION_pct.1		3
# ION_pct.2		4
# ION_p_val_adj		5
# Sham_p_val		6
# Sham_avg_log2FC	7
# Sham_pct.1		8
# Sham_pct.2		9
# Sham_p_val_adj	10
# max_pval		11
# minimump_p_val	12

www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])

dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]

conserved.markers.0.f <- cx.final

# conserved marker testing - cluster 1

www <- conserved.markers.1
ccc <- "1"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.0.1)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.0.1[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)

grab.0.sham <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.0.1)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.0.1[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)

cx <- as.data.frame(cx)

dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16

# www
# ION_p_val		1
# ION_avg_log2FC	2
# ION_pct.1		3
# ION_pct.2		4
# ION_p_val_adj		5
# Sham_p_val		6
# Sham_avg_log2FC	7
# Sham_pct.1		8
# Sham_pct.2		9
# Sham_p_val_adj	10
# max_pval		11
# minimump_p_val	12

www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])

dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]

conserved.markers.1.f <- cx.final

# conserved marker testing - cluster 2

www <- conserved.markers.2
ccc <- "2"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.0.1)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.0.1[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)

grab.0.sham <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.0.1)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.0.1[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)

cx <- as.data.frame(cx)

dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16

# www
# ION_p_val		1
# ION_avg_log2FC	2
# ION_pct.1		3
# ION_pct.2		4
# ION_p_val_adj		5
# Sham_p_val		6
# Sham_avg_log2FC	7
# Sham_pct.1		8
# Sham_pct.2		9
# Sham_p_val_adj	10
# max_pval		11
# minimump_p_val	12

www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])

dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]

conserved.markers.2.f <- cx.final

# conserved marker testing - cluster 3

www <- conserved.markers.3
ccc <- "3"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.0.1)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.0.1[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)

grab.0.sham <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.0.1)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.0.1[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)

cx <- as.data.frame(cx)

dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16

# www
# ION_p_val		1
# ION_avg_log2FC	2
# ION_pct.1		3
# ION_pct.2		4
# ION_p_val_adj		5
# Sham_p_val		6
# Sham_avg_log2FC	7
# Sham_pct.1		8
# Sham_pct.2		9
# Sham_p_val_adj	10
# max_pval		11
# minimump_p_val	12

www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])

dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]

conserved.markers.3.f <- cx.final

# conserved marker testing - cluster 4

www <- conserved.markers.1
ccc <- "4"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.0.1)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.0.1[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)

grab.0.sham <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.0.1)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.0.1[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)

cx <- as.data.frame(cx)

dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16

# www
# ION_p_val		1
# ION_avg_log2FC	2
# ION_pct.1		3
# ION_pct.2		4
# ION_p_val_adj		5
# Sham_p_val		6
# Sham_avg_log2FC	7
# Sham_pct.1		8
# Sham_pct.2		9
# Sham_p_val_adj	10
# max_pval		11
# minimump_p_val	12

www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])

dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]

conserved.markers.4.f <- cx.final

# conserved marker testing - cluster 5

www <- conserved.markers.5
ccc <- "5"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.0.1)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.0.1[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)

grab.0.sham <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.0.1)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.0.1[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)

cx <- as.data.frame(cx)

dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16

# www
# ION_p_val		1
# ION_avg_log2FC	2
# ION_pct.1		3
# ION_pct.2		4
# ION_p_val_adj		5
# Sham_p_val		6
# Sham_avg_log2FC	7
# Sham_pct.1		8
# Sham_pct.2		9
# Sham_p_val_adj	10
# max_pval		11
# minimump_p_val	12

www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])

dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]

conserved.markers.5.f <- cx.final

# conserved cluster export

wb <- createWorkbook("neuron_drilldown_resolution_0.1_conserved.markers.across.ION.Sham.between.clusters")
addWorksheet(wb, "cluster.0")
writeData(wb, sheet = "cluster.0", conserved.markers.0.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "cluster.1")
writeData(wb, sheet = "cluster.1", conserved.markers.1.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.2")
writeData(wb, sheet = "cluster.2", conserved.markers.2.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.3")
writeData(wb, sheet = "cluster.3", conserved.markers.3.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.4")
writeData(wb, sheet = "cluster.4", conserved.markers.4.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.5")
writeData(wb, sheet = "cluster.5", conserved.markers.5.f, colNames = TRUE, rowNames = TRUE)
saveWorkbook(wb, "neuron_drilldown_resolution_0.1_conserved.markers.across.ION.Sham.between.clusters.xlsx", overwrite = TRUE)
rm(wb)

# ion vs sham within marker testing - cluster 0

grab.0 <- subset(drilldown.all.combined.sct.res.0.1, idents = "0")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "0"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.0.ion.vs.sham.markers.f <- cx.final

# ion vs sham within marker testing - cluster 1

grab.0 <- subset(drilldown.all.combined.sct.res.0.1, idents = "1")
Idents(grab.0) <- grab.0@meta.data$group
cluster.1.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.1.ion.vs.sham.markers
ccc <- "1"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.1.ion.vs.sham.markers.f <- cx.final

# ion vs sham within marker testing - cluster 2

grab.0 <- subset(drilldown.all.combined.sct.res.0.1, idents = "2")
Idents(grab.0) <- grab.0@meta.data$group
cluster.2.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.2.ion.vs.sham.markers
ccc <- "2"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.2.ion.vs.sham.markers.f <- cx.final

# ion vs sham within marker testing - cluster 3

grab.0 <- subset(drilldown.all.combined.sct.res.0.1, idents = "3")
Idents(grab.0) <- grab.0@meta.data$group
cluster.3.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.3.ion.vs.sham.markers
ccc <- "3"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.3.ion.vs.sham.markers.f <- cx.final

# ion vs sham within marker testing - cluster 4

grab.0 <- subset(drilldown.all.combined.sct.res.0.1, idents = "4")
Idents(grab.0) <- grab.0@meta.data$group
cluster.4.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.4.ion.vs.sham.markers
ccc <- "4"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.4.ion.vs.sham.markers.f <- cx.final

# ion vs sham within marker testing - cluster 5

grab.0 <- subset(drilldown.all.combined.sct.res.0.1, idents = "5")
Idents(grab.0) <- grab.0@meta.data$group
cluster.5.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.5.ion.vs.sham.markers
ccc <- "5"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.1, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.5.ion.vs.sham.markers.f <- cx.final

# ion vs sham marker cluster export

wb <- createWorkbook("neuron_drilldown_resolution_0.1.markers.between.ION.Sham.within.cluster")
addWorksheet(wb, "cluster.0")
writeData(wb, sheet = "cluster.0", cluster.0.ion.vs.sham.markers.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.1")
writeData(wb, sheet = "cluster.1", cluster.1.ion.vs.sham.markers.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.2")
writeData(wb, sheet = "cluster.2", cluster.2.ion.vs.sham.markers.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.3")
writeData(wb, sheet = "cluster.3", cluster.3.ion.vs.sham.markers.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.4")
writeData(wb, sheet = "cluster.4", cluster.4.ion.vs.sham.markers.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.5")
writeData(wb, sheet = "cluster.5", cluster.5.ion.vs.sham.markers.f, colNames = TRUE, rowNames = TRUE)
saveWorkbook(wb, "neuron_drilldown_resolution_0.1.markers.between.ION.Sham.within.cluster.xlsx", overwrite = TRUE)
rm(wb)

#------------------------------------------------------------------------------
# Neuron Drill Down Look - Resolution 0.04
#------------------------------------------------------------------------------

drilldown.all.combined.sct.res.0.04 <- FindClusters(drilldown.all.combined.sct,resolution=0.04)

svg("neuron_drilldown_resolution_0.04_umap_plot.svg")
DimPlot(drilldown.all.combined.sct.res.0.04, label=TRUE,group.by="integrated_snn_res.0.04")
dev.off()
DimPlot(drilldown.all.combined.sct.res.0.04, label=TRUE,group.by="integrated_snn_res.0.04")

DefaultAssay(drilldown.all.combined.sct.res.0.04) <- "RNA"
conserved.markers.0 <- FindConservedMarkers(drilldown.all.combined.sct.res.0.04, ident.1 = "0", grouping.var="group", only.pos = TRUE)
conserved.markers.1 <- FindConservedMarkers(drilldown.all.combined.sct.res.0.04, ident.1 = "1", grouping.var="group", only.pos = TRUE)

# conserved marker testing - cluster 0

www <- conserved.markers.0
ccc <- "0"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.04, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.0.04)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.0.04[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)

grab.0.sham <- subset(drilldown.all.combined.sct.res.0.04, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.0.04)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.0.04[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)

cx <- as.data.frame(cx)

dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16

# www
# ION_p_val		1
# ION_avg_log2FC	2
# ION_pct.1		3
# ION_pct.2		4
# ION_p_val_adj		5
# Sham_p_val		6
# Sham_avg_log2FC	7
# Sham_pct.1		8
# Sham_pct.2		9
# Sham_p_val_adj	10
# max_pval		11
# minimump_p_val	12

www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])

dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]

conserved.markers.0.f <- cx.final

# conserved marker testing - cluster 1

www <- conserved.markers.1
ccc <- "1"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.04, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.0.04)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.0.04[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)

grab.0.sham <- subset(drilldown.all.combined.sct.res.0.04, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.0.04)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.0.04[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)

cx <- as.data.frame(cx)

dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16

# www
# ION_p_val		1
# ION_avg_log2FC	2
# ION_pct.1		3
# ION_pct.2		4
# ION_p_val_adj		5
# Sham_p_val		6
# Sham_avg_log2FC	7
# Sham_pct.1		8
# Sham_pct.2		9
# Sham_p_val_adj	10
# max_pval		11
# minimump_p_val	12

www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])

dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]

conserved.markers.1.f <- cx.final

# conserved cluster export

wb <- createWorkbook("neuron_drilldown_resolution_0.04_conserved.markers.across.ION.Sham.between.clusters")
addWorksheet(wb, "cluster.0")
writeData(wb, sheet = "cluster.0", conserved.markers.0.f, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "cluster.1")
writeData(wb, sheet = "cluster.1", conserved.markers.1.f, colNames = TRUE, rowNames = TRUE)
saveWorkbook(wb, "neuron_drilldown_resolution_0.04_conserved.markers.across.ION.Sham.between.clusters.xlsx", overwrite = TRUE)
rm(wb)

# ion vs sham within marker testing - cluster 0

grab.0 <- subset(drilldown.all.combined.sct.res.0.04, idents = "0")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "0"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.04, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.04, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.0.ion.vs.sham.markers.f <- cx.final

# ion vs sham within marker testing - cluster 1

grab.0 <- subset(drilldown.all.combined.sct.res.0.04, idents = "1")
Idents(grab.0) <- grab.0@meta.data$group
cluster.1.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.1.ion.vs.sham.markers
ccc <- "1"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.04, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.04, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.1.ion.vs.sham.markers.f <- cx.final

# ion vs sham marker cluster export

wb <- createWorkbook("neuron_drilldown_resolution_0.04.markers.between.ION.Sham.within.cluster")
addWorksheet(wb, "cluster.0")
writeData(wb, sheet = "cluster.0", cluster.0.ion.vs.sham.markers.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.1")
writeData(wb, sheet = "cluster.1", cluster.1.ion.vs.sham.markers.f, colNames = TRUE, rowNames = TRUE)
saveWorkbook(wb, "neuron_drilldown_resolution_0.04.markers.between.ION.Sham.within.cluster.xlsx", overwrite = TRUE)
rm(wb)

#------------------------------------------------------------------------------
# Neuron Drill Down Look - Resolution 0.6 (20220626)
#------------------------------------------------------------------------------

# load("Rsession_20220625.RData")

drilldown.all.combined.sct.res.0.6 <- FindClusters(drilldown.all.combined.sct,resolution=0.6)

DimPlot(drilldown.all.combined.sct.res.0.6, label=TRUE,group.by="integrated_snn_res.0.6")

DefaultAssay(drilldown.all.combined.sct.res.0.6) <- "RNA"

# ion vs sham within marker testing - cluster 0

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "0")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "0"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.0.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 1

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "1")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "1"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.1.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 2

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "2")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "2"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.2.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 3

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "3")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "3"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.3.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 4

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "4")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "4"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.4.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 5

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "5")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "5"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.5.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 6

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "6")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "6"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.6.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 7

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "7")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "7"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.7.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 8

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "8")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "8"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.8.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 9

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "9")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "9"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.9.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 10

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "10")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "10"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.10.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 11

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "11")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "11"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.11.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 12

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "12")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "12"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.12.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 13

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "13")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "13"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.13.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 14

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "14")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "14"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.14.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 15

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "15")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "15"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.15.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 16

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "16")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "16"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.16.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 17

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "17")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "17"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.17.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 18

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "18")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "18"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.18.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 19

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "19")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "19"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.19.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 20

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "20")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "20"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.20.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 21

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "21")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "21"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.21.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham within marker testing - cluster 22

grab.0 <- subset(drilldown.all.combined.sct.res.0.6, idents = "22")
Idents(grab.0) <- grab.0@meta.data$group
cluster.0.ion.vs.sham.markers <- FindMarkers(grab.0, ident.1 = "ION", ident.2 = "Sham")

www <- cluster.0.ion.vs.sham.markers
ccc <- "22"
grab.0.ion <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.ion@meta.data$group=="ION")>0) {
	grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
	grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
	grab.0.ion <- as.matrix(grab.0.ion)
	grab.0.ion.total <- dim(grab.0.ion)[2]
	w <- rownames(www)
	grab.0.ion <- grab.0.ion[w,]
	grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
	grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
	grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
	grab.0.ion.n <- apply(grab.0.ion,1,is.na)
	grab.0.ion.n <- grab.0.ion.n==FALSE
	grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
} else {
	grab.0.ion.total <- rep("NA",dim(www)[1])
	grab.0.ion.n <- rep("NA",dim(www)[1])
	grab.0.ion.mean <- rep("NA",dim(www)[1])
	grab.0.ion.sd <- rep("NA",dim(www)[1])
}
grab.0.sham <- subset(drilldown.all.combined.sct.res.0.6, idents = ccc)
if(sum(grab.0.sham@meta.data$group=="Sham")>0) {
	grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
	grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
	grab.0.sham <- as.matrix(grab.0.sham)
	grab.0.sham.total <- dim(grab.0.sham)[2]
	w <- rownames(www)
	grab.0.sham <- grab.0.sham[w,]
	grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
	grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
	grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
	grab.0.sham.n <- apply(grab.0.sham,1,is.na)
	grab.0.sham.n <- grab.0.sham.n==FALSE
	grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
} else {
	grab.0.sham.total <- rep("NA",dim(www)[1])
	grab.0.sham.n <- rep("NA",dim(www)[1])
	grab.0.sham.mean <- rep("NA",dim(www)[1])
	grab.0.sham.sd <- rep("NA",dim(www)[1])
}
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "Sham_in_Cluster_total_ncells",		# 5
		       "Sham_in_Cluster_ncells",		# 6
		       "Sham_in_Cluster_mean",			# 7
		       "Sham_in_Cluster_sd")			# 8
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_Sham_in_Cluster_pvalue",			# 1
			       "ION_in_Cluster_vs_Sham_in_Cluster_log2_FoldChange",	# 2
			       "ION_in_Cluster_expressed_percent",			# 3
			       "Sham_in_Cluster_expressed_percent",			# 4
			       "ION_in_Cluster_vs_Sham_in_Cluster_pvalue_corrected")	# 5

cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
cluster.22.ion.vs.sham.markers.f.res.0.6 <- cx.final

# ion vs sham marker cluster export

wb <- createWorkbook("neuron_drilldown_resolution_0.6.markers.between.ION.Sham.within.cluster")
addWorksheet(wb, "cluster.0")
writeData(wb, sheet = "cluster.0", cluster.0.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.1")
writeData(wb, sheet = "cluster.1", cluster.1.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.2")
writeData(wb, sheet = "cluster.2", cluster.2.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.3")
writeData(wb, sheet = "cluster.3", cluster.3.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.4")
writeData(wb, sheet = "cluster.4", cluster.4.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.5")
writeData(wb, sheet = "cluster.5", cluster.5.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.6")
writeData(wb, sheet = "cluster.6", cluster.6.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.7")
writeData(wb, sheet = "cluster.7", cluster.7.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.8")
writeData(wb, sheet = "cluster.8", cluster.8.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.9")
writeData(wb, sheet = "cluster.9", cluster.9.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.10")
writeData(wb, sheet = "cluster.10", cluster.10.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.11")
writeData(wb, sheet = "cluster.11", cluster.11.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.12")
writeData(wb, sheet = "cluster.12", cluster.12.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.13")
writeData(wb, sheet = "cluster.13", cluster.13.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.14")
writeData(wb, sheet = "cluster.14", cluster.14.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.15")
writeData(wb, sheet = "cluster.15", cluster.15.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.16")
writeData(wb, sheet = "cluster.16", cluster.16.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.17")
writeData(wb, sheet = "cluster.17", cluster.17.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.18")
writeData(wb, sheet = "cluster.18", cluster.18.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.19")
writeData(wb, sheet = "cluster.19", cluster.19.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.20")
writeData(wb, sheet = "cluster.20", cluster.20.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.21")
writeData(wb, sheet = "cluster.21", cluster.21.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.22")
writeData(wb, sheet = "cluster.22", cluster.22.ion.vs.sham.markers.f.res.0.6, colNames = TRUE, rowNames = TRUE)
saveWorkbook(wb, "neuron_drilldown_resolution_0.6.markers.between.ION.Sham.within.cluster.xlsx", overwrite = TRUE)
rm(wb)

# bar plot - n cells per cluster

n.clusters <- length(table(drilldown.all.combined.sct.res.0.6@meta.data$seurat_clusters))
level.order <- as.character(c(0:(n.clusters-1)))
temp <- table(drilldown.all.combined.sct.res.0.6@meta.data$seurat_clusters)
temp <- as.data.frame(cbind(names(temp),as.numeric(as.character(temp))))
dimnames(temp)[[2]] <- c("Cluster","nCells")
temp$Cluster <- factor(temp$Cluster,levels=level.order)
temp$nCells <- as.numeric(as.character(temp$nCells))
svg("neuron_drilldown_resolution_0.6_barplot_cluster_nCells.svg")
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Cluster)) +  geom_bar(stat = "identity") + xlab("Cluster"))
dev.off()
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Cluster)) +  geom_bar(stat = "identity") + xlab("Cluster"))
write.table(temp,"neuron_drilldown_resolution_0.6_barplot_cluster_nCells.txt",sep="\t")

# bar plot - color by sample - stacked

level.order <- as.character(c(0:(n.clusters-1)))
temp <- drilldown.all.combined.sct.res.0.6@meta.data
temp <- as.data.frame(temp[,c(1,8)])
temptemp <- apply(temp,1,paste,collapse="_",sep="_")
temptemptemp <- table(temptemp)
temp <- cbind(names(temptemptemp),as.numeric(temptemptemp))
temptemp <- str_split(as.character(temp[,1]),"_")
temptemp <- as.data.frame(temptemp)
temptemp <- t(temptemp)
temp <- cbind(temp,temptemp)
temptemp <- temp[,c(3:4)]
temptemp <- apply(temptemp,1,paste,collapse="_",sep="_")
temp <- cbind(temp,temptemp)
rownames(temp) <- temp[,1]
temp[,1] <- temp[,6]
temp <- temp[,-c(6)]
temp <- temp[,c(1,3,4,5,2)]
temp <- temp[,-c(3)]
dimnames(temp)[[2]] <- c("Sample","Group","Cluster","nCells")
temp <- as.data.frame(temp)
temp$Cluster <- factor(as.numeric(as.character(temp$Cluster)),levels=level.order)
temp$nCells <- as.numeric(as.character(temp$nCells))
svg("neuron_drilldown_resolution_0.6_barplot_cluster_sample.svg")
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells'))
dev.off()
ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells')
write.table(temp,"neuron_drilldown_resolution_0.6_barplot_cluster_sample.txt",sep="\t")

# bar plot - color by sample - proportion

svg("neuron_drilldown_resolution_0.6_barplot_cluster_sample_proportion.svg")
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('Proportion'))
dev.off()
ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Sample)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('Proportion')

# bar plot - color by group - stacked

svg("neuron_drilldown_resolution_0.6_barplot_cluster_group.svg")
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Group)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells'))
dev.off()
ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Group)) + geom_bar(stat = "identity",position="stack") + xlab('Cluster') + ylab('nCells')

# bar plot - color by group - proportion

svg("neuron_drilldown_resolution_0.6_barplot_cluster_group_proportion.svg")
print(ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Group)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('Proportion'))
dev.off()
ggplot(temp, aes(x = factor(Cluster, level=level.order), y = nCells, fill = Group)) + geom_bar(stat = "identity",position="fill") + xlab('Cluster') + ylab('Proportion')

# run augur on 0.60
# https://github.com/neurorestore/Augur

DefaultAssay(drilldown.all.combined.sct.res.0.6) <- "integrated"

drilldown.all.combined.sct.res.0.6@meta.data$cell_type <- drilldown.all.combined.sct.res.0.6@meta.data$integrated_snn_res.0.6

augur = calculate_auc(drilldown.all.combined.sct.res.0.6)

auc_tab <- augur$AUC
auc_tab$rank <- c(1:dim(auc_tab)[1])
temp <- as.data.frame(auc_tab)
write.table(temp,"Augur_Results_Neuron_Drilldown_Res_0.60.txt",sep="\t")

tib <- drilldown.all.combined.sct.res.0.6$cell_type %>% as_tibble(rownames = "Barcode") %>% rename(cell_type=value)

tib <- tib %>% left_join(., auc_tab)

assertthat::are_equal(colnames(drilldown.all.combined.sct.res.0.6), tib$Barcode)

drilldown.all.combined.sct.res.0.6$AUC <- round(tib$auc, 3) 
drilldown.all.combined.sct.res.0.6$RANK <- tib$rank

p1 <- plot_umap(augur, drilldown.all.combined.sct.res.0.6, mode = "default", palette = "Spectral")
p1 <- p1 + geom_point(size=0.1) + ggtitle("Augur Perturbation by Type (Red = Most)")
p1
svg("augur_resolution_0.60_umap.svg")
print(p1)
dev.off()

write.table(augur,"augur.txt",sep="\t")

# perform automated annotation

DefaultAssay(drilldown.all.combined.sct.res.0.6) <- "integrated"
aba2020.anchors <- FindTransferAnchors(reference = drilldown.all.combined.sct.res.0.6, query = aba2020.query, dims = 1:100, reference.reduction = "pca",normalization.method="SCT")
aba2020.predictions <- TransferData(anchorset = aba2020.anchors, refdata = drilldown.all.combined.sct.res.0.6$seurat_clusters,dims = 1:100)
aba2020.query <- AddMetaData(aba2020.query, metadata = aba2020.predictions)

DefaultAssay(drilldown.all.combined.sct.res.0.6) <- "integrated"
aba2019.anchors <- FindTransferAnchors(reference = drilldown.all.combined.sct.res.0.6, query = aba2019.query, dims = 1:100, reference.reduction = "pca",normalization.method="SCT")
aba2019.predictions <- TransferData(anchorset = aba2019.anchors, refdata = drilldown.all.combined.sct.res.0.6$seurat_clusters,dims = 1:100)
aba2019.query <- AddMetaData(aba2019.query, metadata = aba2019.predictions)

wb <- createWorkbook("aba.predictions")
addWorksheet(wb, "aba2020.predictions")
writeData(wb, sheet = "aba2020.predictions", aba2020.predictions, colNames = TRUE,rowNames = TRUE)
addWorksheet(wb, "aba2019.predictions")
writeData(wb, sheet = "aba2019.predictions", aba2019.predictions, colNames = TRUE,rowNames = TRUE)
saveWorkbook(wb, "aba.predictions.xlsx", overwrite = TRUE)
rm(wb)

# custom plots

# umap

# https://r-charts.com/color-palettes/

# black
black.pal <- paletteer_c("ggthemes::Classic Red-Black", 30)[c(28,29,30)]
black.pal

# blue
blue.pal <- paletteer_c("ggthemes::Blue", 3)
blue.pal

# green
green.pal <- paletteer_c("ggthemes::Green", 2)
green.pal

# gray
gray.pal <- paletteer_c("ggthemes::Gray", 30)[c(1:7)]
gray.pal

# purple
purple.pal <- paletteer_c("ggthemes::Purple", 5)
purple.pal

# red
red.pal <- paletteer_c("ggthemes::Red", 3)
red.pal

temp <- drilldown.all.combined.sct.res.0.6@meta.data$integrated_snn_res.0.6
temp <- as.character(temp)
temp <- ifelse(temp=="0","Neuron :: Cux2",temp)
temp <- ifelse(temp=="1","Neuron :: Mapk4",temp)
temp <- ifelse(temp=="2","Neuron :: Rell1",temp)
temp <- ifelse(temp=="3","Neuron :: Col26a1",temp)
temp <- ifelse(temp=="4","Neuron :: Adam33",temp)
temp <- ifelse(temp=="5","Oligo :: Mbp",temp)
temp <- ifelse(temp=="6","Interneuron :: Sst",temp)
temp <- ifelse(temp=="7","Neuron :: Hs3s4",temp)
temp <- ifelse(temp=="8","Neuron :: Dpyd",temp)
temp <- ifelse(temp=="9","Neuron :: Pou6f2",temp)
temp <- ifelse(temp=="10","Interneuron :: Scn9a",temp)
temp <- ifelse(temp=="11","Interneuron :: Eya4",temp)
temp <- ifelse(temp=="12","Interneuron :: Npy",temp)
temp <- ifelse(temp=="13","Neuron :: Ankfn1",temp)
temp <- ifelse(temp=="14","Neuron :: Tshz2",temp)
temp <- ifelse(temp=="15","Neuron :: Cdh4",temp)
temp <- ifelse(temp=="16","Interneuron :: Vip",temp)
temp <- ifelse(temp=="17","Interneuron :: Adarb2",temp)
temp <- ifelse(temp=="18","Neuron :: Tox",temp)
temp <- ifelse(temp=="19","Neuron :: Meis2",temp)
temp <- ifelse(temp=="20","VLMC :: Ptgds",temp)
temp <- ifelse(temp=="21","VLMC :: Flt1",temp)
temp <- ifelse(temp=="22","Interneuron :: Mctp2",temp)

cluster = annotation = order
5 = "Oligo :: Mbp" = 21
20 = "VLMC :: Ptgds" = 23
21 = "VLMC :: Flt1" = 22
16 = "Interneuron :: Vip" = 7
17 = "Interneuron :: Adarb2" = 1
12 = "Interneuron :: Npy" = 4
10 = "Interneuron :: Scn9a" = 5
11 = "Interneuron :: Eya4" = 2
22 = "Interneuron :: Mctp2" = 3
6 = "Interneuron :: Sst" = 6
1 = "Neuron :: Mapk4" = 15
0 = "Neuron :: Cux2" = 12
15 = "Neuron :: Cdh4" = 10
8 = "Neuron :: Dpyd" = 13
9 = "Neuron :: Pou6f2" = 17
14 = "Neuron :: Tshz2" = 20
18 = "Neuron :: Tox" = 19
19 = "Neuron :: Meis2" = 16
3 = "Neuron :: Col26a1" = 11
4 = "Neuron :: Adam33" = 8
13 = "Neuron :: Ankfn1" = 9
2 = "Neuron :: Rell1" = 18
7 = "Neuron :: Hs3s4" = 14

order.order <- sort(names(table(temp)))[c(21,23,22,7,1,4,5,2,3,6,15,12,10,13,17,20,19,16,11,8,9,18,14)]

drilldown.all.combined.sct.res.0.6@meta.data$naming.to.use <- factor(temp,levels=order.order)

drilldown.all.combined.sct.res.0.6@meta.data$UMAP <- factor(temp,levels=order.order)

col.2.use <- c("black","black","black","gray","gray","gray","gray","gray","gray","gray","blue","blue","blue","purple","purple","purple","purple","purple","red","red","red","green","green") 

col.2.use <- c(black.pal,gray.pal,blue.pal,purple.pal,red.pal,green.pal)

p1 <- DimPlot(drilldown.all.combined.sct.res.0.6, label=FALSE,cols=col.2.use,group.by="UMAP")
p2 <- DimPlot(drilldown.all.combined.sct.res.0.6, label=TRUE,cols=col.2.use,group.by="UMAP",repel=TRUE)

svg("umap_plot_1.svg",width = 10)
print(p1)
dev.off()

svg("umap_plot_2.svg",width = 10)
print(p2)
dev.off()

p1 <- DimPlot(drilldown.all.combined.sct.res.0.6, label=FALSE,cols=col.2.use,group.by="UMAP",split.by="group")

col.2.use <- c("red","black")
p1 <- DimPlot(drilldown.all.combined.sct.res.0.6, label=FALSE,cols=col.2.use,group.by="group")
p1

svg("umap_ion_vs_sham_neuron_drilldown_resolution_0.60_20220719.svg")
print(p1)
dev.off()

# heatmap

markers <- c("Tmeff2",
"Plp1",
"Mbp",
"Ptgds",
"Flt1",
"Gad1",
"Pvalb",
"Sst",
"Scn9a",
"Eya4",
"Npy",
"Vip",
"Adarb2",
"Mctp2",
"Slc17a7",
"Stard8",
"Fstl4",
"Mapk4",
"Maml3",
"Cdh4",
"Igfn1",
"Cux2",
"Dpyd",
"Glis3",
"Itga8",
"Rxfp1",
"Pou6f2",
"Tshz2",
"Trabd2b",
"Lcp1",
"Gm2164",
"Tox",
"Nrp1",
"Meis2",
"Adcy5",
"Rorb",
"Scube1",
"Col26a1",
"Adam33",
"Rspo1",
"Ankfn1",
"Col26a1",
"Rell1",
"Syt6",
"Nrp1",
"Zfpm2",
"Hs3st4")

DefaultAssay(drilldown.all.combined.sct.res.0.6) <- "RNA"
count.data <- GetAssayData(drilldown.all.combined.sct.res.0.6, slot = "counts")
count.data <- as.data.frame(count.data[markers,])
count.data <- as.matrix(count.data)
cell.meta <- drilldown.all.combined.sct.res.0.6@meta.data$naming.to.use

cell.means <- NULL
temp1 <- names(table(drilldown.all.combined.sct.res.0.6@meta.data$naming.to.use))
for(i in 1:length(temp1)) {
	print(i)
	temp2 <- count.data[,drilldown.all.combined.sct.res.0.6@meta.data$naming.to.use==temp1[i]]
	temp2 <- apply(temp2,1,mean,na.rm=T)
	cell.means <- cbind(cell.means,temp2)
}
dimnames(cell.means)[[2]] <- temp1

my_colour = list(cluster = c('Oligo :: Mbp' = "#303030FF",
'VLMC :: Ptgds' = "#272727FF",
'VLMC :: Flt1' = "#1E1E1EFF",
'Interneuron :: Vip' = "#D5D5D5FF",
'Interneuron :: Adarb2' = "#D0D0D0FF",
'Interneuron :: Npy' = "#CBCCCBFF",
'Interneuron :: Scn9a' = "#C5C7C6FF",
'Interneuron :: Eya4' = "#BFC2C1FF",
'Interneuron :: Mctp2' = "#BABDBCFF",
'Interneuron :: Sst' = "#B5B8B7FF",
'Neuron :: Mapk4' = "#B9DDF1FF",
'Neuron :: Cux2' = "#6797C0FF",
'Neuron :: Cdh4' = "#2A5783FF",
'Neuron :: Dpyd' = "#EEC9E5FF",
'Neuron :: Pou6f2' = "#D6A6C6FF",
'Neuron :: Tshz2' = "#BB85A9FF",
'Neuron :: Tox' = "#986995FF",
'Neuron :: Meis2' = "#7C4D79FF",
'Neuron :: Col26a1' = "#FFBEB2FF",
'Neuron :: Adam33' = "#F26250FF",
'Neuron :: Ankfn1' = "#AE123AFF",
'Neuron :: Rell1' = "#B3E0A6FF",
'Neuron :: Hs3s4' = "#24693DFF"))

my_sample_col <- data.frame(cluster = order.order)
row.names(my_sample_col) <- order.order

p1 <- pheatmap(as.matrix(cell.means),scale="row",fontsize_row=8,annotation_colors=my_colour,annotation_col=my_sample_col)
p1

p2 <- pheatmap(as.matrix(cell.means),scale="row",fontsize_row=8,annotation_colors=my_colour,annotation_col=my_sample_col,cluster_cols = FALSE)
p2

p3 <- pheatmap(as.matrix(cell.means),scale="row",fontsize_row=8,annotation_colors=my_colour,annotation_col=my_sample_col,cluster_cols = FALSE,cluster_rows = FALSE)
p3

svg("pheatmap_v1.svg",height = 10, width=15)
print(p1)
dev.off()

svg("pheatmap_v2.svg",height = 10, width=15)
print(p2)
dev.off()

svg("pheatmap_v3.svg",height = 10, width=15)
print(p3)
dev.off()

save.image("Rsession_20220625.RData")

load("Rsession_20220625.RData")

cell.means.subset <- cell.means[,c("Neuron :: Col26a1","Neuron :: Adam33","Neuron :: Ankfn1")]

p1 <- pheatmap(as.matrix(cell.means.subset),scale="row",fontsize_row=8,annotation_colors=my_colour,annotation_col=my_sample_col)
p1

svg("layer4_pheatmap.svg",height = 10, width=15)
print(p1)
dev.off()

HERE HERE HERE
HERE HERE HERE
HERE HERE HERE
HERE HERE HERE
HERE HERE HERE
HERE HERE HERE

#------------------------------------------------------------------------------
# Heat Map Look  - Resolution 0.6 (20220816)
#------------------------------------------------------------------------------

list.calcium.channels <- c("Cacna1a","Cacna1c","Cacna1d","Cacna1e","Cacna2d1")
list.calcium.channels
intersect(list.calcium.channels,rownames(drilldown.all.combined.sct.res.0.6))
	
list.ca.related.signaling <- c("Camk2d","Nrxn1","Nrxn3","Ryr2")
list.ca.related.signaling
intersect(list.ca.related.signaling,rownames(drilldown.all.combined.sct.res.0.6))
	
list.ionotropic.glutamate.receptors <- c("Gria4","Grid2","Grin2a")
list.ionotropic.glutamate.receptors
intersect(list.ionotropic.glutamate.receptors,rownames(drilldown.all.combined.sct.res.0.6))

list.metabotropic.glutamate.receptors <- c("Grm3","Grm5","Grm7","Homer1")
list.metabotropic.glutamate.receptors
intersect(list.metabotropic.glutamate.receptors,rownames(drilldown.all.combined.sct.res.0.6))
	
list.cell.signaling.regulation <- c("Gnaq","Plcb1","Ppp1r12a","Ppp2r2b","Slc1a2")
list.cell.signaling.regulation
intersect(list.cell.signaling.regulation,rownames(drilldown.all.combined.sct.res.0.6))

list.cell.metabolism <- c("Adcy8","Akt3","Gucy1a2")
list.cell.metabolism
intersect(list.cell.metabolism,rownames(drilldown.all.combined.sct.res.0.6))
	
list.cell.adhesion.molecules <- c("Cadm1","Cdh11","Cdh12","Epha6","Kalrn")
list.cell.adhesion.molecules
intersect(list.cell.adhesion.molecules,rownames(drilldown.all.combined.sct.res.0.6))
	
list.protein.kinases <- c("Prkcb","Prkce","Prkcg","Prkg1")
list.protein.kinases
intersect(list.protein.kinases,rownames(drilldown.all.combined.sct.res.0.6))
	
list.vesicle.cycling <- c("Rims1","Snap25","Syt1")
list.vesicle.cycling
intersect(list.vesicle.cycling,rownames(drilldown.all.combined.sct.res.0.6))

list.l4 <- c("Adcy8",
"Adgrb3",
"Adgrl3",
"Akt3",
"App",
"Cacna1a",
"Cacna1c",
"Cacna1e",
"Cacna2d1",
"Cadm1",
"Camk1d",
"Camk2d",
"Camk4",
"Cdh11",
"Cdh12",
"Cdh13",
"Cdh18",
"Cdh8",
"Chrm2",
"Cntnap2",
"Col26a1",
"Creb3l2",
"Dab1",
"Dcc",
"Epha4",
"Epha5",
"Epha6",
"Farp1",
"Fgfr2",
"Gabra1",
"Gabra2",
"Gabrb1",
"Gabrb2",
"Gabrb3",
"Gde1",
"Gnao1",
"Gnaq",
"Gnaq",
"Gria1",
"Gria2",
"Gria4",
"Grid2",
"Grin1",
"Grin2a",
"Grin2b",
"Grip1",
"Grm1",
"Grm3",
"Grm5",
"Grm7",
"Grm8",
"Gucy1a2",
"Gucy1b1",
"Homer1",
"Igf1r",
"Kalrn",
"Kcnma1",
"Mapt",
"Mpped2",
"Myh10",
"Nectin3",
"Nlgn1",
"Nrg1",
"Nrg3",
"Nrxn1",
"Nrxn3",
"Nsf",
"Pafah1b1",
"Pde1a",
"Plcb1",
"Ppm1l",
"Ppp1r12a",
"Ppp2r2b",
"Ppp2r2c",
"Prkar1b",
"Prkcb",
"Prkce",
"Prkcg",
"Prkg1",
"Ptpn9",
"Rgs17",
"Rims1",
"Rock2",
"Ryr2",
"Schip1",
"Slc1a2",
"Slc8a1",
"Snap25",
"Syt1",
"Syt16",
"Syt4")
list.l4
intersect(list.l4,rownames(drilldown.all.combined.sct.res.0.6))

unique.list <- unique(sort(c(list.l4,list.calcium.channels,list.ca.related.signaling,list.ionotropic.glutamate.receptors,list.metabotropic.glutamate.receptors,list.cell.signaling.regulation,list.cell.metabolism,list.cell.adhesion.molecules,list.protein.kinases,list.vesicle.cycling)))

c3 <- drilldown.all.combined.sct.res.0.6[unique.list,drilldown.all.combined.sct.res.0.6@meta.data$integrated_snn_res.0.6==3]
c4 <- drilldown.all.combined.sct.res.0.6[unique.list,drilldown.all.combined.sct.res.0.6@meta.data$integrated_snn_res.0.6==4]
c9 <- drilldown.all.combined.sct.res.0.6[unique.list,drilldown.all.combined.sct.res.0.6@meta.data$integrated_snn_res.0.6==9]
c13 <- drilldown.all.combined.sct.res.0.6[unique.list,drilldown.all.combined.sct.res.0.6@meta.data$integrated_snn_res.0.6==13]

c3.ion <- subset(c3, subset = group=="ION")
c3.ion <- GetAssayData(c3.ion, slot = "data", assay = "RNA")
c3.ion <- as.matrix(c3.ion)
c3.ion <- log(rowMeans(expm1(c3.ion))+1,2)
c3.ion <- c3.ion[unique.list]

c3.sham <- subset(c3, subset = group=="Sham")
c3.sham <- GetAssayData(c3.sham, slot = "data", assay = "RNA")
c3.sham <- as.matrix(c3.sham)
c3.sham <- log(rowMeans(expm1(c3.sham))+1,2)
c3.sham <- c3.sham[unique.list]

c4.ion <- subset(c4, subset = group=="ION")
c4.ion <- GetAssayData(c4.ion, slot = "data", assay = "RNA")
c4.ion <- as.matrix(c4.ion)
c4.ion <- log(rowMeans(expm1(c4.ion))+1,2)
c4.ion <- c4.ion[unique.list]

c4.sham <- subset(c4, subset = group=="Sham")
c4.sham <- GetAssayData(c4.sham, slot = "data", assay = "RNA")
c4.sham <- as.matrix(c4.sham)
c4.sham <- log(rowMeans(expm1(c4.sham))+1,2)
c4.sham <- c4.sham[unique.list]

c9.ion <- subset(c9, subset = group=="ION")
c9.ion <- GetAssayData(c9.ion, slot = "data", assay = "RNA")
c9.ion <- as.matrix(c9.ion)
c9.ion <- log(rowMeans(expm1(c9.ion))+1,2)
c9.ion <- c9.ion[unique.list]

c9.sham <- subset(c9, subset = group=="Sham")
c9.sham <- GetAssayData(c9.sham, slot = "data", assay = "RNA")
c9.sham <- as.matrix(c9.sham)
c9.sham <- log(rowMeans(expm1(c9.sham))+1,2)
c9.sham <- c9.sham[unique.list]

c13.ion <- subset(c13, subset = group=="ION")
c13.ion <- GetAssayData(c13.ion, slot = "data", assay = "RNA")
c13.ion <- as.matrix(c13.ion)
c13.ion <- log(rowMeans(expm1(c13.ion))+1,2)
c13.ion <- c13.ion[unique.list]

c13.sham <- subset(c13, subset = group=="Sham")
c13.sham <- GetAssayData(c13.sham, slot = "data", assay = "RNA")
c13.sham <- as.matrix(c13.sham)
c13.sham <- log(rowMeans(expm1(c13.sham))+1,2)
c13.sham <- c13.sham[unique.list]

fc.c3 <- c3.ion-c3.sham
fc.c4 <- c4.ion-c4.sham
fc.c9 <- c9.ion-c9.sham
fc.c13 <- c13.ion-c13.sham

cx <- cbind(c3.sham,c3.ion,fc.c3,
	    c4.sham,c4.ion,fc.c4,
	    c9.sham,c9.ion,fc.c9,
	    c13.sham,c13.ion,fc.c13)

write.table(cx,"cx.txt",sep="\t")

fcs <- cbind(fc.c3,fc.c4,fc.c9,fc.c13)
dimnames(fcs)[[2]] <- c("C3_ION_vs_Sham","C4_ION_vs_Sham","C9_ION_vs_Sham","C13_ION_vs_Sham")

library(pheatmap)
install.packages("GiNA")
library(GiNA)

fcs.list.l4 <- fcs[list.l4,]
svg("list.l4.svg")
pheatmap(fcs.list.l4,color = colorRampPalette(rev(brewer.pal(n = 7, name =
  "RdYlGn")))(100),cellheight=12,cellwidth=12)
dev.off()

fcs.list.calcium.channels <- fcs[list.calcium.channels,]
svg("list.calcium.channels.svg")
pheatmap(fcs.list.calcium.channels,color = colorRampPalette(rev(brewer.pal(n = 7, name =
  "RdYlGn")))(100),cellheight=12,cellwidth=12)
dev.off()

fcs.list.ca.related.signaling <- fcs[list.ca.related.signaling,]
svg("list.ca.related.signaling.svg")
pheatmap(fcs.list.ca.related.signaling,color = colorRampPalette(rev(brewer.pal(n = 7, name =
  "RdYlGn")))(100),cellheight=12,cellwidth=12)
dev.off()

fcs.list.ionotropic.glutamate.receptors <- fcs[list.ionotropic.glutamate.receptors,]
svg("list.ionotropic.glutamate.receptors.svg")
pheatmap(fcs.list.ionotropic.glutamate.receptors,color = colorRampPalette(rev(brewer.pal(n = 7, name =
  "RdYlGn")))(100),cellheight=12,cellwidth=12)
dev.off()

fcs.list.metabotropic.glutamate.receptors <- fcs[list.metabotropic.glutamate.receptors,]
svg("list.metabotropic.glutamate.receptors.svg")
pheatmap(fcs.list.metabotropic.glutamate.receptors,color = colorRampPalette(rev(brewer.pal(n = 7, name =
  "RdYlGn")))(100),cellheight=12,cellwidth=12)
dev.off()

fcs.list.cell.signaling.regulation <- fcs[list.cell.signaling.regulation,]
svg("list.cell.signaling.regulation.svg")
pheatmap(fcs.list.cell.signaling.regulation,color = colorRampPalette(rev(brewer.pal(n = 7, name =
  "RdYlGn")))(100),cellheight=12,cellwidth=12)
dev.off()

fcs.list.cell.metabolism <- fcs[list.cell.metabolism,]
svg("list.cell.metabolism.svg")
pheatmap(fcs.list.cell.metabolism,color = colorRampPalette(rev(brewer.pal(n = 7, name =
  "RdYlGn")))(100),cellheight=12,cellwidth=12)
dev.off()

fcs.list.cell.adhesion.molecules <- fcs[list.cell.adhesion.molecules,]
svg("list.cell.adhesion.molecules.svg")
pheatmap(fcs.list.cell.adhesion.molecules,color = colorRampPalette(rev(brewer.pal(n = 7, name =
  "RdYlGn")))(100),cellheight=12,cellwidth=12)
dev.off()

fcs.list.protein.kinases <- fcs[list.protein.kinases,]
svg("list.protein.kinases.svg")
pheatmap(fcs.list.protein.kinases,color = colorRampPalette(rev(brewer.pal(n = 7, name =
  "RdYlGn")))(100),cellheight=12,cellwidth=12)
dev.off()

fcs.list.vesicle.cycling <- fcs[list.vesicle.cycling,]
svg("list.vesicle.cycling.svg")
pheatmap(fcs.list.vesicle.cycling,color = colorRampPalette(rev(brewer.pal(n = 7, name =
  "RdYlGn")))(100),cellheight=12,cellwidth=12)
dev.off()

#------------------------------------------------------------------------------
# Layer 4 Neuron Drill Down Look - Resolution 0.6 (20220718)
#------------------------------------------------------------------------------

setwd("/data/johnsonko/SideProject/Emily")
# load("Rsession_20220625.RData")
# load("Rsession_Seurat_20220718.RData")

temp1 <- drilldown.all.combined.sct.res.0.6@meta.data$integrated_snn_res.0.6==3
temp2 <- drilldown.all.combined.sct.res.0.6@meta.data$integrated_snn_res.0.6==4
temp3 <- drilldown.all.combined.sct.res.0.6@meta.data$integrated_snn_res.0.6==9
temp4 <- drilldown.all.combined.sct.res.0.6@meta.data$integrated_snn_res.0.6==13
temp5 <- temp1+temp2+temp3+temp4
temp5 <- temp5==1
table(temp5)

drilldown.all.combined.sct.res.0.6.layer4 <- drilldown.all.combined.sct.res.0.6[,temp5]

svg("neuron_drilldown_resolution_0.6_layer4_subset_umap.svg")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.0.6")
dev.off()
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.0.6")

DefaultAssay(drilldown.all.combined.sct.res.0.6.layer4) <- "integrated"

drilldown.all.combined.sct.res.0.6.layer4 <- FindNeighbors(drilldown.all.combined.sct.res.0.6.layer4, dims = 1:100, verbose = FALSE)

drilldown.all.combined.sct.res.0.6.layer4 <- FindClusters(drilldown.all.combined.sct.res.0.6.layer4,resolution=c(0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,1.1,1.2,1.3,1.4,1.5),save.SNN=TRUE)

pdf("neuron_drilldown_resolution_0.6_layer4_subset_res_landscape.pdf")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.0.04")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.0.05")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.0.06")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.0.07")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.0.08")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.0.09")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.0.1")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.0.2")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.0.3")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.0.4")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.0.5")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.0.6")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.0.7")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.0.8")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.0.9")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.1")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.1.1")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.1.2")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.1.3")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.1.4")
DimPlot(drilldown.all.combined.sct.res.0.6.layer4, label=TRUE,group.by="integrated_snn_res.1.5")
dev.off()

svg("neuron_drilldown_resolution_0.6_layer4_subset_res_clustree.svg",width=7,height=20)
clustree(drilldown.all.combined.sct.res.0.6.layer4,prefix="integrated_snn_res.")
dev.off()

# testing

drilldown.all.combined.sct.res.x <- drilldown.all.combined.sct.res.0.6.layer4
DefaultAssay(drilldown.all.combined.sct.res.x) <- "RNA"

Idents(drilldown.all.combined.sct.res.x) <- factor(drilldown.all.combined.sct.res.x@meta.data$cell_type,levels=as.character(c(3,4,9,13)))

conserved.markers.3 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "3", grouping.var="group", only.pos = TRUE)
conserved.markers.4 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "4", grouping.var="group", only.pos = TRUE)
conserved.markers.9 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "9", grouping.var="group", only.pos = TRUE)
conserved.markers.13 <- FindConservedMarkers(drilldown.all.combined.sct.res.x, ident.1 = "13", grouping.var="group", only.pos = TRUE)

# cluster 3
www <- conserved.markers.3
ccc <- "3"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.3.f <- cx.final

# cluster 4
www <- conserved.markers.4
ccc <- "4"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.4.f <- cx.final

# cluster 13
www <- conserved.markers.13
ccc <- "13"
grab.0.ion <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.ion <- subset(grab.0.ion, subset = group=="ION")
grab.0.ion <- GetAssayData(grab.0.ion, slot = "data", assay = "RNA")
grab.0.ion <- as.matrix(grab.0.ion)
grab.0.ion.total <- dim(grab.0.ion)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.ion <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.ion <- subset(grab.non.0.ion, subset = group=="ION")
grab.non.0.ion <- GetAssayData(grab.non.0.ion, slot = "data", assay = "RNA")
grab.non.0.ion <- as.matrix(grab.non.0.ion)
grab.non.0.ion.total <- dim(grab.non.0.ion)[2]
w <- rownames(www)
grab.0.ion <- grab.0.ion[w,]
grab.non.0.ion <- grab.non.0.ion[w,]
grab.0.ion.mean <- log(rowMeans(expm1(grab.0.ion))+1,2)
grab.non.0.ion.mean <- log(rowMeans(expm1(grab.non.0.ion))+1,2)
grab.0.ion.sd <- log(apply(expm1(grab.0.ion),1,sd)+1,2)
grab.non.0.ion.sd <- log(apply(expm1(grab.non.0.ion),1,sd)+1,2)
grab.0.ion <- ifelse(grab.0.ion==0,NA,grab.0.ion)
grab.non.0.ion <- ifelse(grab.non.0.ion==0,NA,grab.non.0.ion)
grab.0.ion.n <- apply(grab.0.ion,1,is.na)
grab.0.ion.n <- grab.0.ion.n==FALSE
grab.0.ion.n <- apply(grab.0.ion.n,2,sum)
grab.non.0.ion.n <- apply(grab.non.0.ion,1,is.na)
grab.non.0.ion.n <- grab.non.0.ion.n==FALSE
grab.non.0.ion.n <- apply(grab.non.0.ion.n,2,sum)
grab.0.sham <- subset(drilldown.all.combined.sct.res.x, idents = ccc)
grab.0.sham <- subset(grab.0.sham, subset = group=="Sham")
grab.0.sham <- GetAssayData(grab.0.sham, slot = "data", assay = "RNA")
grab.0.sham <- as.matrix(grab.0.sham)
grab.0.sham.total <- dim(grab.0.sham)[2]
w <- Idents(drilldown.all.combined.sct.res.x)
w <- as.character(w)
w <- w != ccc
grab.non.0.sham <- drilldown.all.combined.sct.res.x[,w]
grab.non.0.sham <- subset(grab.non.0.sham, subset = group=="Sham")
grab.non.0.sham <- GetAssayData(grab.non.0.sham, slot = "data", assay = "RNA")
grab.non.0.sham <- as.matrix(grab.non.0.sham)
grab.non.0.sham.total <- dim(grab.non.0.sham)[2]
w <- rownames(www)
grab.0.sham <- grab.0.sham[w,]
grab.non.0.sham <- grab.non.0.sham[w,]
grab.0.sham.mean <- log(rowMeans(expm1(grab.0.sham))+1,2)
grab.non.0.sham.mean <- log(rowMeans(expm1(grab.non.0.sham))+1,2)
grab.0.sham.sd <- log(apply(expm1(grab.0.sham),1,sd)+1,2)
grab.non.0.sham.sd <- log(apply(expm1(grab.non.0.sham),1,sd)+1,2)
grab.0.sham <- ifelse(grab.0.sham==0,NA,grab.0.sham)
grab.non.0.sham <- ifelse(grab.non.0.sham==0,NA,grab.non.0.sham)
grab.0.sham.n <- apply(grab.0.sham,1,is.na)
grab.0.sham.n <- grab.0.sham.n==FALSE
grab.0.sham.n <- apply(grab.0.sham.n,2,sum)
grab.non.0.sham.n <- apply(grab.non.0.sham,1,is.na)
grab.non.0.sham.n <- grab.non.0.sham.n==FALSE
grab.non.0.sham.n <- apply(grab.non.0.sham.n,2,sum)
cx <- cbind(grab.0.ion.total,
	    grab.0.ion.n,
	    grab.0.ion.mean,
	    grab.0.ion.sd,
	    grab.non.0.ion.total,
	    grab.non.0.ion.n,
	    grab.non.0.ion.mean,
	    grab.non.0.ion.sd,
	    grab.0.sham.total,
	    grab.0.sham.n,
	    grab.0.sham.mean,
	    grab.0.sham.sd,
	    grab.non.0.sham.total,
	    grab.non.0.sham.n,
	    grab.non.0.sham.mean,
	    grab.non.0.sham.sd)
cx <- as.data.frame(cx)
dimnames(cx)[[2]] <- c("ION_in_Cluster_total_ncells",		# 1
		       "ION_in_Cluster_expressed_ncells",	# 2
		       "ION_in_Cluster_mean",			# 3
		       "ION_in_Cluster_sd",			# 4
		       "ION_not_in_Cluster_total_ncells",	# 5
		       "ION_not_in_Cluster_ncells",		# 6
		       "ION_not_in_Cluster_mean",		# 7
		       "ION_not_in_Cluster_sd",			# 8
		       "Sham_in_Cluster_total_ncells",		# 9
		       "Sham_in_Cluster_ncells",		# 10
		       "Sham_in_Cluster_mean",			# 11
		       "Sham_in_Cluster_sd",			# 12
		       "Sham_not_in_Cluster_total_ncells",	# 13
		       "Sham_not_in_Cluster_ncells",		# 14
		       "Sham_not_in_Cluster_mean",		# 15
		       "Sham_not_in_Cluster_sd")		# 16
www <- as.data.frame(www)
dimnames(www)[[2]] <- c("ION_in_Cluster_vs_ION_not_in_Cluster_pvalue",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_log2_FoldChange",
		       "ION_in_Cluster_expressed_percent",
		       "ION_not_in_Cluster_expressed_percent",
		       "ION_in_Cluster_vs_ION_not_in_Cluster_pvalue_corrected",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_log2_FoldChange",
		       "Sham_in_Cluster_expressed_percent",
		       "Sham_not_in_Cluster_expressed_percent",
		       "Sham_in_Cluster_vs_Sham_not_in_Cluster_pvalue_corrected",
		       "Maximum_pvalue_observed",
		       "Minimum_pvalue_observed")
cx.final <- cbind(cx[,c(1,2)],
            www[,c(3)],
	    cx[,c(3,4,5,6)],
	    www[,c(4)],
	    cx[,c(7,8)],
	    www[,c(2,1,5)],
	    cx[,c(9,10)],
	    www[,c(8)],
	    cx[,c(11,12,13,14)],
	    www[,c(9)],
	    cx[,c(15,16)],
	    www[,c(7,6,10,12,11)])
dimnames(cx.final)[[2]][3] <- dimnames(www)[[2]][3]
dimnames(cx.final)[[2]][8] <- dimnames(www)[[2]][4]
dimnames(cx.final)[[2]][16] <- dimnames(www)[[2]][8]
dimnames(cx.final)[[2]][21] <- dimnames(www)[[2]][9]
conserved.markers.13.f <- cx.final

wb <- createWorkbook("conserved.marjer.testing")
addWorksheet(wb, "cluster.3")
writeData(wb, sheet = "cluster.3", conserved.markers.3.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.4")
writeData(wb, sheet = "cluster.4", conserved.markers.4.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.9")
writeData(wb, sheet = "cluster.9", conserved.markers.9.f, colNames = TRUE, rowNames = TRUE)
addWorksheet(wb, "cluster.13")
writeData(wb, sheet = "cluster.13", conserved.markers.13.f, colNames = TRUE, rowNames = TRUE)
saveWorkbook(wb, "conserved.marjer.testing.xlsx", overwrite = TRUE)
rm(wb)

features <- c(rownames(conserved.markers.3.f)[c(1:5)],
rownames(conserved.markers.4.f)[c(1:5)],
rownames(conserved.markers.9.f)[c(1:5)],
rownames(conserved.markers.13.f)[c(1:5)])

p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.per.cluster.stacked.violin.plot.svg",height=20)
print(p)
dev.off()

# 3
features <- rownames(conserved.markers.3.f)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.3.stacked.violin.plot.svg")
print(p)
dev.off()
p

# 4
features <- rownames(conserved.markers.4.f)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.4.stacked.violin.plot.svg")
print(p)
dev.off()
p

# 9
features <- rownames(conserved.markers.9.f)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.9.stacked.violin.plot.svg")
print(p)
dev.off()
p

# 13
features <- rownames(conserved.markers.13.f)[c(1:5)]
p <- VlnPlot(drilldown.all.combined.sct.res.x,features,stack=TRUE,sort=FALSE,flip=TRUE,fill.by="ident")
p <- p + xlab("Cluster")
svg("top5.conserved.markers.across.ION.Sham.for.cluster.13.stacked.violin.plot.svg")
print(p)
dev.off()
p

features <- c(rownames(conserved.markers.3.f)[c(1:5)],
rownames(conserved.markers.4.f)[c(1:5)],
rownames(conserved.markers.9.f)[c(1:5)],
rownames(conserved.markers.13.f)[c(1:5)])

svg("top5.conserved.markers.across.ION.Sham.per.cluster.dot.plot.svg")
print(DotPlot(drilldown.all.combined.sct.res.x, features = features, dot.scale = 8) + RotatedAxis() + ggtitle("Top 5 Conserved Markers Per Cluster"))
dev.off()

save.image("Rsession_Seurat_20220718.RData")

